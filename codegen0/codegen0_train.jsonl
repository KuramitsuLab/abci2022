{"in": "nを切り捨てながらn2分の一にする", "out": "n //= n2"}
{"in": "ビスク色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='bisque')"}
{"in": "option: マーカーの色をブルーバイオレットにする", "out": "markerfacecolor = 'blueviolet'"}
{"in": "文字列中にひとつでも非小文字が含まれるか調べる", "out": "any(not c.islower() for c in s)"}
{"in": "日付時刻データをn週間前に戻す", "out": "aDatetime - datetime.timedelta(weeks=n)"}
{"in": "option: 配列のデータ型を指定する", "out": "dtype = np.int8"}
{"in": "ヒストグラムの色をダークオレンジに設定する", "out": "plt.hist(データ列, color='darkorange')"}
{"in": "データフレームの列の各データが何回出現するか見る", "out": "df[col].value_counts()"}
{"in": "ホールドアウト法を使う", "out": "X_train, X_test, y_train, y_test = train_test_split(説明変数, 目的変数, test_size=0.3)"}
{"in": "折れ線グラフを青紫色で描画する", "out": "plt.plot(データ列x, データ列y, color='violet')"}
{"in": "ヒストグラムの色をダークオリーブグリーンに設定する", "out": "plt.hist(データ列, color='darkolivegreen')"}
{"in": "option: グラフの色をカデットブルーに設定する", "out": "color = 'cadetblue'"}
{"in": "折れ線グラフの色をホワイトスモークに設定する", "out": "plt.plot(データ列x, データ列y, color='whitesmoke')"}
{"in": "配列をビン数nでビン分割して、namesのラベルをつける", "out": "pd.cut(aArray, n, labels=names)"}
{"in": "ハニーデュー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='honeydew')"}
{"in": "ゴールデンロッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='goldenrod')"}
{"in": "ラジアンの角度", "out": "math.degrees(x)"}
{"in": "折れ線グラフのバツマーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='x', markersize=2.0)"}
{"in": "散布図の色をグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='green')"}
{"in": "辞書にキーワード引数で更新する", "out": "aDict.update(**kwargs)"}
{"in": "マルーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='maroon')"}
{"in": "棒グラフの色をロージーブラウンにする", "out": "plt.bar(データ列x, データ列y, color='rosybrown')"}
{"in": "データシリーズを十の位で丸めて、整数型にする", "out": "ds.round(-1).astype(int)"}
{"in": "指定した列のカテゴリで集計し、それぞれの最小値を求める", "out": "df.groupby('列A').min()"}
{"in": "棒グラフの色をグレーにする", "out": "plt.bar(データ列x, データ列y, color='grey')"}
{"in": "option: ライトブルー色を使う", "out": "color = 'lightblue'"}
{"in": "グラフの用途を画面に設定する", "out": "sns.set(context='notebook')"}
{"in": "ヒストグラムの色をラベンダーに設定する", "out": "plt.hist(データ列, color='lavender')"}
{"in": "名前付きタプルを定義する", "out": "C = collections.namedtuple('クラス名', プロパティ名)"}
{"in": "リストの末尾", "out": "aList[-1]"}
{"in": "文字列の開始位置以降に部分文字列が含まれるか調べる", "out": "s.find(sub, start) != -1"}
{"in": "option: マーカーの色をゴーストホワイトにする", "out": "markerfacecolor = 'ghostwhite'"}
{"in": "黄色色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='yellow')"}
{"in": "ファイルをバイナリモードでオープンする]", "out": "open(filepath, mode='rb')"}
{"in": "散布図に黒い丸マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='o', c='k')"}
{"in": "データフレームの中の列をn個にビン分割して、namesのラベルをつける", "out": "pd.cut(df[col], n, labels=names)"}
{"in": "耐火レンガ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='firebrick')"}
{"in": "異なる列をキーとして二つのデータフレームを左ジョインする", "out": "pd.merge(df, df2, left_on='列A', right_on='列B', how='left')"}
{"in": "下三角印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='v')"}
{"in": "文字列を末尾から空白で区切る", "out": "s.rsplit()"}
{"in": "横軸の目盛を非表示にする", "out": "plt.xticks([])"}
{"in": "横棒グラフの色をシャルトリューズにする", "out": "plt.barh(データ列x, データ列y, color='chartreuse')"}
{"in": "行列の列ごとの最小値", "out": "np.min(aArray, axis=0)"}
{"in": "要素ひとつのりスト", "out": "[element]"}
{"in": "データフレームから重複をドロップする", "out": "df.drop_duplicates(inplace=True)"}
{"in": "イテラブルとイテラブルを連結する", "out": "itertools.chain(iterable, iterable2)"}
{"in": "イテラブルを両端キューに変換する", "out": "collections.deque(iterable)"}
{"in": "option: マーカーの色をバリーウッドにする", "out": "markerfacecolor = 'burlywood'"}
{"in": "ダークスレートブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkslateblue')"}
{"in": "リストを等間隔でn個にビン分割する", "out": "pd.cut(aList, n)"}
{"in": "option: グラフの色をシャルトリューズに設定する", "out": "color = 'chartreuse'"}
{"in": "丸印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='o')"}
{"in": "両端キューをポップする", "out": "deq.pop()"}
{"in": "タン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='tan')"}
{"in": "横棒グラフの色をアイボリーにする", "out": "plt.barh(データ列x, データ列y, color='ivory')"}
{"in": "ダークグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkgreen')"}
{"in": "ヒストグラムをライム色で描画する", "out": "plt.hist(データ列, color='lime')"}
{"in": "ダークシアン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkcyan')"}
{"in": "散布図に右三角マーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='>')"}
{"in": "改行", "out": "'\\n'"}
{"in": "棒グラフをモカシン色で描画する", "out": "plt.bar(データ列x, データ列y, color='moccasin')"}
{"in": "折れ線グラフのマーカーをポイントにする", "out": "plt.plot(データ列x, データ列y, marker='.')"}
{"in": "空のカウンタ", "out": "collections.Counter()"}
{"in": "散布図のマーカーを青くする", "out": "plt.scatter(データ列x, データ列y, markerfacecolor='b')"}
{"in": "リストを引数として展開して表示する", "out": "print(*aList)"}
{"in": "option: グラフの色をレベッカパープルに設定する", "out": "color = 'rebeccapurple'"}
{"in": "ライトスレイグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightslategray')"}
{"in": "option: グラフの色をライトスレイグレーに設定する", "out": "color = 'lightslategrey'"}
{"in": "タプルとタプルを連結する", "out": "aTuple + aTuple2"}
{"in": "option: マーカーの色をピーチパフにする", "out": "markerfacecolor = 'peachpuff'"}
{"in": "折れ線グラフを半透明にする", "out": "plt.plot(データ列x, データ列y, alpha=0.5)"}
{"in": "ヒストグラムの色を淡いピンク色に設定する", "out": "plt.hist(データ列, color='lightpink')"}
{"in": "JSON形式の文字列をデータに変換する", "out": "json.loads(jsonString)"}
{"in": "ヒストグラムの色を暗い赤に設定する", "out": "plt.hist(データ列, color='darkred')"}
{"in": "データフレームのカラムの最頻値を求める", "out": "mode, count = scipy.stats.mode(df['列A'])"}
{"in": "ゼロ埋めされた複素数型の配列", "out": "np.zeros(要素数, dtype=bool)"}
{"in": "棒グラフの色をベージュにする", "out": "plt.bar(データ列x, データ列y, color='beige')"}
{"in": "棒グラフをマルーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='maroon')"}
{"in": "option: マーカーの色をマゼンタにする", "out": "markerfacecolor = 'magenta'"}
{"in": "n番目の列を除いたデータフレーム", "out": "pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)"}
{"in": "データシリーズが正規分布からどの程度、歪んでいるか見る", "out": "ds.kurt()"}
{"in": "文字列を置き換える", "out": "s.replace(sub, newsub)"}
{"in": "ダークグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkgreen')"}
{"in": "棒グラフをハニーデュー色で描画する", "out": "plt.bar(データ列x, データ列y, color='honeydew')"}
{"in": "日付時刻データにn分分、加算する", "out": "aDatetime + datetime.timedelta(minutes=n)"}
{"in": "option: グラフの色をミディアムスプリンググリーンに設定する", "out": "color = 'mediumspringgreen'"}
{"in": "ヒストグラムをオールドレース色で描画する", "out": "plt.hist(データ列, color='oldlace')"}
{"in": "リストとリストについての散布図に赤い右三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='>', c='r')"}
{"in": "データフレームの欠損値を最頻値に設定する", "out": "df.fillna(df.mode().iloc[0])"}
{"in": "二次元リストを転置する", "out": "[list(x) for x in list(zip(*aList))]"}
{"in": "エクセルファイルから全てのシートを読み込む", "out": "pd.read_excel('file.xlsx', sheet_name=None)"}
{"in": "データシリーズをデータフレームの日付インデックスにする", "out": "df.index = pd.DatetimeIndex(pd.to_datetime(ds))"}
{"in": "文字列から部分文字列を全て取り除く", "out": "s.replace(sub, '')"}
{"in": "二つのデータフレームを横方向にマージする", "out": "pd.merge(df, df2)"}
{"in": "ヒストグラムと勾配ブースティングでクラス分類を行う", "out": "model = sklearn.ensemble.HistGradientBoostingClassifier()"}
{"in": "横棒グラフをフォレストグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='forestgreen')"}
{"in": "棒グラフの色をライムにする", "out": "plt.bar(データ列x, データ列y, color='lime')"}
{"in": "両端キューが空か調べる", "out": "len(deq) == 0"}
{"in": "データフレームの選択したカラムの欠損値を直前の値に設定する", "out": "df[['列A', '列B']].fillna(method='ffill')"}
{"in": "全要素が初期値の行列", "out": "np.full((行数, 列数), 初期値, dtype=np.int)"}
{"in": "ダークオリーブグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkolivegreen')"}
{"in": "文字列のケースを入れ替える", "out": "s.swapcase()"}
{"in": "文字列が全て大文字か調べる", "out": "s.isupper()"}
{"in": "両端キューの最大長", "out": "deq.maxlen"}
{"in": "配列のユニークな要素とその個数", "out": "u, counts = np.unique(aArray, return_counts=True)"}
{"in": "グラフ中の(x,y)の位置に凡例を表示する", "out": "plt.legend(loc=(x, y))"}
{"in": "ライトスカイブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightskyblue')"}
{"in": "折れ線グラフの大バツマーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='X', markerfacecolor='b')"}
{"in": "集合から要素を取り除く", "out": "aSet.remove(element)"}
{"in": "指定した列のカテゴリで集計し、それぞれの個数を求める", "out": "df.groupby('列A').count()"}
{"in": "データフレームの平均値", "out": "df.mean()"}
{"in": "データ列からユニークな要素を抽出し、リスト化する", "out": "ds.unique().tolist()"}
{"in": "横棒グラフをハニーデュー色で描画する", "out": "plt.barh(データ列x, データ列y, color='honeydew')"}
{"in": "option: ライトシアン色を使う", "out": "color = 'lightcyan'"}
{"in": "ドジャーブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='dodgerblue')"}
{"in": "折れ線グラフの下三角マーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='v', markerfacecolor='#800080')"}
{"in": "平均線付き箱ひげ図を描画する", "out": "plt.boxplot(データ列, meanline=True)"}
{"in": "グラフにx=0の点線を付ける", "out": "plt.axvline(x=0, linestyle='dotted')"}
{"in": "ライトイエロー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightyellow')"}
{"in": "整数nをバイト列に変換する", "out": "n.to_bytes(length=bytesize, byteorder='big')"}
{"in": "データフレームをグループ化し、それぞれの合計を求める", "out": "df.groupby('列A').sum()"}
{"in": "多次元データをt-SNEで濃く次元に次元削減する", "out": "sklearn.manifold.TSNE(n_components=二).fit_transform(多次元データ)"}
{"in": "データシリーズの時", "out": "ds.dt.hour"}
{"in": "縦軸の最大・最小を変更する", "out": "plt.ylim(最小値, 最大値)"}
{"in": "文字列の中でASCII限定として正規表現にマッチした全ての文字列をリストに変換する", "out": "re.findall(pattern, s, flags=re.ASCI)"}
{"in": "棒グラフの色をライトスレイグレーにする", "out": "plt.bar(データ列x, データ列y, color='lightslategray')"}
{"in": "データフレームの指定したカラムのパーセンタイル", "out": "df['列A'].quantile(パーセント/100)"}
{"in": "両端キューを空にする", "out": "deq.clear()"}
{"in": "折れ線グラフをライトグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightseagreen')"}
{"in": "ダークオーキッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkorchid')"}
{"in": "横軸の目盛の表示を変更する", "out": "plt.xticks(目盛りの値リスト)"}
{"in": "option: マーカーの色をミディアムブルーにする", "out": "markerfacecolor = 'mediumblue'"}
{"in": "ミディアムアクアマリン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "列名を指定して二つのデータフレームを右ジョインする", "out": "pd.merge(df, df2, on='列A', how='right')"}
{"in": "データフレームの選択したカラムの値が欠損値か調べる", "out": "df[['列A', '列B']].isna()"}
{"in": "ミディアムオーキッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumorchid')"}
{"in": "横棒グラフの色をスチールブルーにする", "out": "plt.barh(データ列x, データ列y, color='steelblue')"}
{"in": "散布図をデピンク色で描画する", "out": "plt.scatter(データ列x, データ列y, color='deeppink')"}
{"in": "イエローグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='yellowgreen')"}
{"in": "formatパターンの文字列を日付時刻に変換する", "out": "datetime.datetime.strptime(日付の書かれた文字列, format)"}
{"in": "折れ線グラフの左三角マーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='<', markersize=2.0)"}
{"in": "オーキッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='orchid')"}
{"in": "紺碧色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='azure')"}
{"in": "リストとリストについて散布図を描画して、マーカーを三角に設定する", "out": "plt.plot(データ列x, データ列y, marker='^')"}
{"in": "ネイビー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='navy')"}
{"in": "散布図の色をダークオリーブグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='darkolivegreen')"}
{"in": "プラットホームがWindowsか調べる", "out": "sys.platform.startswith('win32')"}
{"in": "データフレームのヒストグラムを横に並べて、可視化する", "out": "sns.displot(df, x='列名', col='カテゴリ名')"}
{"in": "nから無限にカウントアップする", "out": "itertools.count(start=n)"}
{"in": "データフレームの選択したカラムの欠損値を平均値に設定する", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].mean())"}
{"in": "折れ線グラフの色をライトスレイグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='lightslategrey')"}
{"in": "棒グラフをグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='green')"}
{"in": "折れ線グラフを青緑色で描画する", "out": "plt.plot(データ列x, データ列y, color='teal')"}
{"in": "日付時刻データと日付時刻データの時間差を秒数で求める", "out": "(aDatetime - aDatetime2).total_seconds()//60"}
{"in": "データフレームのカラムの尖度を求める", "out": "scipy.stats.kurtosis(df['列A'], bias=False)"}
{"in": "データフレームをグループ化し、それぞれの個数を求める", "out": "df.groupby('列A').count()"}
{"in": "横棒グラフをダークグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkgrey')"}
{"in": "黒い星マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='*', c='k')"}
{"in": "横棒グラフをライトスカイブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightskyblue')"}
{"in": "ファイルを書き込みモードでオープンして]、fとする", "out": "f = open(filepath, mode='w')"}
{"in": "nをn2だけ増加させる", "out": "n += n2"}
{"in": "散布図をオレンジレッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='orangered')"}
{"in": "横棒グラフをミディアムパープル色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumpurple')"}
{"in": "棒グラフをダークカーキ色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkkhaki')"}
{"in": "横棒グラフの色をライムグリーンにする", "out": "plt.barh(データ列x, データ列y, color='limegreen')"}
{"in": "モデルの当てはめを実行する", "out": "model.fit(説明変数, 目的変数)"}
{"in": "横棒グラフの色をスラグレーにする", "out": "plt.barh(データ列x, データ列y, color='slategrey')"}
{"in": "グラフにグリッド線を入れる", "out": "plt.grid(True)"}
{"in": "乱数で要素を埋めた配列", "out": "np.random.random(N)"}
{"in": "リストを反転する", "out": "reversed(aList)"}
{"in": "日付データをn時間前に戻す", "out": "aDate - datetime.timedelta(hours=n)"}
{"in": "横棒グラフをプラム色で描画する", "out": "plt.barh(データ列x, データ列y, color='plum')"}
{"in": "predicateFuncが真となるイテラブルの要素", "out": "itertools.dropwhile(predicateFunc, iterable)"}
{"in": "データフレームの末尾10行を抽出する", "out": "df.tail(10)"}
{"in": "散布図の色をダークバイオレットにする", "out": "plt.scatter(データ列x, データ列y, color='darkviolet')"}
{"in": "ヒストグラムを実線で描画する", "out": "plt.hist(データ列, linestyle='solid')"}
{"in": "折れ線グラフに丸マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='o')"}
{"in": "データフレームからランダムに5行を抽出する", "out": "df.sample(5)"}
{"in": "データフレームのあるカラムの日", "out": "df['列A'].dt.day"}
{"in": "リストとリストについて散布図を描画して、下三角マーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='v', c=rgb)"}
{"in": "辞書に辞書の項目を更新する", "out": "aDict.update(aDict2)"}
{"in": "棒グラフをブランチドアーモンド色で描画する", "out": "plt.bar(データ列x, データ列y, color='blanchedalmond')"}
{"in": "棒グラフの色をブラックにする", "out": "plt.bar(データ列x, データ列y, color='black')"}
{"in": "year年month月day日hour時の日付時刻", "out": "datetime.datetime(year=year, month=month, day=day, hour=hour)"}
{"in": "オブジェクトは論理値クラスか調べる", "out": "isinstance(obj, bool)"}
{"in": "イテラブルの長さを制限する", "out": "collections.deque(iterable, maxlen=n)"}
{"in": "逆順の両端キュー", "out": "reversed(deq)"}
{"in": "グラフのカラーパレットをパステル調にする", "out": "sns.set(pallete='pastel')"}
{"in": "棒グラフの色をダークシアンにする", "out": "plt.bar(データ列x, データ列y, color='darkcyan')"}
{"in": "option: エラーがあるとき、例外を発生させるように設定する", "out": "errors = 'strict'"}
{"in": "グラフの凡例を表示する", "out": "plt.legend()"}
{"in": "文字列中から正規表現に大文字・小文字を無視してマッチする文字列を探す", "out": "re.search(pattern, s, flags=re.IGNORECASE)"}
{"in": "白色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='white')"}
{"in": "option: グラフの色をディムグレーに設定する", "out": "color = 'dimgrey'"}
{"in": "ヒストグラムの色をモカシンに設定する", "out": "plt.hist(データ列, color='moccasin')"}
{"in": "点線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted')"}
{"in": "ファイルのファイル名", "out": "os.path.basename(filepath)"}
{"in": "データフレームの尖度", "out": "df.skew()"}
{"in": "グラフの描画で暗くカラーパレットを使う", "out": "sns.set(pallete='dark')"}
{"in": "大バツマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='X')"}
{"in": "文字列を空白で区切って、文字列リストに変換する", "out": "s.split()"}
{"in": "ライトグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightgreen')"}
{"in": "リストとリストについての散布図に赤い三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='^', c='r')"}
{"in": "トマト色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='tomato')"}
{"in": "ミディアムシアグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumseagreen')"}
{"in": "本日の日付時刻", "out": "datetime.datetime.now()"}
{"in": "option: グラフの色をライトグリーンに設定する", "out": "color = 'lightgreen'"}
{"in": "option: グラフの種類を破線に設定する", "out": "linestyle = 'dashed'"}
{"in": "文字列を走査し、正規表現にASCII限定としてマッチするか見る", "out": "re.search(pattern, s, flags=re.ASCI)"}
{"in": "日付データが何月か知る", "out": "aDate.month"}
{"in": "ファイルからバイナリ書き込みストリームをオープンして]、fとする", "out": "f = open(filepath, mode='wb')"}
{"in": "データフレームの列のユニークな値の個数", "out": "df[col].nunique()"}
{"in": "nがn2未満、またはn3以上か調べる", "out": "n < n2 or n >= n3"}
{"in": "辞書のキーの値", "out": "aDict[key]"}
{"in": "フローラルホワイト色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='floralwhite')"}
{"in": "ヒストグラムの色をオレンジレッドに設定する", "out": "plt.hist(データ列, color='orangered')"}
{"in": "折れ線グラフの色を赤に設定する", "out": "plt.plot(データ列x, データ列y, color='red')"}
{"in": "文字列の中のASCII限定として正規表現による全てのマッチを使う", "out": "re.findall(pattern, s, flags=re.ASCI)"}
{"in": "JSONLファイルを読み込む", "out": "pd.read_json(filename, orient='records', lines=True)"}
{"in": "エクセルファイルをデータフレームとして読み込む", "out": "pd.read_excel('file.xlsx')"}
{"in": "日付データが何曜日か知る", "out": "aDate.weekday()"}
{"in": "横棒グラフの色をマゼンタにする", "out": "plt.barh(データ列x, データ列y, color='magenta')"}
{"in": "散布図にバツマーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='x')"}
{"in": "データフレームのあるカラムの曜日数", "out": "df['列A'].dt.dayofweek"}
{"in": "散布図の色をミディアムオーキッドにする", "out": "plt.scatter(データ列x, データ列y, color='mediumorchid')"}
{"in": "ヒストグラムをペルー色で描画する", "out": "plt.hist(データ列, color='peru')"}
{"in": "option: シエナ色を使う", "out": "color = 'sienna'"}
{"in": "option: セパレータを改行にする", "out": "sep = '\\n'"}
{"in": "ダイアモンド印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='D')"}
{"in": "散布図の星マーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='*', markeredgewidth=2.5)"}
{"in": "変数を定義する", "out": "x = n"}
{"in": "ピンク色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='pink')"}
{"in": "データフレームをある列によって昇順にソートして、更新する", "out": "df.sort_values(by='列A', ascending=True, inplace=True)"}
{"in": "データフレームの中の列をビン数nでビン分割する", "out": "pd.cut(df[col], n)"}
{"in": "折れ線グラフの色をシエナに設定する", "out": "plt.plot(データ列x, データ列y, color='sienna')"}
{"in": "オブジェクトは整数クラスか調べる", "out": "isinstance(obj, int)"}
{"in": "棒グラフをゴールド色で描画する", "out": "plt.bar(データ列x, データ列y, color='gold')"}
{"in": "ダークシアン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkcyan')"}
{"in": "スチールブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='steelblue')"}
{"in": "偽陰性を避けたい指標を使う", "out": "sklearn.metrics.recall_score(正解データ列, 予測データ列)"}
{"in": "右三角印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='>')"}
{"in": "勾配ブースティングでクラス分類を行う", "out": "model = sklearn.ensemble.GradientBoostingClassifier()"}
{"in": "ヒストグラムをパープル色で描画する", "out": "plt.hist(データ列, color='purple')"}
{"in": "ダークオーキッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkorchid')"}
{"in": "散布図をライトシアン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightcyan')"}
{"in": "棒グラフの色をライトコーラルにする", "out": "plt.bar(データ列x, データ列y, color='lightcoral')"}
{"in": "文字列を回数を制限して置き換える", "out": "s.replace(sub, newsub, n)"}
{"in": "データフレームのインデックスをリセットする", "out": "df.reset_index()"}
{"in": "データフレームの重複していない行のみを抽出する", "out": "df[~ df.duplicated(keep=False)]"}
{"in": "多次元データを特異値分解で淡く次元に次元削減する", "out": "sklearn.decomposition.TruncatedSVD(n_components=三).fit_transform(多次元データ)"}
{"in": "データフレームをグループ化して、ヒストグラムにする", "out": "sns.histplot(df, x='列名', hue='カテゴリ名')"}
{"in": "辞書からカウンタを作る", "out": "collections.Counter(aDict)"}
{"in": "文字列を左寄せにする", "out": "s.ljust(文字列幅)"}
{"in": "リストの中の最小値", "out": "min(aList)"}
{"in": "データフレームを各カテゴリごとに色分けしてバイオリン図にする", "out": "sns.violinplot(x='カテゴリ列', y='列', data=df)"}
{"in": "シルバー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='silver')"}
{"in": "ヒストグラムをライトグレー色で描画する", "out": "plt.hist(データ列, color='lightgrey')"}
{"in": "データフレームの選択したカラムの値を正規表現patternでまとめてreplに置き換える", "out": "df[['列A', '列B']].replace(pattern, repl, regex=True)"}
{"in": "横棒グラフの色をミディアムオーキッドにする", "out": "plt.barh(データ列x, データ列y, color='mediumorchid')"}
{"in": "横棒グラフをスレートブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='slateblue')"}
{"in": "スクリプトの名前", "out": "sys.argv[0]"}
{"in": "折れ線グラフの色をミディアムスプリンググリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "クラス分類の再現率を求める", "out": "sklearn.metrics.recall_score(正解データ列, 予測データ列)"}
{"in": "横棒グラフをアンティークホワイト色で描画する", "out": "plt.barh(データ列x, データ列y, color='antiquewhite')"}
{"in": "配列の正規分布を判定する", "out": "scipy.stats.shapiro(配列)"}
{"in": "ロバストな線形分類モデルを作る", "out": "model = sklearn.linear_model.HuberClassifier()"}
{"in": "折れ線グラフの色をミディアムパープルに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumpurple')"}
{"in": "左三角印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='<')"}
{"in": "折れ線グラフの色をスラグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='slategray')"}
{"in": "ヒストグラムの色を青に設定する", "out": "plt.hist(データ列, color='blue')"}
{"in": "ゼロ埋めされた符号なし８ビット整数型の配列", "out": "np.zeros(要素数, dtype=np.uint8)"}
{"in": "縦軸の目盛の表示を変更する", "out": "plt.yticks(目盛りの値リスト)"}
{"in": "データフレームから重複した行を残さずドロップする", "out": "df.drop_duplicates(keep=False)"}
{"in": "リストに応じて、散布図の色を変える", "out": "plt.scatter(データ列x, データ列y, c=aList, cmap='Blues')"}
{"in": "ヒストグラムをライトイエロー色で描画する", "out": "plt.hist(データ列, color='lightyellow')"}
{"in": "option: 線を太くする", "out": "linewidth = 3.0"}
{"in": "折れ線グラフに青い大バツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='X', markerfacecolor='b')"}
{"in": "文字列を式として評価する", "out": "eval(s)"}
{"in": "データフレームをある列によってソートする", "out": "df.sort_values(by='列A')"}
{"in": "ヒストグラムの色をパパイヤウィップに設定する", "out": "plt.hist(データ列, color='papayawhip')"}
{"in": "option: ライトグリーン色を使う", "out": "color = 'lightgreen'"}
{"in": "オブジェクトは数値か調べる", "out": "isinstance(obj, (int,float))"}
{"in": "カウンタからゼロカウントを取り除く", "out": "+aCounter"}
{"in": "散布図に赤い右三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='r')"}
{"in": "日付データが日曜日か調べる", "out": "aDate.weekday() == 6"}
{"in": "nが3の倍数か調べる", "out": "n % 3 == 0"}
{"in": "折れ線グラフの色をフォレストグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='forestgreen')"}
{"in": "モジュールを検索するパスにディレクトリを追加する", "out": "sys.path.append(dir)"}
{"in": "オーキッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='orchid')"}
{"in": "ある列のカテゴリごとの合計", "out": "df.groupby('列A').sum()"}
{"in": "折れ線グラフをミディアムスレートブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumslateblue')"}
{"in": "ファイルをUTF8で書き込み用にオープンする]", "out": "open(filepath, mode='w', encoding='utf-8')"}
{"in": "散布図の星マーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='*', markersize=2.0)"}
{"in": "横棒グラフをダークターコイズ色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkturquoise')"}
{"in": "ライトサーモン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightsalmon')"}
{"in": "実数の正接", "out": "math.tan(x)"}
{"in": "グラフにx=0の一点鎖線を付ける", "out": "plt.axvline(x=0, linestyle='dashbot')"}
{"in": "ヒストグラムの色をホットピンクに設定する", "out": "plt.hist(データ列, color='hotpink')"}
{"in": "ヒストグラムの色をスラグレーに設定する", "out": "plt.hist(データ列, color='slategray')"}
{"in": "折れ線グラフの色をグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='grey')"}
{"in": "データフレームの最後の列以外を全て説明変数にする", "out": "説明変数 = df[df.columns[:-1]]"}
{"in": "アクアマリン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='aquamarine')"}
{"in": "ライトグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightgray')"}
{"in": "二つのデータフレームを横方向に結合する", "out": "pd.concat([df, df2], axis=1)"}
{"in": "データシリーズの欠損値を直前の値に設定する", "out": "ds.fillna(method='ffill')"}
{"in": "option: 黄色色を使う", "out": "color = 'yellow'"}
{"in": "rgbの右三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='>', c=rgb)"}
{"in": "文字列がタプルの要素でないか調べる", "out": "element not in aTuple"}
{"in": "データシリーズの欠損値を最大値で埋める", "out": "ds.fillna(ds.max())"}
{"in": "スノー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='snow')"}
{"in": "オブジェクトにプロパティが存在するか調べる", "out": "hasattr(obj, プロパティ名)"}
{"in": "ダークオーキッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkorchid')"}
{"in": "ある列の文字列に部分文字列が含まれない行を抽出する", "out": "df[~df['列A'].str.contains(部分文字列)]"}
{"in": "モデルから目的変数を予測する", "out": "y_pred = model.predict(説明変数)"}
{"in": "折れ線グラフをスプリンググリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='springgreen')"}
{"in": "xの絶対値", "out": "abs(x)"}
{"in": "データフレームの指定したデータ型の列名を列挙する", "out": "df.select_dtypes(型).columns"}
{"in": "データフレームをサンプリングする", "out": "df.sample()"}
{"in": "サポートベクターマシンでクラス分類を行う", "out": "model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)"}
{"in": "折れ線グラフをライトコーラル色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightcoral')"}
{"in": "折れ線グラフをアリスブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='aliceblue')"}
{"in": "散布図の色をサーモンにする", "out": "plt.scatter(データ列x, データ列y, color='salmon')"}
{"in": "ヒストグラムの色をビスクに設定する", "out": "plt.hist(データ列, color='bisque')"}
{"in": "文字列をコロンで分割して、文字列リストに変換する", "out": "s.split(':')"}
{"in": "横棒グラフを黄色くする", "out": "plt.barh(データ列x, データ列y, color='y')"}
{"in": "データ列を円グラフにする", "out": "plt.pie(データ列, startangle=90)"}
{"in": "データフレームの指定したカラムの中に文字列と文字列があるか調べる", "out": "df['列A'].isin([value, value2])"}
{"in": "折れ線グラフに赤い三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='^', markerfacecolor='r')"}
{"in": "option: グラフの色をチョコレートに設定する", "out": "color = 'chocolate'"}
{"in": "ミスティローズ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mistyrose')"}
{"in": "横棒グラフの色をコーンズシルクにする", "out": "plt.barh(データ列x, データ列y, color='cornsilk')"}
{"in": "ライトコーラル色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightcoral')"}
{"in": "ふたつの集合の対称差集合", "out": "aSet.symmetric_difference(aSet2)"}
{"in": "option: マーカーの色をロイヤルブルーにする", "out": "markerfacecolor = 'royalblue'"}
{"in": "グレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='gray')"}
{"in": "散布図の色をペルーにする", "out": "plt.scatter(データ列x, データ列y, color='peru')"}
{"in": "option: 不偏分散を用いる", "out": "ddof = 1"}
{"in": "折れ線グラフの色をカーキに設定する", "out": "plt.plot(データ列x, データ列y, color='khaki')"}
{"in": "データフレームをグループ化し、ある列に対し分散を求める", "out": "df.groupby('列A')['列B'].var()"}
{"in": "散布図の色をトマトにする", "out": "plt.scatter(データ列x, データ列y, color='tomato')"}
{"in": "リストとリストについての散布図に三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='^')"}
{"in": "データフレームの選択したカラムの欠損値を直後の値で埋める", "out": "df[['列A', '列B']].fillna(method='bfill')"}
{"in": "ブルーバイオレット色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='blueviolet')"}
{"in": "淡いピンク色色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightpink')"}
{"in": "nからn2の値を引いてnに代入する", "out": "n -= n2"}
{"in": "自分自身をモジュールとして", "out": "sys.modules[__name__]"}
{"in": "グラフの横軸にラベルを付ける", "out": "plt.xlabel('x軸ラベル')"}
{"in": "折れ線グラフをパパイヤウィップ色で描画する", "out": "plt.plot(データ列x, データ列y, color='papayawhip')"}
{"in": "ヒストグラムをパウダーブルー色で描画する", "out": "plt.hist(データ列, color='powderblue')"}
{"in": "棒グラフをダークオレンジ色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkorange')"}
{"in": "サドルブラウン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='saddlebrown')"}
{"in": "データフレームの指定したカラムの分散", "out": "df['列A'].var()"}
{"in": "イテラブルからカウンタを作る", "out": "collections.Counter(iterable)"}
{"in": "ゲインズボロ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='gainsboro')"}
{"in": "データフレームの選択したカラムの欠損値を最小値で埋める", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].min())"}
{"in": "データフレームのあるカラムの曜日が何日目か見る", "out": "df['列A'].dt.dayofweek"}
{"in": "ヒストグラムの色をディープスカイブルーに設定する", "out": "plt.hist(データ列, color='deepskyblue')"}
{"in": "ブルーバイオレット色のヒストグラムを描画する", "out": "plt.hist(データ列, color='blueviolet')"}
{"in": "線形モデルの切片", "out": "model.intercept_"}
{"in": "データフレームのカラムを並べて箱ひげ図にする", "out": "plt.boxplot([df['カラム'], df['カラム']])"}
{"in": "散布図の大バツマーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='X', markeredgewidth=2.5)"}
{"in": "散布図の色をバリーウッドにする", "out": "plt.scatter(データ列x, データ列y, color='burlywood')"}
{"in": "折れ線グラフをモカシン色で描画する", "out": "plt.plot(データ列x, データ列y, color='moccasin')"}
{"in": "データシリーズの欠損値を直後の値で埋める", "out": "ds.fillna(method='bfill')"}
{"in": "横棒グラフの色をプラムにする", "out": "plt.barh(データ列x, データ列y, color='plum')"}
{"in": "棒グラフの色をタンにする", "out": "plt.bar(データ列x, データ列y, color='tan')"}
{"in": "折れ線グラフのポイントマーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='.', markeredgewidth=2.5)"}
{"in": "フローラルホワイト色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='floralwhite')"}
{"in": "ヒストグラムの色を紺に設定する", "out": "plt.hist(データ列, color='darkblue')"}
{"in": "option: マーカーの色をネイビーにする", "out": "markerfacecolor = 'navy'"}
{"in": "棒グラフの色を紺にする", "out": "plt.bar(データ列x, データ列y, color='darkblue')"}
{"in": "option: 読み込まないフッタをnに設定する", "out": "skipfooter = n"}
{"in": "棒グラフをホットピンク色で描画する", "out": "plt.bar(データ列x, データ列y, color='hotpink')"}
{"in": "棒グラフをゴールデンロッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='goldenrod')"}
{"in": "棒グラフをオリベドラブ色で描画する", "out": "plt.bar(データ列x, データ列y, color='olivedrab')"}
{"in": "文字列が全て空白文字からなるか調べる", "out": "s.isspace()"}
{"in": "折れ線グラフの色を紺碧に設定する", "out": "plt.plot(データ列x, データ列y, color='azure')"}
{"in": "eの乗数", "out": "math.exp(x)"}
{"in": "グリーンイエロー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='greenyellow')"}
{"in": "文字列の両端から空白を取り除く", "out": "s.strip()"}
{"in": "option: マーカーの色をプラムにする", "out": "markerfacecolor = 'plum'"}
{"in": "ふたつの列からグループ化し、分散を求める", "out": "df.groupby(['列A', '列B'], as_index=False).var()"}
{"in": "折れ線グラフの色をデピンクに設定する", "out": "plt.plot(データ列x, データ列y, color='deeppink')"}
{"in": "ペルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='peru')"}
{"in": "イテラブルのそれぞれを関数でフィルタする", "out": "map(func, iterable)"}
{"in": "データフレームは何行重複するか見る", "out": "df.duplicated().sum()"}
{"in": "データシリーズの欠損値を最頻値に設定する", "out": "ds.fillna(ds.mode().iloc[0])"}
{"in": "option: グラフの色をライトグレーに設定する", "out": "color = 'lightgray'"}
{"in": "散布図のマーカーをバツにする", "out": "plt.scatter(データ列x, データ列y, marker='x')"}
{"in": "データフレームの指定したカラムを丸める", "out": "df['列A'].round()"}
{"in": "散布図をディムグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='dimgray')"}
{"in": "スプリンググリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='springgreen')"}
{"in": "オーキッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='orchid')"}
{"in": "何回まで再帰ができるかを", "out": "sys.getrecursionlimit()"}
{"in": "ライトブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightblue')"}
{"in": "option: グラフの色をコーンズシルクに設定する", "out": "color = 'cornsilk'"}
{"in": "散布図の下三角マーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='r')"}
{"in": "横棒グラフの色をホワイトスモークにする", "out": "plt.barh(データ列x, データ列y, color='whitesmoke')"}
{"in": "データシリーズの不偏標準偏差", "out": "ds.std()"}
{"in": "横棒グラフの色をサーモンにする", "out": "plt.barh(データ列x, データ列y, color='salmon')"}
{"in": "データ列を三つ並べてヒストグラムにする", "out": "plt.hist([データ列, データ列, データ列], color=['b', 'r', 'g'])"}
{"in": "散布図をスノー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='snow')"}
{"in": "option: マーカーの色をレベッカパープルにする", "out": "markerfacecolor = 'rebeccapurple'"}
{"in": "データフレームのカラムの尖度を求める", "out": "scipy.stats.kurtosis(df['列A'], bias=False)"}
{"in": "棒グラフの色をホットピンクにする", "out": "plt.bar(データ列x, データ列y, color='hotpink')"}
{"in": "箱ひげ図を二つ並べて描画する", "out": "plt.boxplot([データ列, データ列])"}
{"in": "データフレームの不偏標準偏差", "out": "df.std()"}
{"in": "文字列中の小文字を大文字に変換する", "out": "s.upper()"}
{"in": "option: マーカーの色をライトスチールブルーにする", "out": "markerfacecolor = 'lightsteelblue'"}
{"in": "ヒストグラムをミディアムオーキッド色で描画する", "out": "plt.hist(データ列, color='mediumorchid')"}
{"in": "ガウス過程でクラス分類を行う", "out": "model = sklearn.gaussian_process.GaussianProcessClassifier()"}
{"in": "説明変数と目的変数でモデルを学習する", "out": "model.fit(説明変数, 目的変数)"}
{"in": "棒グラフをミントクリーム色で描画する", "out": "plt.bar(データ列x, データ列y, color='mintcream')"}
{"in": "データフレームを関数の値によってグループ化して、列挙する", "out": "[(name, group_df) for name, group_df in df.groupby(関数)]"}
{"in": "nをn2倍にする", "out": "n *= n2"}
{"in": "折れ線グラフに赤い左三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='<', markerfacecolor='r')"}
{"in": "文字列中の部分文字列をカウントする", "out": "s.count(sub)"}
{"in": "文字列の先頭から部分文字列を探す", "out": "s.find(sub)"}
{"in": "データフレームの指定したカラムを万の位で丸める", "out": "df['列A'].round(-4)"}
{"in": "ヒストグラムの色をオーキッドに設定する", "out": "plt.hist(データ列, color='orchid')"}
{"in": "文字列は全て数値か調べる", "out": "s.isnumeric()"}
{"in": "ゴーストホワイト色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='ghostwhite')"}
{"in": "タイタニック号のデータセットをロードする", "out": "df = sns.load_dataset('titanic')"}
{"in": "二つのデータフレームを横方向に連結する", "out": "pd.concat([df, df2], axis=1)"}
{"in": "文字列に漢字が含まれるか調べる", "out": "re.search('[\\u4E00-\\u9FD0]', s)"}
{"in": "ピーチパフ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='peachpuff')"}
{"in": "折れ線グラフの色をパールバイオレットレッドに設定する", "out": "plt.plot(データ列x, データ列y, color='palevioletred')"}
{"in": "グリッドを実線にする", "out": "plt.grid(linestyle='solid')"}
{"in": "ヒストグラムの色をコーラルに設定する", "out": "plt.hist(データ列, color='coral')"}
{"in": "ライムグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='limegreen')"}
{"in": "文字列を赤色でプリントする", "out": "print(f'\\033[31m{value}\\033[0m')"}
{"in": "シルバー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='silver')"}
{"in": "横棒グラフの色をピンクにする", "out": "plt.barh(データ列x, データ列y, color='pink')"}
{"in": "折れ線グラフの色を青紫に設定する", "out": "plt.plot(データ列x, データ列y, color='violet')"}
{"in": "xが一桁の数か調べる", "out": "-9 <= x <= 9"}
{"in": "タプルのn番目からn2番目までの部分", "out": "aTuple[n:n2]"}
{"in": "二つのデータフレームをジョインする", "out": "pd.merge(df, df2)"}
{"in": "データフレームの指定したカラムを百の位で丸めて、整数型にする", "out": "df['列A'].round(-2).astype(int)"}
{"in": "option: グラフの色をパープルに設定する", "out": "color = 'purple'"}
{"in": "イテラブルとイテラブルの直積", "out": "itertools.product(iterable, iterable2)"}
{"in": "散布図の下三角マーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='k')"}
{"in": "option: グラフの色をアンティークホワイトに設定する", "out": "color = 'antiquewhite'"}
{"in": "折れ線グラフに黒い丸マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='o', markerfacecolor='k')"}
{"in": "縦軸の目盛を整数のみにする", "out": "plt.yticks(np.arange(最小値, 最大値, 間隔))"}
{"in": "二つのデータフレームを連結する", "out": "pd.concat([df, df2])"}
{"in": "棒グラフをサーモン色で描画する", "out": "plt.bar(データ列x, データ列y, color='salmon')"}
{"in": "option: マーカーの色を黄色にする", "out": "markerfacecolor = 'yellow'"}
{"in": "シルバー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='silver')"}
{"in": "散布図の色をダークグレーにする", "out": "plt.scatter(データ列x, データ列y, color='darkgray')"}
{"in": "nが正の数か調べる", "out": "n > 0"}
{"in": "ホットピンク色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='hotpink')"}
{"in": "横棒グラフをオリベドラブ色で描画する", "out": "plt.barh(データ列x, データ列y, color='olivedrab')"}
{"in": "カーキ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='khaki')"}
{"in": "黄色い横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='y')"}
{"in": "棒グラフの色をゴールドにする", "out": "plt.bar(データ列x, データ列y, color='gold')"}
{"in": "ブルーバイオレット色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='blueviolet')"}
{"in": "散布図の丸マーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='o', markersize=2.0)"}
{"in": "ダークシアグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkseagreen')"}
{"in": "n進文字列を整数に変換する", "out": "int(s, n)"}
{"in": "イエローグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='yellowgreen')"}
{"in": "パウダーブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='powderblue')"}
{"in": "option: インディゴ色を使う", "out": "color = 'indigo'"}
{"in": "横棒グラフの色をゲインズボロにする", "out": "plt.barh(データ列x, データ列y, color='gainsboro')"}
{"in": "黄色いヒストグラムを描画する", "out": "plt.hist(データ列, color='y')"}
{"in": "行列の演算をする", "out": "import numpy as np"}
{"in": "ロッソ回帰分析の準備をする", "out": "model = sklearn.linear_model.Rosso(alpha=正則化項)"}
{"in": "全ての句読点文字", "out": "string.punctuation"}
{"in": "option: グラフの色をパパイヤウィップに設定する", "out": "color = 'papayawhip'"}
{"in": "ゼロ埋めされた配列", "out": "np.zeros(要素数)"}
{"in": "オプションで、標準エラーに出力する", "out": "file = sys.stderr"}
{"in": "サーモン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='salmon')"}
{"in": "フォレストグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='forestgreen')"}
{"in": "クラス分類の適合率を求める", "out": "sklearn.metrics.precision_score(正解データ列, 予測データ列)"}
{"in": "ミディアムアクアマリン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "タプルをリストに変換する", "out": "list(aTuple)"}
{"in": "横棒グラフの色をゴールデンロッドにする", "out": "plt.barh(データ列x, データ列y, color='goldenrod')"}
{"in": "データフレームの重複した行を数える", "out": "df.duplicated().sum()"}
{"in": "散布図に黒いポイントマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='k')"}
{"in": "文字列の開始位置からと終了位置までの間に部分文字列が含まれないか調べる", "out": "s.find(sub, start, end) == -1"}
{"in": "option: パパイヤウィップ色を使う", "out": "color = 'papayawhip'"}
{"in": "クリムゾン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='crimson')"}
{"in": "option: マーカーの色を変更する", "out": "markerfacecolor = '#800080'"}
{"in": "グラフに凡例を加える", "out": "plt.legend(['凡例A', '凡例B'])"}
{"in": "option: オーキッド色を使う", "out": "color = 'orchid'"}
{"in": "ヒストグラムをライムグリーン色で描画する", "out": "plt.hist(データ列, color='limegreen')"}
{"in": "option: ペルー色を使う", "out": "color = 'peru'"}
{"in": "カテゴリで色分けして、データフレームを回帰直線付き散布図にする", "out": "sns.regplot(x='列名', y='列名', hue='カテゴリ列', data=df)"}
{"in": "欠損値がある行をドロップしてみる", "out": "df.dropna()"}
{"in": "文字列の中の複数行対応として正規表現による全てのマッチを使う", "out": "re.findall(pattern, s, flags=re.MULTILINE)"}
{"in": "リストをひとつ置きに取り出す", "out": "aList[::2]"}
{"in": "ミディアムスレートブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumslateblue')"}
{"in": "リストとリストについての散布図にrgbの右三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='>', c=rgb)"}
{"in": "ヒストグラムをホットピンク色で描画する", "out": "plt.hist(データ列, color='hotpink')"}
{"in": "空の両端キュー", "out": "collections.deque()"}
{"in": "ヒストグラムを貝殻色で描画する", "out": "plt.hist(データ列, color='seashell')"}
{"in": "データフレームの第三四分位数", "out": "df.quantile(0.75)"}
{"in": "データフレームをインデックスによってソートする", "out": "df.sort_index()"}
{"in": "二つの配列を行方向に連結する", "out": "np.concatenate([aArray, aArray2], axis=1)"}
{"in": "option: バッファリングを無効にする", "out": "buffering = 0"}
{"in": "ヒストグラムの色をサンディーブラウンに設定する", "out": "plt.hist(データ列, color='sandybrown')"}
{"in": "配列のトリム平均を求める", "out": "scipy.stats.tmean(配列, limits=(下限, 上限), inclusive=(True, True))"}
{"in": "棒グラフをライム色で描画する", "out": "plt.bar(データ列x, データ列y, color='lime')"}
{"in": "バツマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='x')"}
{"in": "散布図に赤い四角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='s', c='r')"}
{"in": "option: マーカーの色をミディアムスレートブルーにする", "out": "markerfacecolor = 'mediumslateblue'"}
{"in": "option: マーカーの色をブランチドアーモンドにする", "out": "markerfacecolor = 'blanchedalmond'"}
{"in": "プログラムの実行を異常終了する", "out": "sys.exit(1)"}
{"in": "リストのn番目以降の部分を取り出す", "out": "aList[n:]"}
{"in": "nが5で割り切れるか調べる", "out": "n % 5 == 0"}
{"in": "データフレームをグループ化し、ある列に対し標準偏差を求める", "out": "df.groupby('列A')['列B'].std()"}
{"in": "全要素を０で初期化した三二ビット整数型の行列", "out": "np.zeros(行数, 列数, dtype=np.int16)"}
{"in": "option: アリスブルー色を使う", "out": "color = 'aliceblue'"}
{"in": "散布図をライトスレイグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightslategrey')"}
{"in": "グレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='grey')"}
{"in": "ヒストグラムをダークターコイズ色で描画する", "out": "plt.hist(データ列, color='darkturquoise')"}
{"in": "浮動小数点数の最大値", "out": "sys.float_info.max"}
{"in": "option: グラフの色をシエナに設定する", "out": "color = 'sienna'"}
{"in": "ミディアムシアグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumseagreen')"}
{"in": "折れ線グラフを紺碧色で描画する", "out": "plt.plot(データ列x, データ列y, color='azure')"}
{"in": "ヒストグラムの色をライトコーラルに設定する", "out": "plt.hist(データ列, color='lightcoral')"}
{"in": "散布図をミディアムスレートブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumslateblue')"}
{"in": "データフレームをグループ化し、それぞれの分散を求める", "out": "df.groupby('列A').var()"}
{"in": "option: 文字列の示すエンコーディングを使う", "out": "encoding = s"}
{"in": "ブランチドアーモンド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='blanchedalmond')"}
{"in": "棒グラフをブラック色で描画する", "out": "plt.bar(データ列x, データ列y, color='black')"}
{"in": "ヒストグラムの色を紺碧に設定する", "out": "plt.hist(データ列, color='azure')"}
{"in": "データフレームから重複ありでランダムに5行をサンプリングする", "out": "df.sample(5, replace=True)"}
{"in": "option: グラフの色をゲインズボロに設定する", "out": "color = 'gainsboro'"}
{"in": "折れ線グラフの色をダークスラテグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='darkslategray')"}
{"in": "nまたはn2", "out": "n or n2"}
{"in": "横棒グラフの色をレベッカパープルにする", "out": "plt.barh(データ列x, データ列y, color='rebeccapurple')"}
{"in": "棒グラフをブルーバイオレット色で描画する", "out": "plt.bar(データ列x, データ列y, color='blueviolet')"}
{"in": "リストを縦軸、リストを横軸として、大きさnの散布図を描画する", "out": "plt.scatter(データ列x, データ列y, s=n)"}
{"in": "データフレームの選択したカラムの欠損値をxで埋める", "out": "df[['列A', '列B']].fillna(x)"}
{"in": "行列の行ごとの最大値", "out": "np.max(aArray, axis=1)"}
{"in": "両端キューの末尾にイテラブルの各要素を追加する", "out": "deq.extend(iterable)"}
{"in": "紺色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkblue')"}
{"in": "散布図の色をダークマゼンタにする", "out": "plt.scatter(データ列x, データ列y, color='darkmagenta')"}
{"in": "ヒストグラムの色をコーンフラワーブルーに設定する", "out": "plt.hist(データ列, color='cornflowerblue')"}
{"in": "散布図をダークカーキ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkkhaki')"}
{"in": "ヒストグラムの色をダークオーキッドに設定する", "out": "plt.hist(データ列, color='darkorchid')"}
{"in": "グラフの描画で明るくカラーパレットを使う", "out": "sns.set(pallete='bright')"}
{"in": "nが2で割り切れないか調べる", "out": "n % 2 == 1"}
{"in": "リストとリストについての散布図にポイントマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='.')"}
{"in": "ファイルを全部、読み込む", "out": "f.read()"}
{"in": "データシリーズの年", "out": "ds.dt.year"}
{"in": "データシリーズの中にいくつ欠損値があるか数える", "out": "ds.isna().sum()"}
{"in": "データフレームの選択したカラムの中に文字列と文字列があるか調べる", "out": "df[['列A', '列B']].isin([value, value2])"}
{"in": "日付時刻データが何分か知る", "out": "aDatetime.minute"}
{"in": "折れ線グラフの色をカラーコードで設定する", "out": "plt.plot(データ列x, データ列y, color='#800080')"}
{"in": "データシリーズを10の位で丸める", "out": "ds.round(-1)"}
{"in": "option: ラベンダー色を使う", "out": "color = 'lavender'"}
{"in": "スチールブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='steelblue')"}
{"in": "散布図のマーカーを三角にする", "out": "plt.scatter(データ列x, データ列y, marker='^')"}
{"in": "ミディアムオーキッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumorchid')"}
{"in": "option: マーカーの色をシエナにする", "out": "markerfacecolor = 'sienna'"}
{"in": "折れ線グラフの色をライムに設定する", "out": "plt.plot(データ列x, データ列y, color='lime')"}
{"in": "ISO書式の文字列を日付時刻に変換する", "out": "datetime.datetime.fromisoformat(日付の書かれた文字列)"}
{"in": "データフレームの列間の相関行列をまとめて求める", "out": "df.corr()"}
{"in": "散布図をクリムゾン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='crimson')"}
{"in": "コーンフラワーブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='cornflowerblue')"}
{"in": "option: マーカーの色をライトスレイグレーにする", "out": "markerfacecolor = 'lightslategray'"}
{"in": "折れ線グラフの色をアクアに設定する", "out": "plt.plot(データ列x, データ列y, color='aqua')"}
{"in": "ダークオーキッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkorchid')"}
{"in": "xの小数点以下'3'桁までの文字列に変換する", "out": "':.3f'.format(x)"}
{"in": "ヒストグラムの色をブルーバイオレットに設定する", "out": "plt.hist(データ列, color='blueviolet')"}
{"in": "option: SJISを使う", "out": "encoding = 'shift_jis'"}
{"in": "オレンジレッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='orangered')"}
{"in": "両端キューの要素を右にn個分ローテンションする", "out": "deq.rotate(n)"}
{"in": "散布図に赤い四角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='r')"}
{"in": "ヒストグラムをミディアムシアグリーン色で描画する", "out": "plt.hist(データ列, color='mediumseagreen')"}
{"in": "ヒストグラムの色をダークサーモンに設定する", "out": "plt.hist(データ列, color='darksalmon')"}
{"in": "要素が集合のメンバーか調べる", "out": "element in aSet"}
{"in": "文字列の先頭で複数行対応として正規表現にマッチさせる", "out": "re.match(pattern, s, flags=re.MULTILINE)"}
{"in": "散布図の色をロイヤルブルーにする", "out": "plt.scatter(データ列x, データ列y, color='royalblue')"}
{"in": "棒グラフをスプリンググリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='springgreen')"}
{"in": "データ列を等量でn個にビン分割する", "out": "pd.qcut(ds, n)"}
{"in": "データ列を縦棒グラフにする", "out": "plt.bar(ラベル列, データ列)"}
{"in": "横棒グラフの色をライトグレーにする", "out": "plt.barh(データ列x, データ列y, color='lightgray')"}
{"in": "ダークシアグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkseagreen')"}
{"in": "エクセルファイルからシートの名前を指定してデータフレームを読み込む", "out": "pd.read_excel('file.xlsx', sheet_name=シート名)"}
{"in": "文字列をエンコーディングでバイト列に変換する", "out": "s.encode(encoding=encoding)"}
{"in": "スレートブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='slateblue')"}
{"in": "辞書から最後の項目をポップする", "out": "aDict.popitem()"}
{"in": "データフレームからカテゴリデータの列名を列挙する", "out": "df.select_dtypes('object').columns"}
{"in": "日付データにn時間分、加算する", "out": "aDate + datetime.timedelta(hours=n)"}
{"in": "折れ線グラフをアクア色で描画する", "out": "plt.plot(データ列x, データ列y, color='aqua')"}
{"in": "折れ線グラフに四角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='s')"}
{"in": "nをn2で割った結果の切り上げ", "out": "(n + n2 - 1) // n2"}
{"in": "イテラブルから複数個、ランダムに選ぶ", "out": "random.choices(iterable, k=n)"}
{"in": "ヒストグラムの色をアイボリーに設定する", "out": "plt.hist(データ列, color='ivory')"}
{"in": "nがn2で割り切れないか調べる", "out": "n % n2 != 0"}
{"in": "グラフの描画でパステル調にカラーパレットを使う", "out": "sns.set(pallete='pastel')"}
{"in": "0からnまでの整数列", "out": "list(range(n+1))"}
{"in": "実数の二進対数", "out": "math.log2(x)"}
{"in": "折れ線グラフのバツマーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='x', markerfacecolor='b')"}
{"in": "ライトシアン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightcyan')"}
{"in": "グラフの用途をスライドに設定する", "out": "sns.set(context='talk')"}
{"in": "option: マーカーの色をライトイエローにする", "out": "markerfacecolor = 'lightyellow'"}
{"in": "八進文字列を整数に変換する", "out": "int(s, 8)"}
{"in": "ヒストグラムの色をダークターコイズに設定する", "out": "plt.hist(データ列, color='darkturquoise')"}
{"in": "散布図の色をダークグレーにする", "out": "plt.scatter(データ列x, データ列y, color='darkgrey')"}
{"in": "データフレームの指定したカラムの欠損値をxで埋める", "out": "df['列A'].fillna(x)"}
{"in": "データフレームの指定した列の名前一覧の列を抽出する", "out": "df[columns]"}
{"in": "棒グラフをオリーブ色で描画する", "out": "plt.bar(データ列x, データ列y, color='olive')"}
{"in": "最大値・最小値で整数乱数を生成する", "out": "random.randint(最小値, 最大値)"}
{"in": "option: エンコーディングを文字コードtextに設定する", "out": "encoding = text"}
{"in": "サドルブラウン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='saddlebrown')"}
{"in": "リストとリストについて散布図を描画して、文字列という凡例用のラベルを付ける", "out": "plt.scatter(データ列x, データ列y, label=s)"}
{"in": "ミディアムブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumblue')"}
{"in": "横棒グラフをアリスブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='aliceblue')"}
{"in": "横棒グラフの色をミディアムバイオレットレッドにする", "out": "plt.barh(データ列x, データ列y, color='mediumvioletred')"}
{"in": "データフレームのある列をインデックスに設定する", "out": "df.set_index('列A')"}
{"in": "有理数の分母", "out": "q.denominator"}
{"in": "折れ線グラフの線の種類を破線に設定する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed')"}
{"in": "折れ線グラフの色をパープルに設定する", "out": "plt.plot(データ列x, データ列y, color='purple')"}
{"in": "ユーザから入力される", "out": "int(input())"}
{"in": "データフレームのカラムのトリム平均を求める", "out": "scipy.stats.tmean(df['列A'], limits=(下限, 上限), inclusive=(True, True))"}
{"in": "赤いグリッド線を引く", "out": "plt.grid(color='r')"}
{"in": "円周率", "out": "math.pi"}
{"in": "ダークサーモン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darksalmon')"}
{"in": "データフレームの重複を見る", "out": "df.duplicated()"}
{"in": "横棒グラフの色をダークオレンジにする", "out": "plt.barh(データ列x, データ列y, color='darkorange')"}
{"in": "棒グラフをゴーストホワイト色で描画する", "out": "plt.bar(データ列x, データ列y, color='ghostwhite')"}
{"in": "左三角印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='<')"}
{"in": "散布図の色を淡いピンク色にする", "out": "plt.scatter(データ列x, データ列y, color='lightpink')"}
{"in": "データフレームの指定したカラムの値が欠損値か調べる", "out": "df['列A'].isna()"}
{"in": "空行をプリントする", "out": "print()"}
{"in": "バイトオーダを知る", "out": "sys.byteorder"}
{"in": "散布図の色をブラックにする", "out": "plt.scatter(データ列x, データ列y, color='black')"}
{"in": "散布図の星マーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='b')"}
{"in": "データフレームの行を範囲指定して抽出する", "out": "df[start:end]"}
{"in": "折れ線グラフをチョコレート色で描画する", "out": "plt.plot(データ列x, データ列y, color='chocolate')"}
{"in": "リストとリストについての散布図に大バツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='X')"}
{"in": "辞書をJSON形式でファイル出力に保存する", "out": "json.dump(aDict, fout, ensure_ascii=False)"}
{"in": "ヒストグラムの色をオールドレースに設定する", "out": "plt.hist(データ列, color='oldlace')"}
{"in": "棒グラフの色をミディアムバイオレットレッドにする", "out": "plt.bar(データ列x, データ列y, color='mediumvioletred')"}
{"in": "ミディアムターコイズ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumturquoise')"}
{"in": "日付データをn秒前に戻す", "out": "aDate - datetime.timedelta(seconds=n)"}
{"in": "散布図に黒い星マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='k')"}
{"in": "ヒストグラムの色を白に設定する", "out": "plt.hist(データ列, color='white')"}
{"in": "データフレーム中の欠損値をドロップしてみる", "out": "df.dropna()"}
{"in": "option: マーカーの色をホワイトスモークにする", "out": "markerfacecolor = 'whitesmoke'"}
{"in": "文字列を空白で区切って、整数リストに変換する", "out": "map(int, s.split())"}
{"in": "ミディアムブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumblue')"}
{"in": "データフレームの選択したカラムの中に文字列と文字列がいくつあるか数える", "out": "df[['列A', '列B']].isin([value, value2]).sum()"}
{"in": "ヒストグラムの色を赤に設定する", "out": "plt.hist(データ列, color='red')"}
{"in": "データフレームのインデックスの名前をまとめて付け直す", "out": "df.rename(index={x: y})"}
{"in": "日付時刻データをn秒前に戻す", "out": "aDatetime - datetime.timedelta(seconds=n)"}
{"in": "配列の最大値", "out": "np.max(aArray)"}
{"in": "散布図をオレンジ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='orange')"}
{"in": "オブジェクトがあるクラスか調べる", "out": "isinstance(obj, クラス)"}
{"in": "範囲を指定して整数乱数を生成する", "out": "random.randint(最小値, 最大値)"}
{"in": "文字列のの開始位置から終了位置までの間に部分文字列がいくつか含まれるか調べる", "out": "s.count(sub, start, end)"}
{"in": "文字列中から正規表現に複数行対応としてマッチする文字列を探す", "out": "re.search(pattern, s, flags=re.MULTILINE)"}
{"in": "横棒グラフを白くする", "out": "plt.barh(データ列x, データ列y, color='w')"}
{"in": "散布図を黄色色で描画する", "out": "plt.scatter(データ列x, データ列y, color='yellow')"}
{"in": "綺麗なグラフを描画する準備をする", "out": "import seaborn as sns"}
{"in": "ライトグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightseagreen')"}
{"in": "nがn2以下か調べる", "out": "n <= n2"}
{"in": "日付を表現した文字列を日付データに変換する", "out": "pd.to_datetime(日付を表現した文字列)"}
{"in": "データシリーズの秒", "out": "ds.dt.second"}
{"in": "パパイヤウィップ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='papayawhip')"}
{"in": "リストとリストについての散布図に赤い左三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='<', c='r')"}
{"in": "データフレームの指定したカラムの中にいくつ文字列があるか数える", "out": "df['列A'].isin([value]).sum()"}
{"in": "グラフの横軸のラベルを設定する", "out": "plt.xlabel('x軸ラベル')"}
{"in": "FIXME:カテゴリーデータを出現頻度順にソートする", "out": "df['列A'].value_counts().sort_index().index"}
{"in": "散布図をスカイブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='skyblue')"}
{"in": "mathをインポートする", "out": "import math"}
{"in": "データ列をカテゴリデータに変換する", "out": "ds.astype(object)"}
{"in": "データフレームの欠損値を中央値で埋める", "out": "df.fillna(df.median())"}
{"in": "折れ線グラフをダークオリーブグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkolivegreen')"}
{"in": "点線グラフを描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted')"}
{"in": "データフレームのカラムのピアソンの相関係数を求める", "out": "scipy.stats.pearsonr(df['列A'], df['列B'])"}
{"in": "配列を標準化する", "out": "scipy.stats.zscore(配列)"}
{"in": "データフレームの選択したカラムのパーセンタイル", "out": "df[['列A', '列B']].quantile(パーセント/100)"}
{"in": "データフレームをCSVファイルにBOM付きで保存する", "out": "df.to_csv('file.csv', encoding='utf_8_sig')"}
{"in": "数列のケンドールの相関係数を求める", "out": "scipy.stats.kendalltau(数列, 数列2)"}
{"in": "横棒グラフの色をパールバイオレットレッドにする", "out": "plt.barh(データ列x, データ列y, color='palevioletred')"}
{"in": "折れ線グラフをライトシアン色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightcyan')"}
{"in": "ふたつの列からグループ化し、合計を求める", "out": "df.groupby(['列A', '列B'], as_index=False).sum()"}
{"in": "要素が辞書の値として含まれているか調べる", "out": "element in aDict.values()"}
{"in": "本日が月曜日か調べる", "out": "datetime.datetime.today().weekday() == 0"}
{"in": "option: エンコーディングをBOM付きに設定する", "out": "encoding = 'utf_8_sig'"}
{"in": "多次元データを特異値分解で濃く次元に次元削減する", "out": "sklearn.decomposition.TruncatedSVD(n_components=二).fit_transform(多次元データ)"}
{"in": "option: マーカーの色を紺にする", "out": "markerfacecolor = 'darkblue'"}
{"in": "グラフのサイズを設定する", "out": "plt.figure(figsize=(横幅, 高さ))"}
{"in": "シャピロ・ウィルク検定を行う", "out": "scipy.stats.shapiro(配列)"}
{"in": "option: グラフの色をアクアマリンに設定する", "out": "color = 'aquamarine'"}
{"in": "カウンタのキーとカウントを列挙する", "out": "aCounter.items()"}
{"in": "コマンド引数の一覧", "out": "sys.argv[1:]"}
{"in": "キーが辞書に存在しないとき、要素を追加する", "out": "aDict.setdefault(key, element)"}
{"in": "コーラル色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='coral')"}
{"in": "コーンズシルク色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='cornsilk')"}
{"in": "カウンタから辞書を引く", "out": "aCounter.subtract(aDict)"}
{"in": "bとn2から成るペア", "out": "(n, n2)"}
{"in": "棒グラフの横幅を調整する", "out": "plt.bar(ラベル列, データ列, width=0.5)"}
{"in": "文字列をマゼンタでプリントできる文字列に変換する", "out": "f'\\033[35m{value}\\033[0m'"}
{"in": "円グラフでデータ列の割合を可視化する", "out": "plt.pie(データ列, startangle=90)"}
{"in": "折れ線グラフをライトスレイグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightslategray')"}
{"in": "空文字", "out": "''"}
{"in": "データ列をビン数nでビン分割する", "out": "pd.cut(ds, n)"}
{"in": "ヒストグラムをラベンダー色で描画する", "out": "plt.hist(データ列, color='lavender')"}
{"in": "日付時刻データををn週間後に進める", "out": "aDatetime + datetime.timedelta(weeks=n)"}
{"in": "文字列を新しい文字列で置き換える", "out": "s.replace(sub, newsub)"}
{"in": "紺色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkblue')"}
{"in": "ヒストグラムをトマト色で描画する", "out": "plt.hist(データ列, color='tomato')"}
{"in": "オブジェクトはタプルクラスか調べる", "out": "isinstance(obj, tuple)"}
{"in": "option: マーカーの色を小麦色にする", "out": "markerfacecolor = 'wheat'"}
{"in": "option: 三角マーカーを使う", "out": "marker = '^'"}
{"in": "ユニークな要素ごとの頻度", "out": "np.unique(aArray, return_counts=True)"}
{"in": "文字列内にひとつでも数字が含まれるか調べる", "out": "any(c.isdigit() for c in s)"}
{"in": "横棒グラフをライトコーラル色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightcoral')"}
{"in": "散布図をオールドレース色で描画する", "out": "plt.scatter(データ列x, データ列y, color='oldlace')"}
{"in": "棒グラフを白くする", "out": "plt.bar(データ列x, データ列y, color='w')"}
{"in": "グレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='gray')"}
{"in": "連立方程式の解を求める", "out": "sympy.solve([e, e2])"}
{"in": "CSVファイルからデータフレームを読み込む", "out": "pd.read_csv('file.csv', sep=',')"}
{"in": "散布図の色を貝殻にする", "out": "plt.scatter(データ列x, データ列y, color='seashell')"}
{"in": "option: 紺碧色を使う", "out": "color = 'azure'"}
{"in": "データをL1ノルムで正則化する", "out": "sklearn.preprocessing.Normalizer(norm=\"l1\").fit_transform(データ)"}
{"in": "散布図をアンティークホワイト色で描画する", "out": "plt.scatter(データ列x, データ列y, color='antiquewhite')"}
{"in": "散布図の色を紺碧にする", "out": "plt.scatter(データ列x, データ列y, color='azure')"}
{"in": "データフレームのあるカラムの曜日の名前", "out": "df['列A'].dt.weekday_name"}
{"in": "日付データが日付データより後ろか調べる", "out": "aDate > aDate2"}
{"in": "スプリンググリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='springgreen')"}
{"in": "インディアンレッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='indianred')"}
{"in": "色付きの破線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed', color='#800080')"}
{"in": "option: シアン色を使う", "out": "color = 'cyan'"}
{"in": "棒グラフの色をシルバーにする", "out": "plt.bar(データ列x, データ列y, color='silver')"}
{"in": "棒グラフの色をピーチパフにする", "out": "plt.bar(データ列x, データ列y, color='peachpuff')"}
{"in": "行列の行ごとの分散", "out": "np.var(aArray, axis=1)"}
{"in": "数式の簡略化を行う", "out": "sympy.sympify(e)"}
{"in": "行列の列", "out": "aArray[:, 列番号]"}
{"in": "整数nの二進表現", "out": "bin(n)"}
{"in": "オリーブ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='olive')"}
{"in": "option: 線の種類を点線に設定する", "out": "linestyle = 'dotted'"}
{"in": "カウンタの項目のカウント", "out": "aCounter[element]"}
{"in": "棒グラフの色をハニーデューにする", "out": "plt.bar(データ列x, データ列y, color='honeydew')"}
{"in": "データフレームをグループ化し、ある列に対し合計を求める", "out": "df.groupby('列A')['列B'].sum()"}
{"in": "カーネル密度による分布図を描画する", "out": "sns.kdeplot(x='列名', hue='カテゴリ列', data=df)"}
{"in": "グラフの凡例の位置を指定する", "out": "plt.legend(loc=(x, y))"}
{"in": "option: グラフの色をオーキッドに設定する", "out": "color = 'orchid'"}
{"in": "Pandasのバージョンを表示する", "out": "print(pd.__version__)"}
{"in": "ゴーストホワイト色のヒストグラムを描画する", "out": "plt.hist(データ列, color='ghostwhite')"}
{"in": "パレットトルコイズ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='paleturquoise')"}
{"in": "データフレームの分散", "out": "df.var()"}
{"in": "赤色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='red')"}
{"in": "データフレームの選択したカラムの空文字をドロップする", "out": "df[['列A', '列B']].replace('', np.nan).dropna()"}
{"in": "シーグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='seagreen')"}
{"in": "エポック秒の列から日付データに変換する", "out": "pd.to_datetime(df['列A'], unit='s', utc=True)"}
{"in": "折れ線グラフの色をハニーデューに設定する", "out": "plt.plot(データ列x, データ列y, color='honeydew')"}
{"in": "n進文字列をバイト列に変換する", "out": "int(s, n).to_bytes(length=bytesize, byteorder='big')"}
{"in": "option: マーカーの色をレモンシフォンにする", "out": "markerfacecolor = 'lemonchiffon'"}
{"in": "ヒストグラムを小麦色色で描画する", "out": "plt.hist(データ列, color='wheat')"}
{"in": "列名を指定して二つのデータフレームを内部ジョインする", "out": "pd.merge(df, df2, on='列A', how='inner')"}
{"in": "横棒グラフの色を紺碧にする", "out": "plt.barh(データ列x, データ列y, color='azure')"}
{"in": "散布図の色をオーキッドにする", "out": "plt.scatter(データ列x, データ列y, color='orchid')"}
{"in": "ライトスレイグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightslategrey')"}
{"in": "データフレームの指定したカラムの第三四分位数", "out": "df['列A'].quantile(0.75)"}
{"in": "nとn2の論理和", "out": "n | n2"}
{"in": "配列の行ごとの平均値", "out": "np.mean(aArray, axis=1)"}
{"in": "三変数の最小値", "out": "min(x, y, z)"}
{"in": "リストとリストについて散布図を描画して、マーカーを下三角に設定する", "out": "plt.plot(データ列x, データ列y, marker='v')"}
{"in": "日付時刻データが金曜日か調べる", "out": "aDatetime.weekday() == 4"}
{"in": "日付時刻データが何曜日か知る", "out": "aDatetime.weekday()"}
{"in": "ダークターコイズ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkturquoise')"}
{"in": "マゼンタ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='magenta')"}
{"in": "データフレームの数値をまとめて丸める", "out": "df.round()"}
{"in": "オブジェクトのプロパティを削除する", "out": "delattr(obj, プロパティ名)"}
{"in": "ダイアモンドマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='D')"}
{"in": "棒グラフをオールドレース色で描画する", "out": "plt.bar(データ列x, データ列y, color='oldlace')"}
{"in": "リストとリストについての散布図にrgbの丸マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='o', c=rgb)"}
{"in": "バリーウッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='burlywood')"}
{"in": "棒グラフの色をライトシアンにする", "out": "plt.bar(データ列x, データ列y, color='lightcyan')"}
{"in": "option: ヘッダを自動的な連番に設定する", "out": "header = None"}
{"in": "横棒グラフをロージーブラウン色で描画する", "out": "plt.barh(データ列x, データ列y, color='rosybrown')"}
{"in": "散布図の色をミディアムスレートブルーにする", "out": "plt.scatter(データ列x, データ列y, color='mediumslateblue')"}
{"in": "データフレームの列を目的変数にする", "out": "目的変数 = df['列名']"}
{"in": "ヒストグラムの色をライトスチールブルーに設定する", "out": "plt.hist(データ列, color='lightsteelblue')"}
{"in": "レモンシフォン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lemonchiffon')"}
{"in": "option: カラムの名前をリストで設定する", "out": "names = 列名リスト"}
{"in": "時間を使う", "out": "import time"}
{"in": "ファイルをバイナリできるようにオープンする]", "out": "open(filepath, mode='rb')"}
{"in": "データフレームの選択したカラムの中にいくつ欠損値があるか数える", "out": "df[['列A', '列B']].isna().sum()"}
{"in": "データフレームからランダムにn行を抽出する", "out": "df.sample(n)"}
{"in": "ヒストグラムの色をライトスカイブルーに設定する", "out": "plt.hist(データ列, color='lightskyblue')"}
{"in": "ヒストグラムを白色で描画する", "out": "plt.hist(データ列, color='white')"}
{"in": "ヒストグラムをターコイズ色で描画する", "out": "plt.hist(データ列, color='turquoise')"}
{"in": "ヒストグラムをダークバイオレット色で描画する", "out": "plt.hist(データ列, color='darkviolet')"}
{"in": "グリッド線を黒くする", "out": "plt.grid(color='k')"}
{"in": "散布図の色をシスルにする", "out": "plt.scatter(データ列x, データ列y, color='thistle')"}
{"in": "ヒストグラムをゲインズボロ色で描画する", "out": "plt.hist(データ列, color='gainsboro')"}
{"in": "棒グラフを白色で描画する", "out": "plt.bar(データ列x, データ列y, color='white')"}
{"in": "ヒストグラムをモカシン色で描画する", "out": "plt.hist(データ列, color='moccasin')"}
{"in": "パールゴールデンロッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='palegoldenrod')"}
{"in": "option: シルバー色を使う", "out": "color = 'silver'"}
{"in": "option: 文字列をセパレータで使う", "out": "sep = s"}
{"in": "ファイルからn文字、読み込む", "out": "f.read(n)"}
{"in": "折れ線グラフの大バツマーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='X', markeredgewidth=2.5)"}
{"in": "両端キューのn番目", "out": "deq[n]"}
{"in": "option: ゴールド色を使う", "out": "color = 'gold'"}
{"in": "バギングで回帰分析を行う", "out": "model = sklearn.ensemble.BaggingRegressor(n_estimators=10)"}
{"in": "グラフを正方形にする", "out": "plt.axis('equals')"}
{"in": "棒グラフの色をスノーにする", "out": "plt.bar(データ列x, データ列y, color='snow')"}
{"in": "実数のk進対数", "out": "math.log(x, k)"}
{"in": "データシリーズの欠損値を最小値に設定する", "out": "ds.fillna(ds.min())"}
{"in": "option: ダークサーモン色を使う", "out": "color = 'darksalmon'"}
{"in": "散布図の大バツマーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='#800080')"}
{"in": "データフレームの選択したカラムの中に文字列があるか調べる", "out": "df[['列A', '列B']].isin([value])"}
{"in": "ある列の文字列が部分文字列で終わらない行を抽出する", "out": "df[~ df['列A'].str.endswith(部分文字列)]"}
{"in": "配列の合計値", "out": "np.sum(aArray)"}
{"in": "データフレームからランダムに抽出する", "out": "df.sample()"}
{"in": "アルファベットの大文字列", "out": "string.ascii_uppercase"}
{"in": "option: マーカーの色を赤にする", "out": "markerfacecolor = 'red'"}
{"in": "rangeの無限バージョン", "out": "itertools.count(start=n, step=step)"}
{"in": "リストの要素をスワップする", "out": "aList[i], aList[j] = aList[j], aList[i]"}
{"in": "集合が空でないか調べる", "out": "len(aSet) != 0"}
{"in": "データシリーズのタイムゾーンを日本に設定する", "out": "ds.tz_convert('Asia/Tokyo')"}
{"in": "ダークオレンジ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkorange')"}
{"in": "横棒グラフの色をダークシアグリーンにする", "out": "plt.barh(データ列x, データ列y, color='darkseagreen')"}
{"in": "option: グラフの色を紺に設定する", "out": "color = 'darkblue'"}
{"in": "横棒グラフの色をシアンにする", "out": "plt.barh(データ列x, データ列y, color='cyan')"}
{"in": "折れ線グラフをグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='gray')"}
{"in": "ピアソンでデータフレームの選択した列の相関行列を求める", "out": "df[['列A', '列B']].corr(method='pearson')"}
{"in": "データシリーズが何曜日か見る", "out": "ds.dt.weekday_name"}
{"in": "option: マーカーの色をミスティローズにする", "out": "markerfacecolor = 'mistyrose'"}
{"in": "折れ線グラフの色をダークオレンジに設定する", "out": "plt.plot(データ列x, データ列y, color='darkorange')"}
{"in": "変数をスワップする", "out": "x, y = y, x"}
{"in": "ダークオレンジ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkorange')"}
{"in": "横棒グラフの色をスレートブルーにする", "out": "plt.barh(データ列x, データ列y, color='slateblue')"}
{"in": "散布図に黒い三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='^', c='k')"}
{"in": "折れ線グラフをミディアムオーキッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumorchid')"}
{"in": "配列の値が正規分布にしたがって発生する確率を求める", "out": "scipy.stats.norm.pdf(配列, loc=平均値, scale=標準偏差)"}
{"in": "option: ダークオーキッド色を使う", "out": "color = 'darkorchid'"}
{"in": "ヒストグラムをスチールブルー色で描画する", "out": "plt.hist(データ列, color='steelblue')"}
{"in": "カテゴリデータ列を数値化する", "out": "sklearn.preprocessing.LabelEncoder().fit_transform(データ列)"}
{"in": "空のチェーンマップ", "out": "collections.ChainMap()"}
{"in": "ヒストグラムの色をカーキに設定する", "out": "plt.hist(データ列, color='khaki')"}
{"in": "データフレームの行と列を入れ替える", "out": "df.T"}
{"in": "散布図をシエナ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='sienna')"}
{"in": "ヒストグラムをスノー色で描画する", "out": "plt.hist(データ列, color='snow')"}
{"in": "タプルの最初の文字列を探す", "out": "aTuple.index(element)"}
{"in": "option: マーカーの色を暗い赤にする", "out": "markerfacecolor = 'darkred'"}
{"in": "option: 星マーカーを使う", "out": "marker = '*'"}
{"in": "辞書のキーに対応した値", "out": "aDict.get(key)"}
{"in": "option: グラフの色をビスクに設定する", "out": "color = 'bisque'"}
{"in": "ヒストグラムをプラム色で描画する", "out": "plt.hist(データ列, color='plum')"}
{"in": "ダーク・スラテグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkslategrey')"}
{"in": "日付時刻データが何日か知る", "out": "aDatetime.day"}
{"in": "棒グラフの色をレベッカパープルにする", "out": "plt.bar(データ列x, データ列y, color='rebeccapurple')"}
{"in": "文字列を隔離する", "out": "sys.intern(s)"}
{"in": "散布図の色をホットピンクにする", "out": "plt.scatter(データ列x, データ列y, color='hotpink')"}
{"in": "右三角印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='>')"}
{"in": "スレートブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='slateblue')"}
{"in": "散布図の色をローングリーンにする", "out": "plt.scatter(データ列x, データ列y, color='lawngreen')"}
{"in": "データフレームから重複ありでランダムにn行をサンプリングする", "out": "df.sample(n, replace=True)"}
{"in": "データフレームの欠損値を直前の値で埋める", "out": "df.fillna(method='ffill')"}
{"in": "データシリーズのパーセンタイル", "out": "ds.quantile(パーセント/100)"}
{"in": "横棒グラフをスプリンググリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='springgreen')"}
{"in": "散布図をライムグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='limegreen')"}
{"in": "縦棒グラフを積み上げにする", "out": "plt.bar(ラベル列, データ列, bottom=データ列y, color='#800080')"}
{"in": "option: 切片を算出しない", "out": "fit_intercept = False"}
{"in": "データフレームを関数によってグループ化して、グループ名を列挙する", "out": "[name for name, _ in df.groupby(関数)]"}
{"in": "予測データの混同行列を求める", "out": "混同行列 = sklearn.metrics.confusion_matrix(正解データ列, 予測データ列)"}
{"in": "ロバスト回帰モデルを作る", "out": "model = sklearn.linear_model.RANSACRegressor(random_state=0)"}
{"in": "データフレームの統計量", "out": "df.describe()"}
{"in": "option: エンコーディングを文字列の示すエンコーディングに設定する", "out": "encoding = s"}
{"in": "赤い散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='r')"}
{"in": "折れ線グラフの色をグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='gray')"}
{"in": "ヒストグラムの色をゲインズボロに設定する", "out": "plt.hist(データ列, color='gainsboro')"}
{"in": "暗い赤色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkred')"}
{"in": "棒グラフの色をダークオーキッドにする", "out": "plt.bar(データ列x, データ列y, color='darkorchid')"}
{"in": "データフレームの先頭n行", "out": "df.head(n)"}
{"in": "大バツ印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='X')"}
{"in": "option: グラフの色をピンクに設定する", "out": "color = 'pink'"}
{"in": "句読点文字を全部使う", "out": "string.punctuation"}
{"in": "決定木を可視化する", "out": "sklearn.tree.plot_tree(model, feature_names=X.columns, filled=True)"}
{"in": "リストをn個にビン分割して、namesのラベルをつける", "out": "pd.cut(aList, n, labels=names)"}
{"in": "ふたつの列からグループ化し、個数を求める", "out": "df.groupby(['列A', '列B'], as_index=False).count()"}
{"in": "現在のモジュール", "out": "sys.modules[__name__]"}
{"in": "データ列を全て日付データに変換する", "out": "pd.to_datetime(ds)"}
{"in": "配列の要素ごとに加算する", "out": "aArray + aArray2"}
{"in": "散布図をオリベドラブ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='olivedrab')"}
{"in": "列名を指定して二つのデータフレームを外部ジョインする", "out": "pd.merge(df, df2, on='列A', how='outer')"}
{"in": "散布図の色をダークサーモンにする", "out": "plt.scatter(データ列x, データ列y, color='darksalmon')"}
{"in": "データフレームのあるカラムが何分か見る", "out": "df['列A'].dt.minute"}
{"in": "折れ線グラフを白色で描画する", "out": "plt.plot(データ列x, データ列y, color='white')"}
{"in": "横棒グラフの色をミディアムブルーにする", "out": "plt.barh(データ列x, データ列y, color='mediumblue')"}
{"in": "散布図の色をスラグレーにする", "out": "plt.scatter(データ列x, データ列y, color='slategray')"}
{"in": "データフレームのヒストグラムを縦横に並べて、可視化する", "out": "sns.displot(df, x='列名', col='カテゴリ名', row='カテゴリ名')"}
{"in": "散布図のポイントマーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='r')"}
{"in": "データフレームのあるカラムのタイムゾーンを設定する", "out": "df['列A'].tz_convert('Asia/Tokyo')"}
{"in": "ブランチドアーモンド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='blanchedalmond')"}
{"in": "リストとリストについての散布図に赤い四角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='s', c='r')"}
{"in": "折れ線グラフをミディアムブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumblue')"}
{"in": "散布図のバツマーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='k')"}
{"in": "棒グラフの色をダークシアグリーンにする", "out": "plt.bar(データ列x, データ列y, color='darkseagreen')"}
{"in": "散布図の色をアイボリーにする", "out": "plt.scatter(データ列x, データ列y, color='ivory')"}
{"in": "折れ線グラフを赤い実線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid', color='r')"}
{"in": "赤い横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='r')"}
{"in": "option: グラフの色をライトスレイグレーに設定する", "out": "color = 'lightslategray'"}
{"in": "option: パールバイオレットレッド色を使う", "out": "color = 'palevioletred'"}
{"in": "ヒストグラムの色をライムに設定する", "out": "plt.hist(データ列, color='lime')"}
{"in": "最初のを除いたデータフレーム", "out": "df[df.columns[1:]]"}
{"in": "option: マーカーの色をシルバーにする", "out": "markerfacecolor = 'silver'"}
{"in": "折れ線グラフをネイビー色で描画する", "out": "plt.plot(データ列x, データ列y, color='navy')"}
{"in": "棒グラフの色を白にする", "out": "plt.bar(データ列x, データ列y, color='white')"}
{"in": "リストとリストについて散布図を描画して、その大きさをnに設定する", "out": "plt.scatter(データ列x, データ列y, s=n)"}
{"in": "散布図の色をロージーブラウンにする", "out": "plt.scatter(データ列x, データ列y, color='rosybrown')"}
{"in": "タプルの平均値", "out": "sum(aTuple)/len(aTuple)"}
{"in": "大バツ印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='X')"}
{"in": "横棒グラフの色をライムにする", "out": "plt.barh(データ列x, データ列y, color='lime')"}
{"in": "option: マーカーをポイントに変更する", "out": "marker = '.'"}
{"in": "サポートベクター回帰モデルを作る", "out": "model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)"}
{"in": "パレットトルコイズ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='paleturquoise')"}
{"in": "データシリーズにおいてどの値が頻出か見る", "out": "ds.mode()"}
{"in": "option: ダークオレンジ色を使う", "out": "color = 'darkorange'"}
{"in": "グリーンイエロー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='greenyellow')"}
{"in": "指定した列のカテゴリで集計し、それぞれの標準偏差を求める", "out": "df.groupby('列A').std()"}
{"in": "データフレームのn行目をドロップする", "out": "df.drop(n, axis=0, inplace=True)"}
{"in": "文字コードに対応する文字", "out": "chr(unicode)"}
{"in": "横棒グラフの色をカーキにする", "out": "plt.barh(データ列x, データ列y, color='khaki')"}
{"in": "ブランチドアーモンド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='blanchedalmond')"}
{"in": "横棒グラフの色をオールドレースにする", "out": "plt.barh(データ列x, データ列y, color='oldlace')"}
{"in": "option: 配列のデータ型を指定する", "out": "dtype = np.uint8"}
{"in": "option: グラフの色を淡いピンク色に設定する", "out": "color = 'lightpink'"}
{"in": "データフレームを残差プロットする", "out": "sns.residplot(x='列名', y='列名', data=df)"}
{"in": "リストとリストについて散布図を描画して、マーカーを星に設定する", "out": "plt.plot(データ列x, データ列y, marker='*')"}
{"in": "イテラブルを文字列リストに変換して、カンマで連結する", "out": "','.join(map(str, iterable))"}
{"in": "棒グラフの色をライトスレイグレーにする", "out": "plt.bar(データ列x, データ列y, color='lightslategrey')"}
{"in": "option: グラフの色をラベンダーブラッシュに設定する", "out": "color = 'lavenderblush'"}
{"in": "折れ線グラフの色を淡いピンク色に設定する", "out": "plt.plot(データ列x, データ列y, color='lightpink')"}
{"in": "文字列をカンマで区切って、列挙する", "out": "s.split(',')"}
{"in": "option: 青紫色を使う", "out": "color = 'violet'"}
{"in": "option: グラフの色をダーク・スラテグレーに設定する", "out": "color = 'darkslategrey'"}
{"in": "データフレームから一つの列を抽出する", "out": "df[['列A']]"}
{"in": "日付時刻データをタプルに変換する", "out": "aDatetime.timetuple()"}
{"in": "ヒストグラムの色をレモンシフォンに設定する", "out": "plt.hist(データ列, color='lemonchiffon')"}
{"in": "ダークオリーブグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkolivegreen')"}
{"in": "棒グラフをゲインズボロ色で描画する", "out": "plt.bar(データ列x, データ列y, color='gainsboro')"}
{"in": "データフレームの選択したカラムの統計量", "out": "df[['列A', '列B']].describe()"}
{"in": "赤いヒストグラムを描画する", "out": "plt.hist(データ列, color='r')"}
{"in": "オブジェクトのプロパティの値を設定する", "out": "setattr(obj, プロパティ名, 値)"}
{"in": "数式を部分分数に展開する", "out": "sympy.apart(e)"}
{"in": "グリッドの線の種類を点線に変更する", "out": "plt.grid(linestyle='dotted')"}
{"in": "option: マーカーの色をダークオーキッドにする", "out": "markerfacecolor = 'darkorchid'"}
{"in": "既存のファイルをBOM付きで追加できるようにオープンする]", "out": "open(filepath, mode='a', encoding='utf_8_sig')"}
{"in": "データ列を四分位数ごとにビン分割する", "out": "pd.qcut(ds, 4)"}
{"in": "耐火レンガ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='firebrick')"}
{"in": "横棒グラフをブラック色で描画する", "out": "plt.barh(データ列x, データ列y, color='black')"}
{"in": "nが奇数か調べる", "out": "n % 2 == 1"}
{"in": "オールドレース色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='oldlace')"}
{"in": "ミディアムオーキッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumorchid')"}
{"in": "ライトグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightgrey')"}
{"in": "文字列の変数名を数式に変換する", "out": "sympy.Symbol(s)"}
{"in": "自然数個のものからk個取り出したときの並べ方の総数", "out": "math.perm(n, k)"}
{"in": "option: グラフの色をグリーンイエローに設定する", "out": "color = 'greenyellow'"}
{"in": "日付データををn秒後に進める", "out": "aDate + datetime.timedelta(seconds=n)"}
{"in": "データシリーズを千の位で丸めて、整数型にする", "out": "ds.round(-3).astype(int)"}
{"in": "マルーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='maroon')"}
{"in": "配列のケンドールの相関係数を求める", "out": "scipy.stats.kendalltau(配列, 配列2)"}
{"in": "ヒストグラムの色をアリスブルーに設定する", "out": "plt.hist(データ列, color='aliceblue')"}
{"in": "横棒グラフをミスティローズ色で描画する", "out": "plt.barh(データ列x, データ列y, color='mistyrose')"}
{"in": "青紫色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='violet')"}
{"in": "オブジェクトは文字列クラスか調べる", "out": "isinstance(obj, str)"}
{"in": "回帰木分析の準備をする", "out": "model = sklearn.tree.DecisionTreeRegressor()"}
{"in": "文字列の開始位置以降が部分文字列で始まるか調べる", "out": "s.startswith(sub, start)"}
{"in": "折れ線グラフをインディアンレッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='indianred')"}
{"in": "option: マーカーの色をライトブルーにする", "out": "markerfacecolor = 'lightblue'"}
{"in": "option: コーンズシルク色を使う", "out": "color = 'cornsilk'"}
{"in": "リストとリストについて散布図を描画して、マーカーを四角に設定する", "out": "plt.plot(データ列x, データ列y, marker='s')"}
{"in": "option: グラフの色をライトグレーに設定する", "out": "color = 'lightgrey'"}
{"in": "データフレームを散布図で可視化して、カテゴリ別に色を変える", "out": "sns.scatterplot(data=df, x='列名', y='列名', hue='カテゴリ列')"}
{"in": "データシリーズが何時か見る", "out": "ds.dt.hour"}
{"in": "横棒グラフをピーチパフ色で描画する", "out": "plt.barh(データ列x, データ列y, color='peachpuff')"}
{"in": "棒グラフをライトゴールドロディイエロー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "折れ線グラフのダイアモンドマーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='D', markeredgewidth=2.5)"}
{"in": "棒グラフの色をライトグレーにする", "out": "plt.bar(データ列x, データ列y, color='lightgrey')"}
{"in": "棒グラフをパールバイオレットレッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='palevioletred')"}
{"in": "棒グラフの色をミディアムブルーにする", "out": "plt.bar(データ列x, データ列y, color='mediumblue')"}
{"in": "ミディアムオーキッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumorchid')"}
{"in": "横棒グラフをマゼンタ色で描画する", "out": "plt.barh(データ列x, データ列y, color='magenta')"}
{"in": "オリベドラブ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='olivedrab')"}
{"in": "散布図をシスル色で描画する", "out": "plt.scatter(データ列x, データ列y, color='thistle')"}
{"in": "要素∈集合", "out": "element in aSet"}
{"in": "クリムゾン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='crimson')"}
{"in": "データフレームを各グループごとに散布図にする", "out": "sns.scatterplot(data=df, x='列名', y='列名', hue='カテゴリ列')"}
{"in": "グラフにy=0の一点鎖線を付ける", "out": "plt.axhline(y=0, linestyle='dashbot')"}
{"in": "データフレームのパーセンタイル", "out": "df.quantile(パーセント/100)"}
{"in": "ヒストグラムをダークオーキッド色で描画する", "out": "plt.hist(データ列, color='darkorchid')"}
{"in": "option: コーンフラワーブルー色を使う", "out": "color = 'cornflowerblue'"}
{"in": "option: ミディアムアクアマリン色を使う", "out": "color = 'mediumaquamarine'"}
{"in": "日付データを文字列でフォーマットする", "out": "aDate.strftime(\"%d/%m/%y\")"}
{"in": "行列の列ごとの最大値", "out": "np.max(aArray, axis=0)"}
{"in": "ファイル全体を行単位で分割してリストに変換する", "out": "[s.strip() for s in f.readlines()]"}
{"in": "option: マーカーの色をミディアムパープルにする", "out": "markerfacecolor = 'mediumpurple'"}
{"in": "データシリーズを小数点以下n桁で丸める", "out": "ds.round(n)"}
{"in": "文字列の先頭で正規表現に大文字・小文字を無視してマッチするか見る", "out": "re.match(pattern, s, flags=re.IGNORECASE)"}
{"in": "グラフの色を濃くする", "out": "sns.set(pallete='deep')"}
{"in": "実数を実数で整数除算する", "out": "x // y"}
{"in": "文字列を赤色にする", "out": "f'\\033[31m{value}\\033[0m'"}
{"in": "散布図にrgbの星マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='*', c=rgb)"}
{"in": "横棒グラフの色をスカイブルーにする", "out": "plt.barh(データ列x, データ列y, color='skyblue')"}
{"in": "データフレームの指定したカラムの標本分散", "out": "df['列A'].var(ddof=0)"}
{"in": "リストとリストについて散布図を描画して、マーカーを右三角に設定する", "out": "plt.plot(データ列x, データ列y, marker='>')"}
{"in": "ゴーストホワイト色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='ghostwhite')"}
{"in": "二つのオブジェクトが同一参照か調べる", "out": "obj is obj2"}
{"in": "リスト内の要素が全て真か調べる", "out": "all(aList)"}
{"in": "単位正方行列", "out": "np.identity(n)"}
{"in": "xのハッシュ値", "out": "hash(x)"}
{"in": "集合にイテラブルを追加更新する", "out": "aSet.update(iterable)"}
{"in": "option: マーカーの色をダークサーモンにする", "out": "markerfacecolor = 'darksalmon'"}
{"in": "星印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='*')"}
{"in": "nをn2で整数除算する", "out": "n // n2"}
{"in": "折れ線グラフの丸マーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='o', markerfacecolor='k')"}
{"in": "option: 星マーカーを描画する", "out": "marker = '*'"}
{"in": "棒グラフの色を小麦色にする", "out": "plt.bar(データ列x, データ列y, color='wheat')"}
{"in": "xが一桁の正の数か調べる", "out": "0 <= x <= 9"}
{"in": "option: グラフの色をライトサーモンに設定する", "out": "color = 'lightsalmon'"}
{"in": "グラフの描画で濃くカラーパレットを使う", "out": "sns.set(pallete='deep')"}
{"in": "ビスク色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='bisque')"}
{"in": "横軸の目盛に文字列を付ける", "out": "plt.xticks([0, 60, 90], ['不可', '可', '秀'])"}
{"in": "散布図をロージーブラウン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='rosybrown')"}
{"in": "横棒グラフの色をペルーにする", "out": "plt.barh(データ列x, データ列y, color='peru')"}
{"in": "辞書の項目数", "out": "len(aDict)"}
{"in": "シャルトリューズ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='chartreuse')"}
{"in": "折れ線グラフの色をミディアムターコイズに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumturquoise')"}
{"in": "データフレームの第一四分位数", "out": "df.quantile(0.25)"}
{"in": "データ列を等間隔でn個にビン分割する", "out": "pd.cut(ds, n)"}
{"in": "option: ディムグレー色を使う", "out": "color = 'dimgray'"}
{"in": "ヒストグラムをライトグリーン色で描画する", "out": "plt.hist(データ列, color='lightgreen')"}
{"in": "横棒グラフをインディアンレッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='indianred')"}
{"in": "オブジェクトのオブジェクト識別子", "out": "id(obj)"}
{"in": "折れ線グラフに赤い星マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='*', markerfacecolor='r')"}
{"in": "ヒストグラムをタン色で描画する", "out": "plt.hist(データ列, color='tan')"}
{"in": "option: ブラック色を使う", "out": "color = 'black'"}
{"in": "option: グラフの色をライトイエローに設定する", "out": "color = 'lightyellow'"}
{"in": "データフレームの選択したカラムの不偏標準偏差", "out": "df[['列A', '列B']].std()"}
{"in": "折れ線グラフの四角マーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='s', markerfacecolor='r')"}
{"in": "アルファベットからひとつランダムに選ぶ", "out": "random.choice(string.ascii_uppercase)"}
{"in": "データフレームを表示するとき、ヘッダー行を左寄せに設定する", "out": "pd.set_option('colheader_justify', 'left')"}
{"in": "散布図をミディアムオーキッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumorchid')"}
{"in": "サーモン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='salmon')"}
{"in": "option: グラフの色をミディアムブルーに設定する", "out": "color = 'mediumblue'"}
{"in": "option: グラフの色をオレンジに設定する", "out": "color = 'orange'"}
{"in": "実数の小数点以下を丸める", "out": "round(x)"}
{"in": "シャルトリューズ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='chartreuse')"}
{"in": "ファイルをオープンする]", "out": "open(filepath)"}
{"in": "option: ブルーバイオレット色を使う", "out": "color = 'blueviolet'"}
{"in": "棒グラフをシーグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='seagreen')"}
{"in": "折れ線グラフの線の種類を実線に設定する", "out": "plt.plot(データ列x, データ列y, linestyle='solid')"}
{"in": "nからstep間隔で無限にカウントアップする", "out": "itertools.count(start=n, step=step)"}
{"in": "棒グラフの色をサーモンにする", "out": "plt.bar(データ列x, データ列y, color='salmon')"}
{"in": "日付データが火曜日か調べる", "out": "aDate.weekday() == 1"}
{"in": "散布図をマゼンタ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='magenta')"}
{"in": "リストをイミュータブルにする", "out": "tuple(aList)"}
{"in": "折れ線グラフの色をダークゴールデンロッドに設定する", "out": "plt.plot(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "ファイルをオープンして]、バイナリ書き込みストリームを使う", "out": "open(filepath, mode='wb')"}
{"in": "ロイヤルブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='royalblue')"}
{"in": "option: 耐火レンガ色を使う", "out": "color = 'firebrick'"}
{"in": "データフレームの複数の列をドロップしてみる", "out": "df.drop(['列A', '列B'], axis=1)"}
{"in": "横棒グラフをペールグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='palegreen')"}
{"in": "イテラブルを文字列リストに変換して、部分文字列で連結する", "out": "sub.join(map(str, iterable))"}
{"in": "ライトスレイグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightslategrey')"}
{"in": "折れ線グラフの色をアクアマリンに設定する", "out": "plt.plot(データ列x, データ列y, color='aquamarine')"}
{"in": "option: マーカーの色をナバホホワイトにする", "out": "markerfacecolor = 'navajowhite'"}
{"in": "デピンク色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='deeppink')"}
{"in": "赤い星マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='*', c='r')"}
{"in": "散布図に黒い星マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='*', c='k')"}
{"in": "データフレームの選択したカラムの標本標準偏差", "out": "df[['列A', '列B']].std(ddof=1)"}
{"in": "データフレームをグループ化し、ある列の要約統計量を求める", "out": "df.groupby('列A').describe()['列B']"}
{"in": "アイボリー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='ivory')"}
{"in": "折れ線グラフに左三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='<')"}
{"in": "下三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='v')"}
{"in": "データフレームを関数の値によってグループ化する", "out": "df.groupby(関数)"}
{"in": "データフレームが重複しているか調べる", "out": "df.duplicated()"}
{"in": "リストを中央値でビン分割する", "out": "pd.qcut(aList, 2)"}
{"in": "折れ線グラフの色をブルーバイオレットに設定する", "out": "plt.plot(データ列x, データ列y, color='blueviolet')"}
{"in": "ダーク・スラテグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkslategrey')"}
{"in": "インディアンレッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='indianred')"}
{"in": "ヒストグラムの線の種類を一点鎖線に設定する", "out": "plt.hist(データ列, linestyle='dashbot')"}
{"in": "折れ線グラフの色をライトスカイブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='lightskyblue')"}
{"in": "整数nをバイト列に変換する", "out": "n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')"}
{"in": "散布図の色をフクシアにする", "out": "plt.scatter(データ列x, データ列y, color='fuchsia')"}
{"in": "データフレームの指定したカラムの中に文字列と文字列がいくつあるか数える", "out": "df['列A'].isin([value, value2]).sum()"}
{"in": "アンティークホワイト色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='antiquewhite')"}
{"in": "横棒グラフの色をダークオリーブグリーンにする", "out": "plt.barh(データ列x, データ列y, color='darkolivegreen')"}
{"in": "データフレームの列の名前の一覧を使う", "out": "df.columns"}
{"in": "自然数の順列の総数", "out": "math.perm(n)"}
{"in": "散布図の色をライトイエローにする", "out": "plt.scatter(データ列x, データ列y, color='lightyellow')"}
{"in": "棒グラフの色をプラムにする", "out": "plt.bar(データ列x, データ列y, color='plum')"}
{"in": "option: マーカーの色をフォレストグリーンにする", "out": "markerfacecolor = 'forestgreen'"}
{"in": "名前からカラーマップを使う", "out": "plt.get_cmap(\"カラーマップ名\")"}
{"in": "ゼロ埋めされた整数型の配列", "out": "np.zeros(要素数, dtype=np.int)"}
{"in": "ライトコーラル色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightcoral')"}
{"in": "棒グラフの色をスプリンググリーンにする", "out": "plt.bar(データ列x, データ列y, color='springgreen')"}
{"in": "色付きの一点鎖線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot', color='#800080')"}
{"in": "数式を簡単にする", "out": "sympy.sympify(e)"}
{"in": "ふたつの集合に共通する要素からなる集合", "out": "aSet.intersection(aSet2)"}
{"in": "折れ線グラフに赤い下三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='v', markerfacecolor='r')"}
{"in": "ライトグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightseagreen')"}
{"in": "rgbの四角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='s', c=rgb)"}
{"in": "データフレームから列を一つ選択する", "out": "df[['列A']]"}
{"in": "ゲインズボロ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='gainsboro')"}
{"in": "散布図の色をネイビーにする", "out": "plt.scatter(データ列x, データ列y, color='navy')"}
{"in": "十六進数字を全部使う", "out": "string.hexdigits"}
{"in": "option: ミディアムシアグリーン色を使う", "out": "color = 'mediumseagreen'"}
{"in": "option: マーカーの色をシアンにする", "out": "markerfacecolor = 'cyan'"}
{"in": "データ列を閾値で二値化する", "out": "sklearn.preprocessing.Binarizer(threshold=閾値).fit_transform(データ列)"}
{"in": "フクシア色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='fuchsia')"}
{"in": "ダークスラテグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkslategray')"}
{"in": "折れ線グラフを黄色色で描画する", "out": "plt.plot(データ列x, データ列y, color='yellow')"}
{"in": "エラーを無視して文字列をバイト列に変換する", "out": "s.encode(errors='ignore')"}
{"in": "カラーバーを描画する", "out": "plt.colorbar()"}
{"in": "データフレームの欠損値が含まれる箇所に色を付ける", "out": "df.style.highlight_null()"}
{"in": "グラフの描画で色差別なくカラーパレットを使う", "out": "sns.set(pallete='colorblind')"}
{"in": "散布図の三角マーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='^', markersize=2.0)"}
{"in": "ヒストグラムをシアン色で描画する", "out": "plt.hist(データ列, color='cyan')"}
{"in": "ペルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='peru')"}
{"in": "ホットピンク色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='hotpink')"}
{"in": "折れ線グラフをダークグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkgray')"}
{"in": "小麦色色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='wheat')"}
{"in": "nが5の倍数か調べる", "out": "n % 5 == 0"}
{"in": "グレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='grey')"}
{"in": "棒グラフをグリーンイエロー色で描画する", "out": "plt.bar(データ列x, データ列y, color='greenyellow')"}
{"in": "データを最大最小値で標準化する", "out": "sklearn.preprocessing.MinMaxScaler().fit_transform(データ)"}
{"in": "折れ線グラフの下三角マーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='v', markerfacecolor='r')"}
{"in": "option: ロイヤルブルー色を使う", "out": "color = 'royalblue'"}
{"in": "指定した列のみ、データフレームの重複を見る", "out": "df.duplicated(subset='列A')"}
{"in": "リストをダミー変数に変換する", "out": "pd.get_dummies(リスト)"}
{"in": "リストとリストについての散布図に黒い右三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='>', c='k')"}
{"in": "モデルの平均二乗誤差を求める", "out": "sklearn.metrics.mean_squared_error(目的変数, model.predict(説明変数))"}
{"in": "ヒストグラムをローングリーン色で描画する", "out": "plt.hist(データ列, color='lawngreen')"}
{"in": "コルモゴロフ・スミルノフ検定を行う", "out": "scipy.stats.kstest(df['列A'], 'norm')"}
{"in": "折れ線グラフをパウダーブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='powderblue')"}
{"in": "折れ線グラフの色をピンクに設定する", "out": "plt.plot(データ列x, データ列y, color='pink')"}
{"in": "ヒストグラムをパールバイオレットレッド色で描画する", "out": "plt.hist(データ列, color='palevioletred')"}
{"in": "option: グラフの色をパールゴールデンロッドに設定する", "out": "color = 'palegoldenrod'"}
{"in": "折れ線グラフを青い実線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid', color='b')"}
{"in": "option: グラフの色をトマトに設定する", "out": "color = 'tomato'"}
{"in": "データフレームの欠損値を最小値に設定する", "out": "df.fillna(df.min())"}
{"in": "ヒストグラムの色をライトシアンに設定する", "out": "plt.hist(データ列, color='lightcyan')"}
{"in": "データフレームから列を三つ選択する", "out": "df[['列A', '列B', '列C']]"}
{"in": "option: グラフの色をオレンジレッドに設定する", "out": "color = 'orangered'"}
{"in": "折れ線グラフの色を茶色に設定する", "out": "plt.plot(データ列x, データ列y, color='brown')"}
{"in": "option: マーカーの色をオールドレースにする", "out": "markerfacecolor = 'oldlace'"}
{"in": "アンサンブル学習でクラス分類を行う", "out": "sklearn.ensemble.VotingClassifier()"}
{"in": "イテラブルを2回あわせた直積", "out": "itertools.product(iterable, repeat=2)"}
{"in": "折れ線グラフをシスル色で描画する", "out": "plt.plot(データ列x, データ列y, color='thistle')"}
{"in": "横棒グラフの色をインディゴにする", "out": "plt.barh(データ列x, データ列y, color='indigo')"}
{"in": "option: 線の種類を実線に設定する", "out": "linestyle = 'solid'"}
{"in": "nとn2が等しいか調べる", "out": "n == n2"}
{"in": "日付データが月曜日か調べる", "out": "aDate.weekday() == 0"}
{"in": "option: マーカーをバツに変更する", "out": "marker = 'x'"}
{"in": "ヒストグラムをオレンジレッド色で描画する", "out": "plt.hist(データ列, color='orangered')"}
{"in": "データフレームの中に文字列と文字列があるか調べる", "out": "df.isin([value, value2])"}
{"in": "文字列がタプルに含まれないか調べる", "out": "element not in aTuple"}
{"in": "アクアマリン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='aquamarine')"}
{"in": "数式の部分分数化を行う", "out": "sympy.apart(e)"}
{"in": "青紫色のヒストグラムを描画する", "out": "plt.hist(データ列, color='violet')"}
{"in": "折れ線グラフの色をゴールドに設定する", "out": "plt.plot(データ列x, データ列y, color='gold')"}
{"in": "ビスク色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='bisque')"}
{"in": "配列が正規分布に従うか仮説検定する", "out": "scipy.stats.shapiro(配列)"}
{"in": "折れ線グラフにダイアモンドマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='D')"}
{"in": "option: ベージュ色を使う", "out": "color = 'beige'"}
{"in": "option: マーカーの色をアクアにする", "out": "markerfacecolor = 'aqua'"}
{"in": "事前に大文字・小文字を無視して正規表現をコンパイルする", "out": "re.compile(pattern, flag=re.IGNORECASE)"}
{"in": "option: グラフの色をホワイトスモークに設定する", "out": "color = 'whitesmoke'"}
{"in": "スチールブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='steelblue')"}
{"in": "散布図の星マーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='r')"}
{"in": "フクシア色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='fuchsia')"}
{"in": "データ列の各データ値の出現数", "out": "ds.value_counts()"}
{"in": "棒グラフを耐火レンガ色で描画する", "out": "plt.bar(データ列x, データ列y, color='firebrick')"}
{"in": "日付時刻データの時間数", "out": "aDatetime.hour"}
{"in": "グラフの色をパステル調にする", "out": "sns.set(pallete='pastel')"}
{"in": "辞書のキー一覧", "out": "list(aDict)"}
{"in": "数式を方程式として解く", "out": "sympy.solve(e)"}
{"in": "折れ線グラフの星マーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='*', markerfacecolor='r')"}
{"in": "コーンフラワーブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='cornflowerblue')"}
{"in": "回帰モデルを交差検証する", "out": "sklearn.model_selection.cross_val_score(model, 説明変数, 目的変数, cv=5, scoring='r2')"}
{"in": "option: ライトゴールドロディイエロー色を使う", "out": "color = 'lightgoldenrodyellow'"}
{"in": "横棒グラフの色をタンにする", "out": "plt.barh(データ列x, データ列y, color='tan')"}
{"in": "option: 先頭の行をヘッダに設定する", "out": "header = 0"}
{"in": "横棒グラフをスノー色で描画する", "out": "plt.barh(データ列x, データ列y, color='snow')"}
{"in": "棒グラフの色をスチールブルーにする", "out": "plt.bar(データ列x, データ列y, color='steelblue')"}
{"in": "ペルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='peru')"}
{"in": "折れ線グラフのダイアモンドマーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='D', markerfacecolor='k')"}
{"in": "option: グラフの色をグレーに設定する", "out": "color = 'gray'"}
{"in": "データフレームをグループ化し、それぞれの平均値を求める", "out": "df.groupby('列A').mean()"}
{"in": "配列の尖度を求める", "out": "scipy.stats.kurtosis(配列, bias=False)"}
{"in": "正規表現モジュールをインポートする", "out": "import re"}
{"in": "配列を四分位数ごとにビン分割する", "out": "pd.qcut(aArray, 4)"}
{"in": "シエナ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='sienna')"}
{"in": "ヒストグラムをデピンク色で描画する", "out": "plt.hist(データ列, color='deeppink')"}
{"in": "ダークグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkgrey')"}
{"in": "部分文字列が部分文字列で始まるか調べる", "out": "s.startswith(sub)"}
{"in": "データフレームの指定したカラムの標本標準偏差", "out": "df['列A'].std(ddof=1)"}
{"in": "データフレームをインデックスによって降順でソートする", "out": "df.sort_index(ascending=False)"}
{"in": "ダーク・スラテグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkslategrey')"}
{"in": "実数をn乗する", "out": "x ** n"}
{"in": "グリーンイエロー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='greenyellow')"}
{"in": "日付データと日付データの時間差を秒数で求める", "out": "(aDate - aDate2).total_seconds()"}
{"in": "折れ線グラフのバツマーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='x', markeredgewidth=2.5)"}
{"in": "棒グラフの色をインディアンレッドにする", "out": "plt.bar(データ列x, データ列y, color='indianred')"}
{"in": "nをn2で割る", "out": "n / n2"}
{"in": "折れ線グラフをシャルトリューズ色で描画する", "out": "plt.plot(データ列x, データ列y, color='chartreuse')"}
{"in": "ファイルが存在するか調べる", "out": "os.path.exists(filepath)"}
{"in": "最大最小から配列", "out": "np.linspace(最小値, 最大値, 要素数)"}
{"in": "TSVファイルから文字コードを指定してデータフレームを読み込む", "out": "pd.read_csv('file.tsv', sep='\\t', encoding=文字エンコーディング)"}
{"in": "四角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='s')"}
{"in": "データフレームのあるカラムの分", "out": "df['列A'].dt.minute"}
{"in": "横棒グラフをチョコレート色で描画する", "out": "plt.barh(データ列x, データ列y, color='chocolate')"}
{"in": "乱数シードをnで固定する", "out": "random.seed(n)"}
{"in": "文字列リストをsepを区切りにしてひとつの文字列にする", "out": "sep.join(aStringList)"}
{"in": "option: マーカーの色をグレーにする", "out": "markerfacecolor = 'grey'"}
{"in": "集合を空にする", "out": "aSet.clear()"}
{"in": "データ列の出現頻度を可視化する", "out": "plt.hist(データ列)"}
{"in": "nが一桁の数か調べる", "out": "-9 <= n <= 9"}
{"in": "ヒストグラムの色をライトグレーに設定する", "out": "plt.hist(データ列, color='lightgrey')"}
{"in": "ライムグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='limegreen')"}
{"in": "散布図に黒い四角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='k')"}
{"in": "データフレームの列の名前を列挙する", "out": "df.columns"}
{"in": "本日が火曜日か調べる", "out": "datetime.datetime.today().weekday() == 1"}
{"in": "折れ線グラフをダークバイオレット色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkviolet')"}
{"in": "option: グラフの色をスレートブルーに設定する", "out": "color = 'slateblue'"}
{"in": "棒グラフの色をライトグリーンにする", "out": "plt.bar(データ列x, データ列y, color='lightgreen')"}
{"in": "日付データが金曜日か調べる", "out": "aDate.weekday() == 4"}
{"in": "データフレームを表示するとき、カラムの最大幅をnに設定する", "out": "pd.set_option('max_colwidth', n)"}
{"in": "データフレームを配列に変換する", "out": "df.values"}
{"in": "折れ線グラフの色をペルーに設定する", "out": "plt.plot(データ列x, データ列y, color='peru')"}
{"in": "データ列を使う", "out": "import pandas as pd"}
{"in": "ヒストグラムをオーキッド色で描画する", "out": "plt.hist(データ列, color='orchid')"}
{"in": "プラットフォームのコードポイントの最大値", "out": "sys.maxunicode"}
{"in": "option: マーカーの色をディムグレーにする", "out": "markerfacecolor = 'dimgrey'"}
{"in": "ヒストグラムの色をライトイエローに設定する", "out": "plt.hist(データ列, color='lightyellow')"}
{"in": "全ての空白文字", "out": "string.whitespace"}
{"in": "棒グラフをライトスレイグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightslategray')"}
{"in": "option: グラフの色をパレットトルコイズに設定する", "out": "color = 'paleturquoise'"}
{"in": "文字列全体を大文字・小文字を無視して正規表現にマッチさせる", "out": "re.fullmatch(pattern, s, flags=re.IGNORECASE)"}
{"in": "option: トマト色を使う", "out": "color = 'tomato'"}
{"in": "リストにリストを追加する", "out": "aList.extend(aList2)"}
{"in": "ミディアムブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumblue')"}
{"in": "シアン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='cyan')"}
{"in": "日付時刻データからn分、減算する", "out": "aDatetime - datetime.timedelta(minutes=n)"}
{"in": "折れ線グラフに黒い大バツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='X', markerfacecolor='k')"}
{"in": "散布図の色を白にする", "out": "plt.scatter(データ列x, データ列y, color='white')"}
{"in": "グリッドの線の種類を破線に変更する", "out": "plt.grid(linestyle='dashed')"}
{"in": "横棒グラフをアイボリー色で描画する", "out": "plt.barh(データ列x, データ列y, color='ivory')"}
{"in": "横棒グラフの色をライトグリーンにする", "out": "plt.barh(データ列x, データ列y, color='lightgreen')"}
{"in": "十六進文字列を整数に変換する", "out": "int(s, 16)"}
{"in": "文字列の中の大文字・小文字を無視して正規表現による全てのマッチを使う", "out": "re.findall(pattern, s, flags=re.IGNORECASE)"}
{"in": "データシリーズの中央値", "out": "ds.median()"}
{"in": "全ての数字", "out": "string.digits"}
{"in": "棒グラフをレベッカパープル色で描画する", "out": "plt.bar(データ列x, データ列y, color='rebeccapurple')"}
{"in": "文字列の終了位置まで部分文字列を探す", "out": "s.find(sub, 0, end)"}
{"in": "ダークオリーブグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkolivegreen')"}
{"in": "データフレームの選択したカラムを小数点以下n桁で丸める", "out": "df[['列A', '列B']].round(n)"}
{"in": "ヒストグラムの色をスラグレーに設定する", "out": "plt.hist(データ列, color='slategrey')"}
{"in": "ヒストグラムをダークグリーン色で描画する", "out": "plt.hist(データ列, color='darkgreen')"}
{"in": "棒グラフを紺色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkblue')"}
{"in": "散布図に黒い三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='k')"}
{"in": "ヒストグラムをシャルトリューズ色で描画する", "out": "plt.hist(データ列, color='chartreuse')"}
{"in": "文字列をマゼンタにする", "out": "f'\\033[35m{value}\\033[0m'"}
{"in": "option: グラフの色をダークグレーに設定する", "out": "color = 'darkgrey'"}
{"in": "ラベンダーブラッシュ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lavenderblush')"}
{"in": "ディープスカイブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='deepskyblue')"}
{"in": "散布図をカデットブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='cadetblue')"}
{"in": "データフレームの列の各データ値の出現数", "out": "df[col].value_counts()"}
{"in": "リストの合計値", "out": "sum(aList)"}
{"in": "文字列を部分文字列で分けたときの後半の文字列", "out": "s.partition(sub)[-1]"}
{"in": "データフレームから同じ内容の行をドロップする", "out": "df.drop_duplicates(inplace=True)"}
{"in": "シャルトリューズ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='chartreuse')"}
{"in": "カテゴリデータ列を連番に変換する", "out": "sklearn.preprocessing.LabelEncoder().fit_transform(データ列)"}
{"in": "棒グラフをコーンフラワーブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='cornflowerblue')"}
{"in": "データ列をヒストグラムにする", "out": "plt.hist(データ列)"}
{"in": "ミントクリーム色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mintcream')"}
{"in": "rgbの丸マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='o', c=rgb)"}
{"in": "横棒グラフをアクア色で描画する", "out": "plt.barh(データ列x, データ列y, color='aqua')"}
{"in": "行列の値を変更する", "out": "aArray[行番号, 列番号] = 指定の値"}
{"in": "黄色い散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='y')"}
{"in": "実数の複素数", "out": "complex(x)"}
{"in": "グリッド線", "out": "plt.grid(alpha=0.5)"}
{"in": "データフレームをに箱ひげ図で可視化する", "out": "sns.boxplot(x='カテゴリ列', y='列', data=df)"}
{"in": "ライトスレイグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightslategray')"}
{"in": "ライトスレイグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightslategray')"}
{"in": "折れ線グラフをビスク色で描画する", "out": "plt.plot(データ列x, データ列y, color='bisque')"}
{"in": "ミッドナイトブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='midnightblue')"}
{"in": "散布図に赤い下三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='r')"}
{"in": "黄色いグリッド線を引く", "out": "plt.grid(color='y')"}
{"in": "両端キューのstart番目からend番目の部分要素", "out": "collections.deque(itertools.islice(deq, start, end))"}
{"in": "オブジェクトのプロパティの値", "out": "getattr(obj, プロパティ名)"}
{"in": "シャルトリューズ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='chartreuse')"}
{"in": "折れ線グラフに黒いダイアモンドマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='D', markerfacecolor='k')"}
{"in": "リストの全ての要素をクリアにする", "out": "aList.clear()"}
{"in": "リネン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='linen')"}
{"in": "ヒストグラムをピンク色で描画する", "out": "plt.hist(データ列, color='pink')"}
{"in": "リストの要素を逆順にする", "out": "aList[::-1]"}
{"in": "入力から二つの文字列を読む", "out": "A, B = map(str, input().split())"}
{"in": "棒グラフをスカイブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='skyblue')"}
{"in": "option: マーカーの色をライトスカイブルーにする", "out": "markerfacecolor = 'lightskyblue'"}
{"in": "option: マーカーの色を淡いピンク色にする", "out": "markerfacecolor = 'lightpink'"}
{"in": "option: グラフの色を黄色に設定する", "out": "color = 'yellow'"}
{"in": "ミッドナイトブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='midnightblue')"}
{"in": "タプルの文字列が最初に見つかるインデックス", "out": "aTuple.index(element)"}
{"in": "グラフを論文用に設定する", "out": "sns.set(context='paper')"}
{"in": "ファイルを改行を取り除いて一行ずつ読み込む", "out": "f.readline()"}
{"in": "option: マーカーの色をミディアムアクアマリンにする", "out": "markerfacecolor = 'mediumaquamarine'"}
{"in": "データフレームの選択したカラムの欠損値を中央値に設定する", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].median())"}
{"in": "配列の相関係数を求める", "out": "scipy.stats.pearsonr(配列, 配列2)"}
{"in": "棒グラフの色をライトイエローにする", "out": "plt.bar(データ列x, データ列y, color='lightyellow')"}
{"in": "日付データからn分、減算する", "out": "aDate - datetime.timedelta(minutes=n)"}
{"in": "整数nのビット長", "out": "n.bit_length()"}
{"in": "散布図の色をホワイトスモークにする", "out": "plt.scatter(データ列x, データ列y, color='whitesmoke')"}
{"in": "ヒストグラムの色をピンクに設定する", "out": "plt.hist(データ列, color='pink')"}
{"in": "ライトスカイブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightskyblue')"}
{"in": "nがn2よりも小さいか調べる", "out": "n < n2"}
{"in": "データフレームの列をリネームする", "out": "df.rename(columns={'列A': '列a', '列B': '列b'})"}
{"in": "横軸の目盛を対数に変更する", "out": "plt.xscale('log')"}
{"in": "ヒストグラムをダークシアン色で描画する", "out": "plt.hist(データ列, color='darkcyan')"}
{"in": "文字列のn番目", "out": "s[n]"}
{"in": "シーグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='seagreen')"}
{"in": "散布図の色をフォレストグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='forestgreen')"}
{"in": "折れ線グラフの色をレモンシフォンに設定する", "out": "plt.plot(データ列x, データ列y, color='lemonchiffon')"}
{"in": "日付データの曜日を整数で使う", "out": "aDate.weekday()"}
{"in": "集合の浅いコピー", "out": "aSet.copy()"}
{"in": "グラフを表示する", "out": "plt.show()"}
{"in": "イテラブルを集合に変換する", "out": "set(iterable)"}
{"in": "データフレームをCSVファイルに小数点以下3桁まで保存する", "out": "df.to_csv('file.csv', float_format='%.3f')"}
{"in": "行列の行列積", "out": "np.matmul(aArray, aArray2)"}
{"in": "ダークゴールデンロッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "散布図をディープスカイブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='deepskyblue')"}
{"in": "ヒストグラムをシスル色で描画する", "out": "plt.hist(データ列, color='thistle')"}
{"in": "全要素を０で初期化した行列", "out": "np.zeros(行数, 列数)"}
{"in": "横棒グラフの色をアクアマリンにする", "out": "plt.barh(データ列x, データ列y, color='aquamarine')"}
{"in": "option: ロージーブラウン色を使う", "out": "color = 'rosybrown'"}
{"in": "ユーザから入力される", "out": "input()"}
{"in": "データ列間の決定係数を求める", "out": "sklearn.metrics.r2_score(データ列, データ列2)"}
{"in": "タプルをnからナンバリングする", "out": "enumerate(aTuple, start=n)"}
{"in": "実数を切り下げて整数に変換する", "out": "math.floor(x)"}
{"in": "黄色い折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='y')"}
{"in": "横棒グラフをパープル色で描画する", "out": "plt.barh(データ列x, データ列y, color='purple')"}
{"in": "辞書のキーと値を入れ替える", "out": "{v: k for k, v in aDict.items()}"}
{"in": "ヒストグラムの色をバリーウッドに設定する", "out": "plt.hist(データ列, color='burlywood')"}
{"in": "データシリーズの欠損値を平均値で埋める", "out": "ds.fillna(ds.mean())"}
{"in": "コーラル色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='coral')"}
{"in": "option: アイボリー色を使う", "out": "color = 'ivory'"}
{"in": "シルバー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='silver')"}
{"in": "散布図の色を青緑にする", "out": "plt.scatter(データ列x, データ列y, color='teal')"}
{"in": "横棒グラフを描画して、ラベルを中央寄せする", "out": "plt.barh(ラベル列, データ列, align='center')"}
{"in": "ファイルから読み込みストリームをオープンして]、fとする", "out": "f = open(filepath, mode='r')"}
{"in": "日付データと日付データの時間差が何分か知る", "out": "(aDate - aDate2).total_seconds()//60"}
{"in": "ふたつの集合のいずれか一方だけの集合", "out": "aSet.symmetric_difference(aSet2)"}
{"in": "散布図をミントクリーム色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mintcream')"}
{"in": "オリベドラブ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='olivedrab')"}
{"in": "year年を日付に変換する", "out": "datetime.date(year=year, month=1, day=1)"}
{"in": "折れ線グラフの下三角マーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='v', markersize=2.0)"}
{"in": "散布図の三角マーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='b')"}
{"in": "散布図の四角マーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='r')"}
{"in": "文字列の開始位置から終了位置まで部分文字列を探す", "out": "s.find(sub, start, end)"}
{"in": "新しいリッジ回帰とロッソ回帰のハイブリットモデルを作る", "out": "model = sklearn.linear_model.ElasticNet()"}
{"in": "option: グラフの色をロイヤルブルーに設定する", "out": "color = 'royalblue'"}
{"in": "データフレームの行を条件でフィルタする", "out": "df[(df['列A'] == x) & (df['列B'] == y)]"}
{"in": "横棒グラフの色をコーンフラワーブルーにする", "out": "plt.barh(データ列x, データ列y, color='cornflowerblue')"}
{"in": "棒グラフをプラム色で描画する", "out": "plt.bar(データ列x, データ列y, color='plum')"}
{"in": "スカイブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='skyblue')"}
{"in": "ヒストグラムをレモンシフォン色で描画する", "out": "plt.hist(データ列, color='lemonchiffon')"}
{"in": "横棒グラフをコーンフラワーブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='cornflowerblue')"}
{"in": "ファイルをオープンして]、追加ストリームを使う", "out": "open(filepath, mode='a')"}
{"in": "折れ線グラフの色をサーモンに設定する", "out": "plt.plot(データ列x, データ列y, color='salmon')"}
{"in": "ファイルからの入力ストリームを使う", "out": "open(filepath)"}
{"in": "ゼロ埋めされた８ビット整数型の配列", "out": "np.zeros(要素数, dtype=np.int8)"}
{"in": "散布図に赤い丸マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='o', c='r')"}
{"in": "アリスブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='aliceblue')"}
{"in": "実数を小数点以下で丸める", "out": "round(x, n)"}
{"in": "配列をビン数nでビン分割する", "out": "pd.cut(aArray, n)"}
{"in": "散布図をダークスラテグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkslategray')"}
{"in": "option: どの行もヘッダにしない", "out": "header = None"}
{"in": "データフレームをグループ化し、ある列に対し最大値を求める", "out": "df.groupby('列A')['列B'].max()"}
{"in": "折れ線グラフの色をスラグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='slategrey')"}
{"in": "イテラブルの重複コンビネーション", "out": "itertools.combinations_with_replacement(iterable, n)"}
{"in": "横棒グラフの色をミディアムシアグリーンにする", "out": "plt.barh(データ列x, データ列y, color='mediumseagreen')"}
{"in": "option: 破壊的に操作する", "out": "inplace = True"}
{"in": "ミディアムパープル色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumpurple')"}
{"in": "折れ線グラフの色をダークバイオレットに設定する", "out": "plt.plot(データ列x, データ列y, color='darkviolet')"}
{"in": "折れ線グラフをダークグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkgreen')"}
{"in": "最初のコマンド引数", "out": "sys.argv[1]"}
{"in": "year年を日付時刻に変換する", "out": "datetime.datetime(year=year, month=1, day=1)"}
{"in": "ヒストグラムの色をシルバーに設定する", "out": "plt.hist(データ列, color='silver')"}
{"in": "文字列を文字コードエスケープでバイト列に変換する", "out": "s.encode(encoding='unicode_escape')"}
{"in": "折れ線グラフをバリーウッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='burlywood')"}
{"in": "文字列のケースを変換する", "out": "s.casefold()"}
{"in": "折れ線グラフをオレンジ色で描画する", "out": "plt.plot(データ列x, データ列y, color='orange')"}
{"in": "データを最大値で正規化する", "out": "sklearn.preprocessing.MaxAbsScaler().fit_transform(データ)"}
{"in": "option: ハニーデュー色を使う", "out": "color = 'honeydew'"}
{"in": "カウンタを多い順に列挙する", "out": "aCounter.most_common()"}
{"in": "カウンタの項目を列挙する", "out": "aCounter.keys()"}
{"in": "データフレームのn行目を削除して", "out": "df.drop(n, axis=0)"}
{"in": "散布図の色をミディアムスプリンググリーンにする", "out": "plt.scatter(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "ゲインズボロ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='gainsboro')"}
{"in": "日付時刻データの月数", "out": "aDatetime.month"}
{"in": "折れ線グラフにバツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='x')"}
{"in": "実数が負の数か調べる", "out": "x < 0"}
{"in": "データシリーズの月", "out": "ds.dt.month"}
{"in": "正規表現を使う", "out": "import re"}
{"in": "実数を三乗する", "out": "x ** 3"}
{"in": "折れ線グラフの色をナバホホワイトに設定する", "out": "plt.plot(データ列x, データ列y, color='navajowhite')"}
{"in": "スラグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='slategray')"}
{"in": "横棒グラフをライトスチールブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightsteelblue')"}
{"in": "散布図に三角マーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='^')"}
{"in": "日付データからn週間分、減算する", "out": "aDate - datetime.timedelta(weeks=n)"}
{"in": "現在の分数", "out": "datetime.date.today().minute"}
{"in": "オリーブ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='olive')"}
{"in": "折れ線グラフの色をスレートブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='slateblue')"}
{"in": "辞書からキーで指定された項目をポップする", "out": "aDict.pop(key)"}
{"in": "棒グラフをライトコーラル色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightcoral')"}
{"in": "UNIXコマンドtextを実行する", "out": "os.system(text)"}
{"in": "折れ線グラフをアクアマリン色で描画する", "out": "plt.plot(データ列x, データ列y, color='aquamarine')"}
{"in": "文字列を最後の部分文字列で二分する", "out": "s.rpartition(sub)"}
{"in": "紺碧色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='azure')"}
{"in": "option: グラフの色をマルーンに設定する", "out": "color = 'maroon'"}
{"in": "option: スカイブルー色を使う", "out": "color = 'skyblue'"}
{"in": "ヒストグラムを青くする", "out": "plt.hist(データ列, color='b')"}
{"in": "標準入力から1行だけ読む", "out": "sys.stdin.readline()"}
{"in": "文字列が全て数字か調べる", "out": "s.isdigit()"}
{"in": "ヒストグラムをホワイトスモーク色で描画する", "out": "plt.hist(データ列, color='whitesmoke')"}
{"in": "nからn2までのスライス", "out": "slice(n, n2)"}
{"in": "貝殻色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='seashell')"}
{"in": "option: カデットブルー色を使う", "out": "color = 'cadetblue'"}
{"in": "option: マーカーの色をダークスレートブルーにする", "out": "markerfacecolor = 'darkslateblue'"}
{"in": "横棒グラフの色をライトブルーにする", "out": "plt.barh(データ列x, データ列y, color='lightblue')"}
{"in": "ヒストグラムの色をダークスレートブルーに設定する", "out": "plt.hist(データ列, color='darkslateblue')"}
{"in": "文字列の末尾から部分文字列を探す", "out": "s.rfind(sub)"}
{"in": "数式を数値計算する", "out": "float(e)"}
{"in": "配列のユニークな要素", "out": "np.unique(aArray)"}
{"in": "両端キューのstart〜endの部分要素", "out": "collections.deque(itertools.islice(deq, start, end))"}
{"in": "サンディーブラウン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='sandybrown')"}
{"in": "データフレームから数値データの列を抽出する", "out": "df.select_dtypes('number')"}
{"in": "折れ線グラフをライトブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightblue')"}
{"in": "散布図に黒いバツマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='k')"}
{"in": "文字列が全てアルファベットか調べる", "out": "s.isalpha()"}
{"in": "文字列に日本語が含まれるか調べる", "out": "re.search('[あ-んア-ン\\u4E00-\\u9FD0]', s)"}
{"in": "データ列のヒストグラムを描画する", "out": "plt.hist(データ列)"}
{"in": "option: グラフの色をスプリンググリーンに設定する", "out": "color = 'springgreen'"}
{"in": "横棒グラフの色をダークグレーにする", "out": "plt.barh(データ列x, データ列y, color='darkgrey')"}
{"in": "year年day月の日付時刻", "out": "datetime.datetime(year=year, month=month, day=1)"}
{"in": "縦棒グラフを描画する", "out": "plt.bar(ラベル列, データ列)"}
{"in": "棒グラフをダークバイオレット色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkviolet')"}
{"in": "棒グラフをライトイエロー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightyellow')"}
{"in": "データフレームの歪度", "out": "df.kurt()"}
{"in": "ファイルをBOM付きでオープンする]", "out": "open(filepath, encoding='utf_8_sig')"}
{"in": "ヒストグラムを青色で描画する", "out": "plt.hist(データ列, color='blue')"}
{"in": "モデルの予測値と実測値を比較する", "out": "pd.DataFrame({'実測': 目的変数, '予測': model.predict(説明変数)})"}
{"in": "x,y,zをそれぞれn,n2,n3とする", "out": "x, y, z = n, n2, n3"}
{"in": "散布図にポイントマーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='.')"}
{"in": "確率的勾配降下でクラス分類を行う", "out": "model = sklearn.linear_model.SGDClassifier()"}
{"in": "変数が0に近づくときの数式の極限値を求める", "out": "sympy.limit(e, z, 0)"}
{"in": "散布図をアリスブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='aliceblue')"}
{"in": "散布図をマルーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='maroon')"}
{"in": "散布図に黒い左三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='<', c='k')"}
{"in": "棒グラフをミディアムシアグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumseagreen')"}
{"in": "折れ線グラフの色をブラックに設定する", "out": "plt.plot(データ列x, データ列y, color='black')"}
{"in": "ヒストグラムの色をミディアムスプリンググリーンに設定する", "out": "plt.hist(データ列, color='mediumspringgreen')"}
{"in": "外れ値を除いたデータフレームのカラムの算術平均を求める", "out": "scipy.stats.tmean(df['列A'], limits=(下限, 上限), inclusive=(True, True))"}
{"in": "データシリーズの標準偏差", "out": "ds.std()"}
{"in": "散布図に黒い右三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='>', c='k')"}
{"in": "データフレームを表示するとき、n行までデータフレームを表示できるようにする", "out": "pd.set_option('display.max_rows', n)"}
{"in": "棒グラフの色をパープルにする", "out": "plt.bar(データ列x, データ列y, color='purple')"}
{"in": "横棒グラフをビスク色で描画する", "out": "plt.barh(データ列x, データ列y, color='bisque')"}
{"in": "ファイルをUTF8でオープンする]", "out": "open(filepath, encoding='utf-8')"}
{"in": "折れ線グラフの色をダークシアンに設定する", "out": "plt.plot(データ列x, データ列y, color='darkcyan')"}
{"in": "棒グラフの色をゴールデンロッドにする", "out": "plt.bar(データ列x, データ列y, color='goldenrod')"}
{"in": "フローラルホワイト色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='floralwhite')"}
{"in": "散布図の色をディープスカイブルーにする", "out": "plt.scatter(データ列x, データ列y, color='deepskyblue')"}
{"in": "スラグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='slategray')"}
{"in": "データフレームを表示するとき、折り返しをオフに設定する", "out": "pd.set_option('expand_frame_repr', False)"}
{"in": "リストが空でないか調べる", "out": "len(aList) != 0"}
{"in": "データフレームをソートして、下位n件を取り出す", "out": "df.sort_values('キーとなる列').tail(n)"}
{"in": "データフレームのカラムの相関係数を求める", "out": "scipy.stats.pearsonr(df['列A'], df['列B'])"}
{"in": "option: ディムグレー色を使う", "out": "color = 'dimgrey'"}
{"in": "散布図の色をグリーンイエローにする", "out": "plt.scatter(データ列x, データ列y, color='greenyellow')"}
{"in": "散布図をホットピンク色で描画する", "out": "plt.scatter(データ列x, データ列y, color='hotpink')"}
{"in": "実数とyの斜辺", "out": "math.hypot(x, y)"}
{"in": "ライトサーモン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightsalmon')"}
{"in": "文字列の無限イテラブル", "out": "itertools.repeat(element)"}
{"in": "横棒グラフの色をロイヤルブルーにする", "out": "plt.barh(データ列x, データ列y, color='royalblue')"}
{"in": "配列にはいくつ要素があるか調べる", "out": "aArray.size"}
{"in": "データフレームをCSVファイルにインデックスを付けず保存する", "out": "df.to_csv('file.csv', index=None)"}
{"in": "option: グラフの色をナバホホワイトに設定する", "out": "color = 'navajowhite'"}
{"in": "option: マーカーの色をスラグレーにする", "out": "markerfacecolor = 'slategray'"}
{"in": "横棒グラフをロイヤルブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='royalblue')"}
{"in": "赤い棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='r')"}
{"in": "データフレームの次元の大きさ", "out": "df.shape"}
{"in": "option: マーカーの色をタンにする", "out": "markerfacecolor = 'tan'"}
{"in": "データフレームから型の列を抽出する", "out": "df.select_dtypes(ty)"}
{"in": "棒グラフの色をディムグレーにする", "out": "plt.bar(データ列x, データ列y, color='dimgray')"}
{"in": "横棒グラフを小麦色色で描画する", "out": "plt.barh(データ列x, データ列y, color='wheat')"}
{"in": "訓練データとテストデータに分割する", "out": "X_train, X_test, y_train, y_test = train_test_split(説明変数, 目的変数, test_size=0.3)"}
{"in": "リストの平均値", "out": "sum(aList)/len(aList)"}
{"in": "横棒グラフの色をミントクリームにする", "out": "plt.barh(データ列x, データ列y, color='mintcream')"}
{"in": "ヒストグラムの色をスプリンググリーンに設定する", "out": "plt.hist(データ列, color='springgreen')"}
{"in": "疑似乱数を生成する", "out": "random.random()"}
{"in": "半透明の破線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed', alpha=0.5)"}
{"in": "ミッドナイトブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='midnightblue')"}
{"in": "横棒グラフをブルーバイオレット色で描画する", "out": "plt.barh(データ列x, データ列y, color='blueviolet')"}
{"in": "ナバホホワイト色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='navajowhite')"}
{"in": "日付データにn分分、加算する", "out": "aDate + datetime.timedelta(minutes=n)"}
{"in": "ヒストグラムをミッドナイトブルー色で描画する", "out": "plt.hist(データ列, color='midnightblue')"}
{"in": "ヒストグラムの色をパープルに設定する", "out": "plt.hist(データ列, color='purple')"}
{"in": "折れ線グラフをペルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='peru')"}
{"in": "アクア色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='aqua')"}
{"in": "文字列は全て識別子名か調べる", "out": "s.isidentifier()"}
{"in": "散布図をダークグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkgray')"}
{"in": "横棒グラフの色をオレンジレッドにする", "out": "plt.barh(データ列x, データ列y, color='orangered')"}
{"in": "リストとリストについてリストの値に応じて、散布図の色を変える", "out": "plt.scatter(データ列x, データ列y, c=aList, cmap='Blues')"}
{"in": "折れ線グラフの色をトマトに設定する", "out": "plt.plot(データ列x, データ列y, color='tomato')"}
{"in": "集合をリストに変換する", "out": "list(aSet)"}
{"in": "nにn2を加える", "out": "n + n2"}
{"in": "文字列をバイト列に変換する", "out": "bytes(s)"}
{"in": "データフレームの先頭10行", "out": "df.head(10)"}
{"in": "ターコイズ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='turquoise')"}
{"in": "文字列がリストの要素でないか調べる", "out": "element not in aList"}
{"in": "データフレームの指定したカラムの値をValueMapでまとめて置き換える", "out": "df['列A'].replace(ValueMap)"}
{"in": "二つの文字列がケースを無視して同じか", "out": "s.casefold() == s2.casefold()"}
{"in": "データフレームをロジスティック回帰付き散布図にする", "out": "sns.regplot(x='列名', y='列名', data=df, logistic=True)"}
{"in": "散布図の色をオリベドラブにする", "out": "plt.scatter(データ列x, データ列y, color='olivedrab')"}
{"in": "箱ひげ図でデータ列を可視化する", "out": "plt.boxplot(データ列)"}
{"in": "データフレームの文字列を欠損値に変換する", "out": "df.replace(値, np.nan)"}
{"in": "折れ線グラフの色をマルーンに設定する", "out": "plt.plot(データ列x, データ列y, color='maroon')"}
{"in": "散布図に黒いマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, markerfacecolor='k')"}
{"in": "rgbの下三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='v', c=rgb)"}
{"in": "option: マーカーの色をダークマゼンタにする", "out": "markerfacecolor = 'darkmagenta'"}
{"in": "文字列をISO書式で日付時刻に変換する", "out": "datetime.datetime.fromisoformat(日付の書かれた文字列)"}
{"in": "カウンタの項目一覧", "out": "aCounter.keys()"}
{"in": "アクアマリン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='aquamarine')"}
{"in": "データフレームを百の位で丸める", "out": "df.round(-2)"}
{"in": "イテラブルから両端キューを作る", "out": "collections.deque(iterable)"}
{"in": "グレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='gray')"}
{"in": "折れ線グラフを半透明の破線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed', alpha=0.5)"}
{"in": "集合のイミュータブル版", "out": "frozenset(aSet)"}
{"in": "ダークオリーブグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkolivegreen')"}
{"in": "nがn2か調べる", "out": "n == n2"}
{"in": "ヒストグラムの色をライトグリーンに設定する", "out": "plt.hist(データ列, color='lightseagreen')"}
{"in": "棒グラフをローングリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='lawngreen')"}
{"in": "実数の小数部", "out": "math.modf(x)[0]"}
{"in": "散布図のマーカーを星にする", "out": "plt.scatter(データ列x, データ列y, marker='*')"}
{"in": "option: 改行コードを動作環境依存に設定する", "out": "newline = None"}
{"in": "配列の値が正規分布にしたがって発生する累積確率を求める", "out": "scipy.stats.norm.cdf(配列, loc=平均値, scale=標準偏差)"}
{"in": "スラグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='slategrey')"}
{"in": "辞書を階層化する", "out": "collections.ChainMap(aDict)"}
{"in": "nが3で割り切れるか調べる", "out": "n % 3 == 0"}
{"in": "横棒グラフをイエローグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='yellowgreen')"}
{"in": "グレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='grey')"}
{"in": "棒グラフをサンディーブラウン色で描画する", "out": "plt.bar(データ列x, データ列y, color='sandybrown')"}
{"in": "option: 昇順にする", "out": "ascending = True"}
{"in": "折れ線グラフをスノー色で描画する", "out": "plt.plot(データ列x, データ列y, color='snow')"}
{"in": "エクセルファイルファイルからCSVファイルをSJISで読み込む", "out": "pd.read_csv('file.csv', encoding='shift_jis')"}
{"in": "ファイルの絶対パス", "out": "os.path.abspath(filepath)"}
{"in": "ファイルから拡張子なしのファイル名を使う", "out": "os.path.splitext(os.path.basename(filepath))[0]"}
{"in": "下三角印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='v')"}
{"in": "ヒストグラムをカーキ色で描画する", "out": "plt.hist(データ列, color='khaki')"}
{"in": "リストとリストについての散布図に丸マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='o')"}
{"in": "ブラック色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='black')"}
{"in": "辞書の浅いコピーを作る", "out": "aDict.copy()"}
{"in": "散布図をカーキ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='khaki')"}
{"in": "折れ線グラフをミディアムバイオレットレッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumvioletred')"}
{"in": "option: サドルブラウン色を使う", "out": "color = 'saddlebrown'"}
{"in": "文字列をシアンにする", "out": "f'\\033[36m{value}\\033[0m'"}
{"in": "タプル内の要素が全て真か調べる", "out": "all(aTuple)"}
{"in": "サンディーブラウン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='sandybrown')"}
{"in": "折れ線グラフの色をフクシアに設定する", "out": "plt.plot(データ列x, データ列y, color='fuchsia')"}
{"in": "データシリーズの日", "out": "ds.dt.day"}
{"in": "棒グラフの色をピンクにする", "out": "plt.bar(データ列x, データ列y, color='pink')"}
{"in": "文字列を走査し、正規表現にマッチするか見る", "out": "re.search(pattern, s)"}
{"in": "偽", "out": "False"}
{"in": "散布図をダークグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkgrey')"}
{"in": "グリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='green')"}
{"in": "集合の補集合", "out": "aSet.difference(aSet2)"}
{"in": "再帰の上限を上げる", "out": "sys.setrecursionlimit(1000000)"}
{"in": "折れ線グラフを色付きの実線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid', color='#800080')"}
{"in": "文字列を代数計算の変数に変換する", "out": "sympy.Symbol(s)"}
{"in": "ランダムフォレストでクラス分類を行う", "out": "model = sklearn.ensemble.RandomForestClassifier()"}
{"in": "option: マーカーの色をライトゴールドロディイエローにする", "out": "markerfacecolor = 'lightgoldenrodyellow'"}
{"in": "ダークサーモン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darksalmon')"}
{"in": "option: マーカーの色をパールゴールデンロッドにする", "out": "markerfacecolor = 'palegoldenrod'"}
{"in": "辞書のキーを列挙する", "out": "list(aDict)"}
{"in": "データフレームの欠損値を中央値に設定する", "out": "df.fillna(df.median())"}
{"in": "棒グラフの色をオレンジレッドにする", "out": "plt.bar(データ列x, データ列y, color='orangered')"}
{"in": "ミッドナイトブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='midnightblue')"}
{"in": "棒グラフの色をシャルトリューズにする", "out": "plt.bar(データ列x, データ列y, color='chartreuse')"}
{"in": "ヒストグラムをペールグリーン色で描画する", "out": "plt.hist(データ列, color='palegreen')"}
{"in": "散布図をコーラル色で描画する", "out": "plt.scatter(データ列x, データ列y, color='coral')"}
{"in": "配列の最小値", "out": "np.min(aArray)"}
{"in": "文字列が文字列リストのいづれか調べる", "out": "s in aStringList"}
{"in": "スカイブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='skyblue')"}
{"in": "赤色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='red')"}
{"in": "横棒グラフを描画して、バーの縦幅を調整する", "out": "plt.barh(ラベル列, データ列, width=0.5)"}
{"in": "辞書のキーを列挙する", "out": "aDict.keys()"}
{"in": "データシリーズの中に文字列と文字列がいくつあるか数える", "out": "ds.isin([value, value2]).sum()"}
{"in": "グラフのタイトルを設定する", "out": "plt.title('グラフの名称')"}
{"in": "ハニーデュー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='honeydew')"}
{"in": "青い点線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted', color='b')"}
{"in": "option: グラフの色を青緑に設定する", "out": "color = 'teal'"}
{"in": "文字列をセパレータで分割して、文字列リストに変換する", "out": "s.split(sep)"}
{"in": "散布図をダークシアグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkseagreen')"}
{"in": "文字列を太字にする", "out": "f'\\033[1m{value}\\033[0m'"}
{"in": "データフレームを二つの列の値によってグループ化する", "out": "df.groupby(['列A', '列B'])"}
{"in": "ロイヤルブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='royalblue')"}
{"in": "ドジャーブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='dodgerblue')"}
{"in": "折れ線グラフを茶色色で描画する", "out": "plt.plot(データ列x, データ列y, color='brown')"}
{"in": "ランダム性を追加したランダムフォレストで回帰分析を行う", "out": "model = sklearn.ensemble.ExtraTreeRegressor(n_estimators=10)"}
{"in": "データフレームの列をカテゴリデータに変換する", "out": "df[col].astype(object)"}
{"in": "サーモン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='salmon')"}
{"in": "ゼロ埋めされた三二ビット整数型の配列", "out": "np.zeros(要素数, dtype=np.int16)"}
{"in": "小麦色色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='wheat')"}
{"in": "日付データが日付データより前か調べる", "out": "aDate < aDate2"}
{"in": "データフレームの末尾", "out": "df.tail()"}
{"in": "棒グラフをパープル色で描画する", "out": "plt.bar(データ列x, データ列y, color='purple')"}
{"in": "データフレームから10行、サンプリングする", "out": "df.sample(10)"}
{"in": "データフレームを使う", "out": "import pandas as pd"}
{"in": "横棒グラフをシスル色で描画する", "out": "plt.barh(データ列x, データ列y, color='thistle')"}
{"in": "文字列を緑色でプリントする", "out": "print(f'\\033[32m{value}\\033[0m')"}
{"in": "両端キューの長さを制限する", "out": "collections.deque(maxlen=n)"}
{"in": "標準正規分布の確率密度関数", "out": "scipy.stats.norm.pdf(x)"}
{"in": "option: マーカーの色をイエローグリーンにする", "out": "markerfacecolor = 'yellowgreen'"}
{"in": "option: マゼンタ色を使う", "out": "color = 'magenta'"}
{"in": "データフレームの累積分布を描画する", "out": "sns.ecdfplot(x='列名', data=df)"}
{"in": "横棒グラフをバリーウッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='burlywood')"}
{"in": "文字列中から部分文字列を探す", "out": "s.find(sub)"}
{"in": "モデルの残差をヒストグラムにする", "out": "plt.hist(目的変数 - model.predict(説明変数))"}
{"in": "アヤメのデータセットからデータフレームを読み込む", "out": "df = sns.load_dataset('iris')"}
{"in": "オブジェクトはバイト列クラスか調べる", "out": "isinstance(obj, bytes)"}
{"in": "グリーンイエロー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='greenyellow')"}
{"in": "option: 書き込みモードに設定する", "out": "mode = 'w'"}
{"in": "option: 配列のデータ型を指定する", "out": "dtype = np.int16"}
{"in": "option: スラグレー色を使う", "out": "color = 'slategray'"}
{"in": "散布図を小麦色色で描画する", "out": "plt.scatter(データ列x, データ列y, color='wheat')"}
{"in": "散布図をコーンズシルク色で描画する", "out": "plt.scatter(データ列x, データ列y, color='cornsilk')"}
{"in": "データ列を中央値でビン分割する", "out": "pd.qcut(ds, 2)"}
{"in": "エクセルファイルから複数のシートを読み込む", "out": "pd.read_excel('file.xlsx', sheet_name=[0, 1])"}
{"in": "option: ミディアムターコイズ色を使う", "out": "color = 'mediumturquoise'"}
{"in": "ヒストグラムをブランチドアーモンド色で描画する", "out": "plt.hist(データ列, color='blanchedalmond')"}
{"in": "グラフからグリッド線を消す", "out": "plt.grid(False)"}
{"in": "option: グラフの色をオールドレースに設定する", "out": "color = 'oldlace'"}
{"in": "文字列を積極的に小文字に変換する", "out": "s.casefold()"}
{"in": "棒グラフをロイヤルブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='royalblue')"}
{"in": "散布図に右三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='>')"}
{"in": "横棒グラフをシエナ色で描画する", "out": "plt.barh(データ列x, データ列y, color='sienna')"}
{"in": "タプルの要素をソートする", "out": "sorted(aTuple)"}
{"in": "文字列を正規表現によって置き換える", "out": "re.sub(pattern, newsub, s)"}
{"in": "実行時に標準出力がパイプか調べる", "out": "not sys.stdout.isatty()"}
{"in": "option: マーカーの色をミディアムスプリンググリーンにする", "out": "markerfacecolor = 'mediumspringgreen'"}
{"in": "option: ナバホホワイト色を使う", "out": "color = 'navajowhite'"}
{"in": "横棒グラフをミディアムスレートブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumslateblue')"}
{"in": "連続した配列の自動作成する", "out": "np.arange(開始値, 終了値, 等差)"}
{"in": "横棒グラフの色をビスクにする", "out": "plt.barh(データ列x, データ列y, color='bisque')"}
{"in": "option: マーカーの色をコーンズシルクにする", "out": "markerfacecolor = 'cornsilk'"}
{"in": "データ列を折れ線グラフで可視化する", "out": "plt.plot(データ列x, データ列y)"}
{"in": "散布図の色をライムにする", "out": "plt.scatter(データ列x, データ列y, color='lime')"}
{"in": "データフレームの指定したカラムの空文字を欠損値に変換し、ドロップする", "out": "df['列A'].replace('', np.nan).dropna()"}
{"in": "割合付きの円グラフを描画する", "out": "plt.pie(データ列, startangle=90, autopct='%.2f%%')"}
{"in": "散布図をライトサーモン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightsalmon')"}
{"in": "option: マーカーの色をペールグリーンにする", "out": "markerfacecolor = 'palegreen'"}
{"in": "文字列の開始位置から終了位置までの範囲で部分文字列の出現をカウントする", "out": "s.count(sub, start, end)"}
{"in": "データフレームがどの程度、分散しているか見る", "out": "df.var()"}
{"in": "棒グラフの色をゲインズボロにする", "out": "plt.bar(データ列x, データ列y, color='gainsboro')"}
{"in": "ロージーブラウン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='rosybrown')"}
{"in": "ファイルが存在しないか調べる", "out": "not os.path.exists(filepath)"}
{"in": "データフレームの先頭10行", "out": "df.head(10)"}
{"in": "ヒストグラムの色をゴーストホワイトに設定する", "out": "plt.hist(データ列, color='ghostwhite')"}
{"in": "箱ひげ図を横方向にする", "out": "plt.boxplot(データ列, vert=False)"}
{"in": "横棒グラフの色をロージーブラウンにする", "out": "plt.barh(データ列x, データ列y, color='rosybrown')"}
{"in": "option: マーカーの色をスプリンググリーンにする", "out": "markerfacecolor = 'springgreen'"}
{"in": "オブジェクトのプロパティの値を値に設定する", "out": "setattr(obj, プロパティ名, 値)"}
{"in": "散布図の色をスレートブルーにする", "out": "plt.scatter(データ列x, データ列y, color='slateblue')"}
{"in": "ペールグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='palegreen')"}
{"in": "option: グラフの色をサンディーブラウンに設定する", "out": "color = 'sandybrown'"}
{"in": "ある列にリストの値が含まれる行を抽出する", "out": "df[df['列A'].isin(リスト)]"}
{"in": "真", "out": "True"}
{"in": "option: UTF8を使う", "out": "encoding = 'utf-8'"}
{"in": "折れ線グラフの色をシスルに設定する", "out": "plt.plot(データ列x, データ列y, color='thistle')"}
{"in": "両端キューをリストに変換する", "out": "list(deq)"}
{"in": "option: グラフの色をライトグリーンに設定する", "out": "color = 'lightseagreen'"}
{"in": "青い実線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid', color='b')"}
{"in": "文字列全体が正規表現にASCII限定としてマッチするか見る", "out": "re.fullmatch(pattern, s, flags=re.ASCI)"}
{"in": "option: マーカーの色をフクシアにする", "out": "markerfacecolor = 'fuchsia'"}
{"in": "横棒グラフの色をシルバーにする", "out": "plt.barh(データ列x, データ列y, color='silver')"}
{"in": "パープル色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='purple')"}
{"in": "辞書からキーの値", "out": "aDict.get(key)"}
{"in": "option: 丸マーカーを描画する", "out": "marker = 'o'"}
{"in": "棒グラフの色をカーキにする", "out": "plt.bar(データ列x, データ列y, color='khaki')"}
{"in": "白色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='white')"}
{"in": "データフレームの棒グラフを各カテゴリごとに縦横に並べる", "out": "sns.catplot(kind='bar', y='列名', col='カテゴリ名', row='カテゴリ名', data=df)"}
{"in": "折れ線グラフをペールグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='palegreen')"}
{"in": "散布図をパールゴールデンロッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='palegoldenrod')"}
{"in": "横棒グラフをシアン色で描画する", "out": "plt.barh(データ列x, データ列y, color='cyan')"}
{"in": "変数が無限大に近づくときの数式の極限値を求める", "out": "sympy.limit(e, z, oo)"}
{"in": "アンティークホワイト色のヒストグラムを描画する", "out": "plt.hist(データ列, color='antiquewhite')"}
{"in": "ホットピンク色のヒストグラムを描画する", "out": "plt.hist(データ列, color='hotpink')"}
{"in": "散布図をアクアマリン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='aquamarine')"}
{"in": "折れ線グラフをホワイトスモーク色で描画する", "out": "plt.plot(データ列x, データ列y, color='whitesmoke')"}
{"in": "xが1、もしくは2、もしくは3に等しいか調べる", "out": "x == 1 or x == 2 or x == 3"}
{"in": "折れ線グラフをミディアムシアグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumseagreen')"}
{"in": "グリッドの線の種類を実線に変更する", "out": "plt.grid(linestyle='solid')"}
{"in": "nを否定する", "out": "not n"}
{"in": "ヒストグラムをミディアムブルー色で描画する", "out": "plt.hist(データ列, color='mediumblue')"}
{"in": "白い折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='w')"}
{"in": "日付時刻データからn時間分、減算する", "out": "aDatetime - datetime.timedelta(hours=n)"}
{"in": "散布図に赤いポイントマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='r')"}
{"in": "ふたつの集合が互いに素か調べる", "out": "aSet.isdisjoint(aSet2)"}
{"in": "折れ線グラフをダークサーモン色で描画する", "out": "plt.plot(データ列x, データ列y, color='darksalmon')"}
{"in": "色名とカラーコードの対応表を使う", "out": "matplotlib.colors.cnames"}
{"in": "散布図の色をライトゴールドロディイエローにする", "out": "plt.scatter(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "折れ線グラフのマーカーを三角にする", "out": "plt.plot(データ列x, データ列y, marker='^')"}
{"in": "全要素を1で初期化した行列", "out": "np.ones(行数, 列数, dtype=np.int)"}
{"in": "散布図の四角マーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='b')"}
{"in": "両端キューに要素をエンキューする", "out": "deq.appendleft(element)"}
{"in": "グラフを画面用に設定する", "out": "sns.set(context='notebook')"}
{"in": "ファイルをSJISでオープンする]", "out": "open(filepath, encoding='shift_jis')"}
{"in": "文字列が漢字か調べる", "out": "('\\u4E00' <= ch <= '\\u9FD0')"}
{"in": "ミディアムオーキッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumorchid')"}
{"in": "ヒストグラムを破線で描画する", "out": "plt.hist(データ列, linestyle='dashed')"}
{"in": "文字列をカンマで分割して、文字列リストに変換する", "out": "s.split(',')"}
{"in": "横棒グラフをブランチドアーモンド色で描画する", "out": "plt.barh(データ列x, データ列y, color='blanchedalmond')"}
{"in": "ダークサーモン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darksalmon')"}
{"in": "散布図をスレートブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='slateblue')"}
{"in": "棒グラフをイエローグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='yellowgreen')"}
{"in": "横棒グラフをホワイトスモーク色で描画する", "out": "plt.barh(データ列x, データ列y, color='whitesmoke')"}
{"in": "option: フローラルホワイト色を使う", "out": "color = 'floralwhite'"}
{"in": "十六進文字列をバイト列に変換する", "out": "int(s, 16).to_bytes(length=bytesize, byteorder='big')"}
{"in": "ヒストグラムをダークオレンジ色で描画する", "out": "plt.hist(データ列, color='darkorange')"}
{"in": "ヒストグラムをオリベドラブ色で描画する", "out": "plt.hist(データ列, color='olivedrab')"}
{"in": "文字列を部分文字列で二分し、前半の文字列を使う", "out": "s.partition(sub)[0]"}
{"in": "数式の積分を求める", "out": "sympy.integrate(e)"}
{"in": "折れ線グラフの色をリネンに設定する", "out": "plt.plot(データ列x, データ列y, color='linen')"}
{"in": "三つのデータフレームを横方向に連結する", "out": "pd.concat([df, df2, df3], axis=1)"}
{"in": "スタッキングで回帰分析を行う", "out": "sklearn.ensemble.StackingRegressor()"}
{"in": "コマンドの第二引数を知る", "out": "sys.argv[1]"}
{"in": "横棒グラフの色をペールグリーンにする", "out": "plt.barh(データ列x, データ列y, color='palegreen')"}
{"in": "ダークグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkgrey')"}
{"in": "横棒グラフをスカイブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='skyblue')"}
{"in": "タプルの先頭", "out": "aTuple[0]"}
{"in": "カデットブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='cadetblue')"}
{"in": "ファイルをオープンして]、読み込みストリームを使う", "out": "open(filepath, mode='r')"}
{"in": "箱ひげ図を描画して、平均値を加える", "out": "plt.boxplot(データ列, showmeans=True)"}
{"in": "year年month月day日hour時minute分を日付時刻に変換する", "out": "datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)"}
{"in": "パールバイオレットレッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='palevioletred')"}
{"in": "option: 三二ビット整数型を使う", "out": "dtype = np.int16"}
{"in": "実数以下の最大の整数", "out": "math.floor(x)"}
{"in": "左三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='<')"}
{"in": "グラフのカラーパレットを暗くする", "out": "sns.set(pallete='dark')"}
{"in": "year年の日付", "out": "datetime.date(year=year, month=1, day=1)"}
{"in": "半透明の点線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted', alpha=0.5)"}
{"in": "option: どのカラムもインデックスに設定しない", "out": "index_col = None"}
{"in": "配列の分散", "out": "np.var(aArray)"}
{"in": "リストをリストを境界値としてビン分割する", "out": "pd.cut(aList, aList)"}
{"in": "パールバイオレットレッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='palevioletred')"}
{"in": "文字列の右側から空白を取り除く", "out": "s.rstrip()"}
{"in": "文字列内にひとつでも大文字が含まれるか調べる", "out": "any(c.isupper() for c in s)"}
{"in": "青い散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='b')"}
{"in": "グローバル変数の一覧", "out": "globals()"}
{"in": "紺碧色のヒストグラムを描画する", "out": "plt.hist(データ列, color='azure')"}
{"in": "JSON形式の文字列をデータに変換する", "out": "json.loads(b.decode('unicode-escape'))"}
{"in": "option: カーキ色を使う", "out": "color = 'khaki'"}
{"in": "折れ線グラフの星マーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='*', markerfacecolor='#800080')"}
{"in": "データフレームを多項式回帰付き散布図にする", "out": "sns.regplot(data=df, x='列名', y='列名', order=2)"}
{"in": "折れ線グラフをダークスラテグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkslategray')"}
{"in": "データフレームの標本標準偏差", "out": "df.std(ddof=1)"}
{"in": "option: マーカーの色をカーキにする", "out": "markerfacecolor = 'khaki'"}
{"in": "文字列リストを連結する", "out": "''.join(aStringList)"}
{"in": "データフレームをにバイオリン図で可視化する", "out": "sns.violinplot(x='カテゴリ列', y='列', data=df)"}
{"in": "散布図の四角マーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='s', markeredgewidth=2.5)"}
{"in": "option: エンコーディングをEUCに設定する", "out": "encoding = 'euc_jp'"}
{"in": "データフレームをグループ化して、ヒストグラムで可視化する", "out": "sns.histplot(df, x='列名', hue='カテゴリ名')"}
{"in": "デピンク色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='deeppink')"}
{"in": "ダークオレンジ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkorange')"}
{"in": "折れ線グラフに赤い四角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='s', markerfacecolor='r')"}
{"in": "option: マーカーの色を紺碧にする", "out": "markerfacecolor = 'azure'"}
{"in": "散布図に赤いマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, markerfacecolor='r')"}
{"in": "日付時刻データをISO形式の文字列に変換する", "out": "aDatetime.isoformat()"}
{"in": "パールゴールデンロッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='palegoldenrod')"}
{"in": "ミディアムスプリンググリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "横棒グラフをカデットブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='cadetblue')"}
{"in": "棒グラフをパウダーブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='powderblue')"}
{"in": "データフレームのn行目をドロップしてみる", "out": "df.drop(n, axis=0)"}
{"in": "ディムグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='dimgray')"}
{"in": "option: グラフの色をマゼンタに設定する", "out": "color = 'magenta'"}
{"in": "リストのn番目の要素を削除する", "out": "del aList[n]"}
{"in": "リストとリストについて散布図を描画して、丸マーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='o', c=rgb)"}
{"in": "option: アンティークホワイト色を使う", "out": "color = 'antiquewhite'"}
{"in": "ヒストグラムの色をブラックに設定する", "out": "plt.hist(データ列, color='black')"}
{"in": "棒グラフをミディアムターコイズ色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumturquoise')"}
{"in": "ミディアムパープル色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumpurple')"}
{"in": "option: マーカーの色をゲインズボロにする", "out": "markerfacecolor = 'gainsboro'"}
{"in": "コギーくんを使いたい", "out": "import kogi"}
{"in": "オールドレース色のヒストグラムを描画する", "out": "plt.hist(データ列, color='oldlace')"}
{"in": "文字列を大文字・小文字を無視して正規表現で分割する", "out": "re.split(pattern, s, flags=re.IGNORECASE)"}
{"in": "日付データの月数", "out": "aDate.month"}
{"in": "option: マーカーの色をターコイズにする", "out": "markerfacecolor = 'turquoise'"}
{"in": "紺色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkblue')"}
{"in": "イテラブルにイテラブルを続ける", "out": "itertools.chain(iterable, iterable2)"}
{"in": "ライトスカイブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightskyblue')"}
{"in": "option: シスル色を使う", "out": "color = 'thistle'"}
{"in": "データフレームをある列のカテゴリでグループ化して、それぞれのグループごとの件数を知る", "out": "df.groupby('列A').size()"}
{"in": "辞書からキーの値か、もしくは要素を得る", "out": "aDict.get(key, element)"}
{"in": "棒グラフの色をミディアムシアグリーンにする", "out": "plt.bar(データ列x, データ列y, color='mediumseagreen')"}
{"in": "折れ線グラフの色を青に設定する", "out": "plt.plot(データ列x, データ列y, color='blue')"}
{"in": "nからn2を引く", "out": "n - n2"}
{"in": "ダークグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkgray')"}
{"in": "横棒グラフをレベッカパープル色で描画する", "out": "plt.barh(データ列x, データ列y, color='rebeccapurple')"}
{"in": "カラーバーを横向きで描画する", "out": "plt.colorbar(orientation='horizontal')"}
{"in": "配列の列ごとの平均値", "out": "np.mean(aArray, axis=0)"}
{"in": "リストを引数として展開して表示する", "out": "print(*aList, sep=',')"}
{"in": "ヒストグラムをシーグリーン色で描画する", "out": "plt.hist(データ列, color='seagreen')"}
{"in": "横棒グラフをダークスレートブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkslateblue')"}
{"in": "折れ線グラフの大バツマーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='X', markerfacecolor='k')"}
{"in": "option: ラベンダーブラッシュ色を使う", "out": "color = 'lavenderblush'"}
{"in": "棒グラフをベージュ色で描画する", "out": "plt.bar(データ列x, データ列y, color='beige')"}
{"in": "横棒グラフの色をアリスブルーにする", "out": "plt.barh(データ列x, データ列y, color='aliceblue')"}
{"in": "データフレームの指定したカラムの中の欠損値の合計を数える", "out": "df['列A'].isna().sum()"}
{"in": "ダークマゼンタ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkmagenta')"}
{"in": "散布図のマーカーを左三角にする", "out": "plt.scatter(データ列x, データ列y, marker='<')"}
{"in": "データフレームのn行目を抽出する", "out": "df.loc[n]"}
{"in": "ヒストグラムをグレー色で描画する", "out": "plt.hist(データ列, color='grey')"}
{"in": "option: グラフの色をブルーバイオレットに設定する", "out": "color = 'blueviolet'"}
{"in": "ロバストな線形回帰モデルを作る", "out": "model = sklearn.linear_model.HuberRegressor()"}
{"in": "日付時刻データの曜日を整数で使う", "out": "aDatetime.weekday()"}
{"in": "名前付きタプルをパラメータからインスタンス化する", "out": "C._make(パラメータ)"}
{"in": "ラベル付きの円グラフを描画する", "out": "plt.pie(データ列, startangle=90, labels=ラベル列)"}
{"in": "ヒストグラムをダークグレー色で描画する", "out": "plt.hist(データ列, color='darkgrey')"}
{"in": "文字列をUTF8でバイト列に変換する", "out": "s.encode(encoding='utf-8', errors='strict')"}
{"in": "文字列を部分文字列で二分し、後半の文字列を使う", "out": "s.partition(sub)[-1]"}
{"in": "option: ポイントマーカーを描画する", "out": "marker = '.'"}
{"in": "折れ線グラフの色をライトグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='lightgray')"}
{"in": "辞書のキーの一覧", "out": "aDict.keys()"}
{"in": "グレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='grey')"}
{"in": "横棒グラフの色を青にする", "out": "plt.barh(データ列x, データ列y, color='blue')"}
{"in": "ファイルをディレクトリ名とファイル名に分割する", "out": "os.path.split(filepath)"}
{"in": "横棒グラフを紺碧色で描画する", "out": "plt.barh(データ列x, データ列y, color='azure')"}
{"in": "横棒グラフをライトスレイグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightslategrey')"}
{"in": "チョコレート色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='chocolate')"}
{"in": "数式を因数分解する", "out": "sympy.factor(e)"}
{"in": "文字列を黒色でプリントできる文字列に変換する", "out": "f'\\033[30m{value}\\033[0m'"}
{"in": "散布図の色をインディゴにする", "out": "plt.scatter(データ列x, データ列y, color='indigo')"}
{"in": "縦軸だけグリッド線", "out": "plt.grid(axis='y')"}
{"in": "グラフのカラーパレットを明るくする", "out": "sns.set(pallete='bright')"}
{"in": "部分文字列か調べる", "out": "sub in s"}
{"in": "option: グラフの色をフォレストグリーンに設定する", "out": "color = 'forestgreen'"}
{"in": "データフレームにおいてどの値が頻出か見る", "out": "df.mode()"}
{"in": "データフレームを転置する", "out": "df.T"}
{"in": "ディープスカイブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='deepskyblue')"}
{"in": "ヒストグラムの色をグレーに設定する", "out": "plt.hist(データ列, color='gray')"}
{"in": "折れ線グラフの左三角マーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='<', markerfacecolor='#800080')"}
{"in": "黄色色のヒストグラムを描画する", "out": "plt.hist(データ列, color='yellow')"}
{"in": "ヒストグラムの色をライトスレイグレーに設定する", "out": "plt.hist(データ列, color='lightslategray')"}
{"in": "グラフのカラーパレットを指定する", "out": "sns.set(pallete=パレット名)"}
{"in": "ブースティングで回帰分析を行う", "out": "model = sklearn.ensemble.AdaBoostRegressor(random_state=0, n_estimators=100)"}
{"in": "本日が木曜日か調べる", "out": "datetime.datetime.today().weekday() == 3"}
{"in": "辞書をインデント幅nのJSON形式の文字列に変換する", "out": "json.dumps(aDict, ensure_ascii=False, indent=n)"}
{"in": "棒グラフの色を青緑にする", "out": "plt.bar(データ列x, データ列y, color='teal')"}
{"in": "データシリーズを丸めて、整数型にする", "out": "ds.round().astype(int)"}
{"in": "折れ線グラフをオーキッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='orchid')"}
{"in": "option: グラフの色をミディアムパープルに設定する", "out": "color = 'mediumpurple'"}
{"in": "散布図に赤い左三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='<', c='r')"}
{"in": "棒グラフの色をミッドナイトブルーにする", "out": "plt.bar(データ列x, データ列y, color='midnightblue')"}
{"in": "実数の平方根", "out": "math.sqrt(x)"}
{"in": "不揃いな長さののzip", "out": "itertools.zip_longest(iterable, iterable2)"}
{"in": "文字列の開始位置から部分文字列を探す", "out": "s.find(sub, start)"}
{"in": "折れ線グラフをマゼンタ色で描画する", "out": "plt.plot(データ列x, データ列y, color='magenta')"}
{"in": "リストから文字列を取り除く", "out": "aList.remove(element)"}
{"in": "アリスブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='aliceblue')"}
{"in": "データをL2ノルムで正規化する", "out": "sklearn.preprocessing.Normalizer(norm=\"l2\").fit_transform(データ列)"}
{"in": "文字列は全て印字できるか調べる", "out": "s.isprintable()"}
{"in": "ブルーバイオレット色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='blueviolet')"}
{"in": "データフレームの中にある文字列と文字列の合計を数える", "out": "df.isin([value, value2]).sum()"}
{"in": "折れ線グラフのダイアモンドマーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='D', markerfacecolor='#800080')"}
{"in": "折れ線グラフを青い点線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted', color='b')"}
{"in": "散布図の左三角マーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='k')"}
{"in": "グラフにx=0の実線を付ける", "out": "plt.axvline(x=0, linestyle='solid')"}
{"in": "xが-9以上、9以下か調べる", "out": "-9 <= x <= 9"}
{"in": "ヒストグラムの色をアンティークホワイトに設定する", "out": "plt.hist(データ列, color='antiquewhite')"}
{"in": "ヒストグラムの線の種類を破線に設定する", "out": "plt.hist(データ列, linestyle='dashed')"}
{"in": "データフレームの選択したカラムの標準偏差", "out": "df[['列A', '列B']].std()"}
{"in": "option: 読み込む行番号をnamesで指定する", "out": "usecols = names"}
{"in": "散布図の色をパレットトルコイズにする", "out": "plt.scatter(データ列x, データ列y, color='paleturquoise')"}
{"in": "オブジェクトのバイトサイズ", "out": "sys.getsizeof(obj)"}
{"in": "ファイルをEUCで書き込み用にオープンする]", "out": "open(filepath, mode='w', encoding='euc_jp')"}
{"in": "option: グラフの色をダークグレーに設定する", "out": "color = 'darkgray'"}
{"in": "標準入力から1行読み取る", "out": "input()"}
{"in": "棒グラフの色をローングリーンにする", "out": "plt.bar(データ列x, データ列y, color='lawngreen')"}
{"in": "ダークゴールデンロッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "第一引数で指定されたファイルの名前", "out": "sys.argv[1]"}
{"in": "データ列の折れ線グラフを描画して、ラベル付けする", "out": "plt.plot(データ列x, データ列y, label='ラベル')"}
{"in": "データフレームの先頭の列以外を全て説明変数にする", "out": "説明変数 = df[df.columns[1:]]"}
{"in": "データフレームの文字列を欠損値に変換する", "out": "df.replace(値, np.nan)"}
{"in": "決定木を表示する", "out": "sklearn.tree.plot_tree(model, feature_names=X.columns, filled=True)"}
{"in": "ヒストグラムの色をオリベドラブに設定する", "out": "plt.hist(データ列, color='olivedrab')"}
{"in": "横棒グラフをダークシアン色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkcyan')"}
{"in": "データフレームの相関行列", "out": "df.corr()"}
{"in": "ダークシアグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkseagreen')"}
{"in": "option: マーカーの色をパパイヤウィップにする", "out": "markerfacecolor = 'papayawhip'"}
{"in": "サンディーブラウン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='sandybrown')"}
{"in": "option: 四角マーカーを描画する", "out": "marker = 's'"}
{"in": "データフレームをある列の値によってグループ化し、要約統計量を求める", "out": "df.groupby('列A').describe()"}
{"in": "xを浮動小数点数型に変換する", "out": "float(x)"}
{"in": "横棒グラフを黒くする", "out": "plt.barh(データ列x, データ列y, color='k')"}
{"in": "文字列の右側から空白を取り除く", "out": "s.rstrip(' ')"}
{"in": "日付データが土曜日か調べる", "out": "aDate.weekday() == 5"}
{"in": "データ列の折れ線グラフを描画して、色をカラーコードで設定する", "out": "plt.plot(データ列x, データ列y, color='#800080')"}
{"in": "アルファベットの大文字を全部使う", "out": "string.ascii_uppercase"}
{"in": "折れ線グラフをパールゴールデンロッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='palegoldenrod')"}
{"in": "option: グラフの色をローングリーンに設定する", "out": "color = 'lawngreen'"}
{"in": "データシリーズを万の位で丸める", "out": "ds.round(-4)"}
{"in": "option: マーカーを丸に変更する", "out": "marker = 'o'"}
{"in": "データフレームの選択したカラムの欠損値を最大値で埋める", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].max())"}
{"in": "棒グラフをアクアマリン色で描画する", "out": "plt.bar(データ列x, データ列y, color='aquamarine')"}
{"in": "棒グラフの色をミントクリームにする", "out": "plt.bar(データ列x, データ列y, color='mintcream')"}
{"in": "ゲインズボロ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='gainsboro')"}
{"in": "折れ線グラフに赤い丸マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='o', markerfacecolor='r')"}
{"in": "文字列を文字コード列に変換する", "out": "[ord(ch) for ch in s]"}
{"in": "option: マーカーの色をゴールデンロッドにする", "out": "markerfacecolor = 'goldenrod'"}
{"in": "散布図のマーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, markeredgewidth=2.5)"}
{"in": "散布図の色をピーチパフにする", "out": "plt.scatter(データ列x, データ列y, color='peachpuff')"}
{"in": "ヒストグラムの色をダークカーキに設定する", "out": "plt.hist(データ列, color='darkkhaki')"}
{"in": "折れ線グラフに黒い下三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='v', markerfacecolor='k')"}
{"in": "グリッド線", "out": "plt.grid(alpha=0.5)"}
{"in": "配列の差", "out": "aArray - aArray2"}
{"in": "方程式の解", "out": "sympy.solve(e)"}
{"in": "乱数シードをnで初期化する", "out": "random.seed(n)"}
{"in": "文字列の中で複数行対応として正規表現にマッチした全ての文字列をリストに変換する", "out": "re.findall(pattern, s, flags=re.MULTILINE)"}
{"in": "データフレームから型リストで指定したデータ型の列を抽出する", "out": "df.select_dtypes(include=typeList)"}
{"in": "option: グラフの色をハニーデューに設定する", "out": "color = 'honeydew'"}
{"in": "日付時刻データが火曜日か調べる", "out": "aDatetime.weekday() == 1"}
{"in": "散布図をグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='gray')"}
{"in": "インディアンレッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='indianred')"}
{"in": "option: 箱ひげ図に平均を加える", "out": "showmeans = False"}
{"in": "リストとリストについての散布図に黒い下三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='v', c='k')"}
{"in": "タン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='tan')"}
{"in": "option: BOM付きを使う", "out": "encoding = 'utf_8_sig'"}
{"in": "教師データでモデルを学習する", "out": "model.fit(説明変数, 目的変数)"}
{"in": "ミディアムシアグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumseagreen')"}
{"in": "n割るn2を切り上げる", "out": "(n + n2 - 1) // n2"}
{"in": "ラベンダー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lavender')"}
{"in": "折れ線グラフの色を紺に設定する", "out": "plt.plot(データ列x, データ列y, color='darkblue')"}
{"in": "文字列をゼロ埋めする", "out": "s.zfill(文字列幅)"}
{"in": "棒グラフをシアン色で描画する", "out": "plt.bar(データ列x, データ列y, color='cyan')"}
{"in": "本日を文字列でフォーマットして文字列に変換する", "out": "datetime.datetime.today().strftime(\"%d/%m/%y\")"}
{"in": "データフレームの選択したカラムの欠損値を最頻値で埋める", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].mode().iloc[0])"}
{"in": "折れ線グラフの四角マーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='s', markerfacecolor='#800080')"}
{"in": "データシリーズを百の位で丸める", "out": "ds.round(-2)"}
{"in": "実線グラフを描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid')"}
{"in": "データフレームの選択したカラムを十の位で丸めて、整数型にする", "out": "df[['列A', '列B']].round(-1).astype(int)"}
{"in": "データフレームの先頭100行", "out": "df.head(100)"}
{"in": "散布図のダイアモンドマーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='r')"}
{"in": "option: グラフの色をフクシアに設定する", "out": "color = 'fuchsia'"}
{"in": "ふたつの集合の積集合", "out": "aSet.intersection(aSet2)"}
{"in": "散布図をライトスカイブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightskyblue')"}
{"in": "データフレームの指定したカラムがどの程度、分散しているか見る", "out": "df['列A'].var()"}
{"in": "ディムグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='dimgray')"}
{"in": "データフレームを表示するとき、表示可能な最大行数をnに設定する", "out": "pd.set_option('display.max_rows', n)"}
{"in": "ラベンダー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lavender')"}
{"in": "リネン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='linen')"}
{"in": "option: マーカーの色をライトグリーンにする", "out": "markerfacecolor = 'lightgreen'"}
{"in": "データフレームをある列のカテゴリでグループ化して、グループ名で取り出す", "out": "df.groupby('列A').get_group(グループ名)"}
{"in": "配列の調和平均を求める", "out": "scipy.stats.hmean(配列)"}
{"in": "整数nの十六進文字列", "out": "hex(n)[2:]"}
{"in": "リストとリストについて散布図を描画して、三角マーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='^', c=rgb)"}
{"in": "ロイヤルブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='royalblue')"}
{"in": "散布図の色をブランチドアーモンドにする", "out": "plt.scatter(データ列x, データ列y, color='blanchedalmond')"}
{"in": "コーラル色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='coral')"}
{"in": "リストの最初の文字列を探す", "out": "aList.index(element)"}
{"in": "タン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='tan')"}
{"in": "横棒グラフの色を青緑にする", "out": "plt.barh(データ列x, データ列y, color='teal')"}
{"in": "文字列をシアンでプリントできる文字列に変換する", "out": "f'\\033[36m{value}\\033[0m'"}
{"in": "データシリーズの欠損値をxに設定する", "out": "ds.fillna(x)"}
{"in": "option: バイナリ書き込みモードに設定する", "out": "mode = 'wb'"}
{"in": "配列の全要素の値を変更する", "out": "aArray[:, :] = 指定の値"}
{"in": "データフレームをTSVファイルで保存する", "out": "df.to_csv('file.tsv', sep='\\t')"}
{"in": "ポイント印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='.')"}
{"in": "ミディアムブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumblue')"}
{"in": "ミディアムスプリンググリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumspringgreen')"}
{"in": "option: 青緑色を使う", "out": "color = 'teal'"}
{"in": "nが一桁の数か調べる", "out": "0 <= n <= 9"}
{"in": "折れ線グラフの大バツマーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='X', markersize=2.0)"}
{"in": "option: マーカーの色をラベンダーにする", "out": "markerfacecolor = 'lavender'"}
{"in": "データフレームの指定したカラムの欠損値をxに設定する", "out": "df['列A'].fillna(x)"}
{"in": "ダークスラテグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkslategray')"}
{"in": "散布図の色をダークスラテグレーにする", "out": "plt.scatter(データ列x, データ列y, color='darkslategray')"}
{"in": "オブジェクトが名前付きタプルか調べる", "out": "hasattr(obj, '_asdict') and hasattr(obj, '_fields')"}
{"in": "散布図をフローラルホワイト色で描画する", "out": "plt.scatter(データ列x, データ列y, color='floralwhite')"}
{"in": "横棒グラフの色をミディアムターコイズにする", "out": "plt.barh(データ列x, データ列y, color='mediumturquoise')"}
{"in": "数値の符号を同じにする", "out": "math.copysign(x, x2)"}
{"in": "ヒストグラムの色をミッドナイトブルーに設定する", "out": "plt.hist(データ列, color='midnightblue')"}
{"in": "ヒストグラムの色をシスルに設定する", "out": "plt.hist(データ列, color='thistle')"}
{"in": "縦軸の表示範囲を変更する", "out": "plt.ylim(最小値, 最大値)"}
{"in": "データフレームの欠損値を最大値で埋める", "out": "df.fillna(df.max())"}
{"in": "ヒストグラムをライトサーモン色で描画する", "out": "plt.hist(データ列, color='lightsalmon')"}
{"in": "データフレームの値が欠損値か調べる", "out": "df.isna()"}
{"in": "ダークマゼンタ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkmagenta')"}
{"in": "JSON形式の文字列を読み込む", "out": "json.loads(jsonString)"}
{"in": "正則化付き線形回帰モデルを作る", "out": "model = sklearn.linear_model.ElasticNet()"}
{"in": "グラフの縦軸のラベルをuntitledに設定する", "out": "plt.ylabel('y軸ラベル')"}
{"in": "分子n、分母mの有理数を作る", "out": "fractions.Fraction(numerator=n, denominator=m)"}
{"in": "折れ線グラフを色付きの一点鎖線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot', color='#800080')"}
{"in": "option: マーカーの色を耐火レンガにする", "out": "markerfacecolor = 'firebrick'"}
{"in": "文字列の左側から部分文字列を取り除く", "out": "s.lstrip(sub)"}
{"in": "ゴールデンロッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='goldenrod')"}
{"in": "ヒストグラムをアイボリー色で描画する", "out": "plt.hist(データ列, color='ivory')"}
{"in": "ファイルの拡張子をtextに変更する", "out": "os.path.splitext(filepath)[0] + text"}
{"in": "ポイント印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='.')"}
{"in": "耐火レンガ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='firebrick')"}
{"in": "option: ライトスレイグレー色を使う", "out": "color = 'lightslategrey'"}
{"in": "折れ線グラフをレベッカパープル色で描画する", "out": "plt.plot(データ列x, データ列y, color='rebeccapurple')"}
{"in": "データシリーズが何秒か見る", "out": "ds.dt.second"}
{"in": "option: マーカーの色をスラグレーにする", "out": "markerfacecolor = 'slategrey'"}
{"in": "スプリンググリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='springgreen')"}
{"in": "横棒グラフの色をミディアムスプリンググリーンにする", "out": "plt.barh(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "ファイルを追加モードでオープンする]", "out": "open(filepath, mode='a')"}
{"in": "データフレームの値をValueMapでまとめて置き換える", "out": "df.replace(ValueMap)"}
{"in": "option: ゲインズボロ色を使う", "out": "color = 'gainsboro'"}
{"in": "実数を百の位で丸める", "out": "round(x, -2)"}
{"in": "アンティークホワイト色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='antiquewhite')"}
{"in": "整数をゼロ埋めした文字列に変換する", "out": "str(n).zfill(文字列幅)"}
{"in": "option: マーカーの色をトマトにする", "out": "markerfacecolor = 'tomato'"}
{"in": "貝殻色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='seashell')"}
{"in": "散布図をミディアムシアグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumseagreen')"}
{"in": "データシリーズがどの程度、分散しているか見る", "out": "ds.var()"}
{"in": "rgbのバツマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='x', c=rgb)"}
{"in": "コマンド引数を列挙する", "out": "sys.argv[1:]"}
{"in": "現在が何分か知る", "out": "datetime.date.today().minute"}
{"in": "散布図の色をライトグレーにする", "out": "plt.scatter(データ列x, データ列y, color='lightgrey')"}
{"in": "折れ線グラフのマーカーをバツにする", "out": "plt.plot(データ列x, データ列y, marker='x')"}
{"in": "グリッド線", "out": "plt.grid(color='#800080')"}
{"in": "オブジェクトのメモリビュー", "out": "memoryview(obj)"}
{"in": "データフレームを二つの列によって昇順にソートして、更新する", "out": "df.sort_values(by=['列A', '列B'], ascending=True, inplace=True)"}
{"in": "文字列を白色でプリントできる文字列に変換する", "out": "f'\\033[37m{value}\\033[0m'"}
{"in": "集合＼集合", "out": "aSet.difference(aSet2)"}
{"in": "日付データのデータシリーズをデータフレームのインデックスにする", "out": "df.index = pd.DatetimeIndex(ds)"}
{"in": "リストを四分位数ごとにビン分割する", "out": "pd.qcut(aList, 4)"}
{"in": "スプリンググリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='springgreen')"}
{"in": "option: セパレータをスラッシュにする", "out": "sep = '/'"}
{"in": "棒グラフをコーラル色で描画する", "out": "plt.bar(データ列x, データ列y, color='coral')"}
{"in": "散布図をプラム色で描画する", "out": "plt.scatter(データ列x, データ列y, color='plum')"}
{"in": "データフレームの中にいくつ欠損値があるか数える", "out": "df.isna().sum()"}
{"in": "散布図の色をダークゴールデンロッドにする", "out": "plt.scatter(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "リストとリストについて散布図を描画して、星マーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='*', c=rgb)"}
{"in": "option: バッファリングのサイズを設定する", "out": "buffering = 4096"}
{"in": "ダークサーモン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darksalmon')"}
{"in": "入力から二つの整数を読む", "out": "A, B = map(int, input().split())"}
{"in": "ヒストグラムの色をシャルトリューズに設定する", "out": "plt.hist(データ列, color='chartreuse')"}
{"in": "折れ線グラフの色をシアンに設定する", "out": "plt.plot(データ列x, データ列y, color='cyan')"}
{"in": "散布図の色をサドルブラウンにする", "out": "plt.scatter(データ列x, データ列y, color='saddlebrown')"}
{"in": "ダークゴールデンロッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "option: ダークシアグリーン色を使う", "out": "color = 'darkseagreen'"}
{"in": "無限にカウントアップする", "out": "itertools.count()"}
{"in": "散布図の色をミディアムアクアマリンにする", "out": "plt.scatter(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "折れ線グラフの三角マーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='^', markerfacecolor='k')"}
{"in": "散布図を赤色で描画する", "out": "plt.scatter(データ列x, データ列y, color='red')"}
{"in": "白い散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='w')"}
{"in": "option: グラフの色をゴーストホワイトに設定する", "out": "color = 'ghostwhite'"}
{"in": "リストとリストについての散布図を大きさnで描画する", "out": "plt.scatter(データ列x, データ列y, s=n)"}
{"in": "データフレームの指定したカラムの不偏標準偏差", "out": "df['列A'].std()"}
{"in": "折れ線グラフをドジャーブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='dodgerblue')"}
{"in": "データシリーズの欠損値を最小値で埋める", "out": "ds.fillna(ds.min())"}
{"in": "option: マーカーの色を貝殻にする", "out": "markerfacecolor = 'seashell'"}
{"in": "配列を2次元1行に変形する", "out": "aArray.reshape(1, -1)"}
{"in": "棒グラフをロージーブラウン色で描画する", "out": "plt.bar(データ列x, データ列y, color='rosybrown')"}
{"in": "折れ線グラフの色をライトサーモンに設定する", "out": "plt.plot(データ列x, データ列y, color='lightsalmon')"}
{"in": "ナバホホワイト色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='navajowhite')"}
{"in": "ペルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='peru')"}
{"in": "ヒストグラムをマルーン色で描画する", "out": "plt.hist(データ列, color='maroon')"}
{"in": "横棒グラフをミディアムオーキッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumorchid')"}
{"in": "オレンジレッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='orangered')"}
{"in": "FIXME", "out": "np.linalg.eig(aArray)"}
{"in": "ポイントマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='.')"}
{"in": "散布図の四角マーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='s', markersize=2.0)"}
{"in": "折れ線グラフの色をコーラルに設定する", "out": "plt.plot(データ列x, データ列y, color='coral')"}
{"in": "標準入力から1文字だけ読む", "out": "sys.stdin.read(1)"}
{"in": "散布図をスラグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='slategray')"}
{"in": "データシリーズの標本分散", "out": "ds.var(ddof=0)"}
{"in": "折れ線グラフの色をパレットトルコイズに設定する", "out": "plt.plot(データ列x, データ列y, color='paleturquoise')"}
{"in": "棒グラフをスラグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='slategrey')"}
{"in": "文字列モジュールをインポートする", "out": "import string"}
{"in": "option: 読み込みモードを使う", "out": "mode = 'r'"}
{"in": "データフレームから100行、サンプリングする", "out": "df.sample(100)"}
{"in": "リストの長さだけ繰り返す", "out": "range(len(aList))"}
{"in": "実数を十六進表記の文字列に変換する", "out": "x.hex()"}
{"in": "日付時刻データが何秒か知る", "out": "aDatetime.second"}
{"in": "データ列のユニークな値の個数", "out": "ds.nunique()"}
{"in": "標準エラーを得る", "out": "sys.stderr"}
{"in": "折れ線グラフの色をライトブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='lightblue')"}
{"in": "option: マーカーの色をスカイブルーにする", "out": "markerfacecolor = 'skyblue'"}
{"in": "棒グラフを黄色くする", "out": "plt.bar(データ列x, データ列y, color='y')"}
{"in": "散布図をピーチパフ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='peachpuff')"}
{"in": "option: グラフの色をイエローグリーンに設定する", "out": "color = 'yellowgreen'"}
{"in": "散布図の色をクリムゾンにする", "out": "plt.scatter(データ列x, データ列y, color='crimson')"}
{"in": "配列をビン分割する", "out": "pd.cut(aArray, aList)"}
{"in": "散布図にバツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='x')"}
{"in": "現在の作業ディレクトリをfilepathに変更する", "out": "os.chdir(os.dirname(filepath))"}
{"in": "ヒストグラムをブルーバイオレット色で描画する", "out": "plt.hist(データ列, color='blueviolet')"}
{"in": "折れ線グラフの色をミスティローズに設定する", "out": "plt.plot(データ列x, データ列y, color='mistyrose')"}
{"in": "option: 符号なし８ビット整数型を使う", "out": "dtype = np.uint8"}
{"in": "リッジ回帰分析の準備をする", "out": "model = sklearn.linear_model.Ridge(alpha=正則化項)"}
{"in": "横棒グラフの色をパープルにする", "out": "plt.barh(データ列x, データ列y, color='purple')"}
{"in": "リストとリストについて散布図を描画して、マーカーをバツに設定する", "out": "plt.plot(データ列x, データ列y, marker='x')"}
{"in": "茶色色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='brown')"}
{"in": "折れ線グラフをオレンジレッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='orangered')"}
{"in": "ダークターコイズ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkturquoise')"}
{"in": "10を底とする実数の対数", "out": "math.log10(x)"}
{"in": "横棒グラフをローングリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='lawngreen')"}
{"in": "データフレームの選択したカラムの文字列を欠損値に変換する", "out": "df[['列A', '列B']].replace(値, np.nan)"}
{"in": "データフレームをエクセルファイルファイルで保存する", "out": "df.to_excel('file.xlsx')"}
{"in": "option: パールゴールデンロッド色を使う", "out": "color = 'palegoldenrod'"}
{"in": "横棒グラフの色をシスルにする", "out": "plt.barh(データ列x, データ列y, color='thistle')"}
{"in": "データシリーズを日付データに変換し、データフレームのインデックスにする", "out": "df.index = pd.DatetimeIndex(pd.to_datetime(ds))"}
{"in": "ヒストグラムを点線で描画する", "out": "plt.hist(データ列, linestyle='dotted')"}
{"in": "ブランチドアーモンド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='blanchedalmond')"}
{"in": "二つのデータ列を箱ひげ図にする", "out": "plt.boxplot([データ列, データ列])"}
{"in": "日付時刻データをn分前に戻す", "out": "aDatetime - datetime.timedelta(minutes=n)"}
{"in": "正規化されたヒストグラムを描画する", "out": "plt.hist(データ列, density=True)"}
{"in": "n2分のn", "out": "n / n2"}
{"in": "データフレームの指定したカラムの中にある文字列の合計を数える", "out": "df['列A'].isin([value]).sum()"}
{"in": "棒グラフの色をミディアムパープルにする", "out": "plt.bar(データ列x, データ列y, color='mediumpurple')"}
{"in": "散布図の色をハニーデューにする", "out": "plt.scatter(データ列x, データ列y, color='honeydew')"}
{"in": "option: マーカーの色をオリーブにする", "out": "markerfacecolor = 'olive'"}
{"in": "文字列を最後の部分文字列で分けたときの前半の文字列", "out": "s.rpartition(sub)[0]"}
{"in": "モジュールを検索するパス", "out": "sys.path"}
{"in": "option: オールドレース色を使う", "out": "color = 'oldlace'"}
{"in": "多次元データを多次元尺度構成法でパステル調に次元に次元削減する", "out": "sklearn.manifold.MSD(n_components=N).fit_transform(多次元データ)"}
{"in": "ヒストグラムをスレートブルー色で描画する", "out": "plt.hist(データ列, color='slateblue')"}
{"in": "ヒストグラムをアリスブルー色で描画する", "out": "plt.hist(データ列, color='aliceblue')"}
{"in": "折れ線グラフをスラグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='slategray')"}
{"in": "集合から任意の要素を取り出す", "out": "aSet.pop()"}
{"in": "クラス分類の予測精度をヒートマップで見る", "out": "sns.heatmap(confusion_matrix(正解データ列, 予測データ列), annot=True, cmap='Reds')"}
{"in": "横棒グラフの色をライトグレーにする", "out": "plt.barh(データ列x, データ列y, color='lightgrey')"}
{"in": "折れ線グラフの四角マーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='s', markeredgewidth=2.5)"}
{"in": "イテラブルにイテラブルを続けたイテラブル", "out": "itertools.chain(iterable, iterable2)"}
{"in": "棒グラフの色をダークオレンジにする", "out": "plt.bar(データ列x, データ列y, color='darkorange')"}
{"in": "散布図の色をライトグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='lightseagreen')"}
{"in": "ライトゴールドロディイエロー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "ヒストグラムの色をドジャーブルーに設定する", "out": "plt.hist(データ列, color='dodgerblue')"}
{"in": "散布図のマーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, markerfacecolor='r')"}
{"in": "棒グラフをダークターコイズ色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkturquoise')"}
{"in": "ゴールド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='gold')"}
{"in": "棒グラフの色をrgbに設定する", "out": "plt.bar(ラベル列, データ列, color=rgb)"}
{"in": "棒グラフをライトグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightseagreen')"}
{"in": "option: アクア色を使う", "out": "color = 'aqua'"}
{"in": "ファイルを文字コードtextで書き込み用にオープンする]", "out": "open(filepath, mode='w', encoding=text)"}
{"in": "棒グラフの色をオールドレースにする", "out": "plt.bar(データ列x, データ列y, color='oldlace')"}
{"in": "空のタプル", "out": "()"}
{"in": "折れ線グラフをシアン色で描画する", "out": "plt.plot(データ列x, データ列y, color='cyan')"}
{"in": "棒グラフの色をマルーンにする", "out": "plt.bar(データ列x, データ列y, color='maroon')"}
{"in": "日付データにn週間分、加算する", "out": "aDate + datetime.timedelta(weeks=n)"}
{"in": "option: 暗い赤色を使う", "out": "color = 'darkred'"}
{"in": "ディムグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='dimgrey')"}
{"in": "実数を切り下げる", "out": "math.floor(x)"}
{"in": "散布図をパレットトルコイズ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='paleturquoise')"}
{"in": "フクシア色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='fuchsia')"}
{"in": "横棒グラフの色をオーキッドにする", "out": "plt.barh(データ列x, データ列y, color='orchid')"}
{"in": "散布図の色をシルバーにする", "out": "plt.scatter(データ列x, データ列y, color='silver')"}
{"in": "要素が集合に含まれないか調べる", "out": "element not in aSet"}
{"in": "淡いピンク色色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightpink')"}
{"in": "データフレームの指定したカラムの中に文字列があるか調べる", "out": "df['列A'].isin([value])"}
{"in": "実数を複素数に変換する", "out": "complex(x)"}
{"in": "本日が金曜日か調べる", "out": "datetime.datetime.today().weekday() == 4"}
{"in": "option: マーカーの色をブラックにする", "out": "markerfacecolor = 'black'"}
{"in": "文字列の中で正規表現にマッチした全ての文字列をリストに変換する", "out": "re.findall(pattern, s)"}
{"in": "現在のミリ秒", "out": "int(time.time() * 1000)"}
{"in": "アルファベットを全部使う", "out": "string.ascii_letters"}
{"in": "データフレームを表示するとき、小数点以下の表示精度を設定する", "out": "pd.set_option('precision', n)"}
{"in": "折れ線グラフのマーカーを右三角にする", "out": "plt.plot(データ列x, データ列y, marker='>')"}
{"in": "散布図の星マーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='#800080')"}
{"in": "データフレームのカテゴリデータをダミー変数に変換する", "out": "pd.get_dummies(df)"}
{"in": "横棒グラフをダークオレンジ色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkorange')"}
{"in": "option: マーカーの色をフローラルホワイトにする", "out": "markerfacecolor = 'floralwhite'"}
{"in": "データフレームを二つの列によって昇順に破壊的にソートする", "out": "df.sort_values(by=['列A', '列B'], ascending=True, inplace=True)"}
{"in": "xを論理値に変換する", "out": "bool(x)"}
{"in": "異なる列をキーとして二つのデータフレームを外部ジョインする", "out": "pd.merge(df, df2, left_on='列A', right_on='列B', how='outer')"}
{"in": "横棒グラフをオールドレース色で描画する", "out": "plt.barh(データ列x, データ列y, color='oldlace')"}
{"in": "カウンタをイテラブルで更新する", "out": "aCounter.update(iterable)"}
{"in": "データフレームの値を正規表現patternでまとめてreplに置き換える", "out": "df.replace(pattern, repl, regex=True)"}
{"in": "両端キューの末尾から要素を取り除く", "out": "deq.pop()"}
{"in": "option: セパレータを文字列にする", "out": "sep = s"}
{"in": "JSONLファイルからデータフレームを読み込む", "out": "pd.read_json(filename, orient='records', lines=True)"}
{"in": "データシリーズの中にある文字列の合計を数える", "out": "ds.isin([value]).sum()"}
{"in": "リスト内の要素が少なくともひとつ真か調べる", "out": "any(aList)"}
{"in": "散布図に青い丸マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='b')"}
{"in": "散布図をライトブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightblue')"}
{"in": "ヒストグラムを白くする", "out": "plt.hist(データ列, color='w')"}
{"in": "名前付きタプルを辞書に変換する", "out": "aNamedTupleObject._asdict()"}
{"in": "ライトシアン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightcyan')"}
{"in": "折れ線グラフの右三角マーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='>', markerfacecolor='k')"}
{"in": "パパイヤウィップ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='papayawhip')"}
{"in": "全要素を０で初期化したブール型の行列", "out": "np.zeros(行数, 列数, dtype=np.int32)"}
{"in": "折れ線グラフの色をビスクに設定する", "out": "plt.plot(データ列x, データ列y, color='bisque')"}
{"in": "散布図をインディゴ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='indigo')"}
{"in": "散布図をオーキッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='orchid')"}
{"in": "折れ線グラフの右三角マーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='>', markersize=2.0)"}
{"in": "散布図の右三角マーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='>', markeredgewidth=2.5)"}
{"in": "ヒストグラムの色をカデットブルーに設定する", "out": "plt.hist(データ列, color='cadetblue')"}
{"in": "タプルをn倍する", "out": "aTuple * n"}
{"in": "明日の日付", "out": "datetime.date.today() + datetime.timedelta(days=1)"}
{"in": "イテラブルを文字列リストに変換して、空白で連結する", "out": "' '.join(map(str, iterable))"}
{"in": "空白文字を全部使う", "out": "string.whitespace"}
{"in": "横軸の目盛を整数のみにする", "out": "plt.xticks(np.arange(最小値, 最大値, 間隔))"}
{"in": "ガンマ関数の絶対値に自然対数をとった値", "out": "math.lgamma(x)"}
{"in": "横棒グラフをシーグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='seagreen')"}
{"in": "文字列を白色にする", "out": "f'\\033[37m{value}\\033[0m'"}
{"in": "列を全て日付データに変換する", "out": "pd.to_datetime(df['列A'])"}
{"in": "散布図のマーカーの大きさをnに設定する", "out": "plt.scatter(データ列x, データ列y, s=n)"}
{"in": "文字列を走査し、正規表現に大文字・小文字を無視してマッチするか見る", "out": "re.search(pattern, s, flags=re.IGNORECASE)"}
{"in": "ファイルをオープンして]、バイナリストリームを使う", "out": "open(filepath, mode='rb')"}
{"in": "year年の日付時刻", "out": "datetime.datetime(year=year, month=1, day=1)"}
{"in": "全要素を0で初期化した配列", "out": "np.zeros(要素数)"}
{"in": "カデットブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='cadetblue')"}
{"in": "文字列全体をASCII限定として正規表現にマッチさせる", "out": "re.fullmatch(pattern, s, flags=re.ASCI)"}
{"in": "散布図のバツマーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='x', markersize=2.0)"}
{"in": "文字列中にひとつでも非数字が含まれるか調べる", "out": "any(not c.isdigit() for c in s)"}
{"in": "折れ線グラフの色をパールゴールデンロッドに設定する", "out": "plt.plot(データ列x, データ列y, color='palegoldenrod')"}
{"in": "データフレームのカウントプロットを描画する", "out": "sns.countplot(x='列名', data=df)"}
{"in": "棒グラフの色をダークオリーブグリーンにする", "out": "plt.bar(データ列x, データ列y, color='darkolivegreen')"}
{"in": "ランダムフォレストで回帰分析を行う", "out": "model = sklearn.ensemble.RandomForestRegressor()"}
{"in": "散布図をサーモン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='salmon')"}
{"in": "ヒストグラムを赤くする", "out": "plt.hist(データ列, color='r')"}
{"in": "縦棒グラフを描画して、バーの横幅を調整する", "out": "plt.bar(ラベル列, データ列, width=0.5)"}
{"in": "データフレームを万の位で丸める", "out": "df.round(-4)"}
{"in": "データフレームから5行、サンプリングする", "out": "df.sample(5)"}
{"in": "黒いポイントマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='.', c='k')"}
{"in": "リストとリストについての散布図にrgbのダイアモンドマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='D', c=rgb)"}
{"in": "ヒストグラムの色をインディアンレッドに設定する", "out": "plt.hist(データ列, color='indianred')"}
{"in": "ヒストグラムの色をリネンに設定する", "out": "plt.hist(データ列, color='linen')"}
{"in": "散布図をダークオレンジ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkorange')"}
{"in": "option: コロンをセパレータで使う", "out": "sep = ':'"}
{"in": "イテラブルをカウントして、カウンタを更新する", "out": "aCounter.update(iterable)"}
{"in": "データフレームの列の文字列長を列として使う", "out": "df[col].str.len()"}
{"in": "横棒グラフをパウダーブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='powderblue')"}
{"in": "横棒グラフをゴールド色で描画する", "out": "plt.barh(データ列x, データ列y, color='gold')"}
{"in": "横棒グラフの色をダークターコイズにする", "out": "plt.barh(データ列x, データ列y, color='darkturquoise')"}
{"in": "文字列がタプルに含まれるか調べる", "out": "element in aTuple"}
{"in": "スクリプトファイルのディレクトリ名", "out": "os.path.dirname(os.path.abspath(__file__))"}
{"in": "指定した列のカテゴリで集計し、それぞれの平均値を求める", "out": "df.groupby('列A').mean()"}
{"in": "option: スレートブルー色を使う", "out": "color = 'slateblue'"}
{"in": "グレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='grey')"}
{"in": "棒グラフをビスク色で描画する", "out": "plt.bar(データ列x, データ列y, color='bisque')"}
{"in": "ダークスレートブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkslateblue')"}
{"in": "option: マーカーの色をライトグレーにする", "out": "markerfacecolor = 'lightgrey'"}
{"in": "折れ線グラフをシルバー色で描画する", "out": "plt.plot(データ列x, データ列y, color='silver')"}
{"in": "折れ線グラフの色をダークサーモンに設定する", "out": "plt.plot(データ列x, データ列y, color='darksalmon')"}
{"in": "折れ線グラフの色をディープスカイブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='deepskyblue')"}
{"in": "数列のピアソンの相関係数を求める", "out": "scipy.stats.pearsonr(数列, 数列2)"}
{"in": "両端キューの末尾に要素を追加する", "out": "deq.append(element)"}
{"in": "折れ線グラフのマーカーをダイアモンドにする", "out": "plt.plot(データ列x, データ列y, marker='D')"}
{"in": "インディゴ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='indigo')"}
{"in": "配列をダミー変数に変換する", "out": "pd.get_dummies(配列)"}
{"in": "多次元尺度構成法を行う", "out": "model = sklearn.manifold.MSD(n_components=n)"}
{"in": "横棒グラフの色をグレーにする", "out": "plt.barh(データ列x, データ列y, color='grey')"}
{"in": "方程式として数式の変数の解を求める", "out": "sympy.solve(e, z)"}
{"in": "散布図をミディアムターコイズ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumturquoise')"}
{"in": "option: マーカーの色をアイボリーにする", "out": "markerfacecolor = 'ivory'"}
{"in": "折れ線グラフの色をシルバーに設定する", "out": "plt.plot(データ列x, データ列y, color='silver')"}
{"in": "散布図をグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='grey')"}
{"in": "option: グラフの色をラベンダーに設定する", "out": "color = 'lavender'"}
{"in": "新しいロジスティック回帰モデルを作る", "out": "model = sklearn.linear_model.LogisticRegression()"}
{"in": "グラフの縦横比を等しくする", "out": "plt.axis('equals')"}
{"in": "オリーブ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='olive')"}
{"in": "サーモン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='salmon')"}
{"in": "折れ線グラフの左三角マーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='<', markeredgewidth=2.5)"}
{"in": "シャルトリューズ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='chartreuse')"}
{"in": "未初期化の配列", "out": "np.empty(要素数, dtype=np.int)"}
{"in": "アンティークホワイト色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='antiquewhite')"}
{"in": "折れ線グラフの色をスプリンググリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='springgreen')"}
{"in": "データフレームの列をヒストグラムで描画する", "out": "plt.hist(df[column])"}
{"in": "ピアソンでデータフレームの相関行列を求める", "out": "df.corr(method='pearson')"}
{"in": "データフレームから列名を複数指定して選択する", "out": "df[columns]"}
{"in": "ピンク色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='pink')"}
{"in": "nが負の数か調べる", "out": "n < 0"}
{"in": "集合の濃度", "out": "len(aSet)"}
{"in": "パウダーブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='powderblue')"}
{"in": "散布図をダーク・スラテグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkslategrey')"}
{"in": "横棒グラフをサーモン色で描画する", "out": "plt.barh(データ列x, データ列y, color='salmon')"}
{"in": "散布図の左三角マーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='<', markeredgewidth=2.5)"}
{"in": "モデルの予測値と実測値を散布図に描く", "out": "plt.scatter(目的変数, model.predict(説明変数))"}
{"in": "xの小数点以下'4'桁までの文字列に変換する", "out": "':.4f'.format(x)"}
{"in": "横棒グラフをライトグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightseagreen')"}
{"in": "散布図をダークゴールデンロッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "モカシン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='moccasin')"}
{"in": "データフレームのデータ型の一覧", "out": "df.dtypes"}
{"in": "option: マーカーの色をダーク・スラテグレーにする", "out": "markerfacecolor = 'darkslategrey'"}
{"in": "折れ線グラフをカデットブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='cadetblue')"}
{"in": "青紫色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='violet')"}
{"in": "オブジェクトのイテレータ", "out": "iter(obj)"}
{"in": "ライトスチールブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightsteelblue')"}
{"in": "横棒グラフの色をオリーブにする", "out": "plt.barh(データ列x, データ列y, color='olive')"}
{"in": "新しいロッソ回帰モデルを作る", "out": "model = sklearn.linear_model.Rosso(alpha=正則化項)"}
{"in": "option: マーカーの色をグリーンイエローにする", "out": "markerfacecolor = 'greenyellow'"}
{"in": "ヒストグラムをナバホホワイト色で描画する", "out": "plt.hist(データ列, color='navajowhite')"}
{"in": "折れ線グラフの色をダーク・スラテグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='darkslategrey')"}
{"in": "散布図に黒いダイアモンドマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='D', c='k')"}
{"in": "数列のスピアマンの相関係数を求める", "out": "scipy.stats.spearmanr(数列, 数列2)"}
{"in": "分子割る分母", "out": "fractions.Fraction(分子, 分母)"}
{"in": "折れ線グラフをディムグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='dimgray')"}
{"in": "文字列中の大文字を小文字に変換する", "out": "s.lower()"}
{"in": "option: ターコイズ色を使う", "out": "color = 'turquoise'"}
{"in": "文字列を黄色にする", "out": "f'\\033[33m{value}\\033[0m'"}
{"in": "横棒グラフの色をグリーンイエローにする", "out": "plt.barh(データ列x, データ列y, color='greenyellow')"}
{"in": "散布図にrgbの右三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='>', c=rgb)"}
{"in": "option: ライトグレー色を使う", "out": "color = 'lightgray'"}
{"in": "option: ダークターコイズ色を使う", "out": "color = 'darkturquoise'"}
{"in": "日付時刻データの日数", "out": "aDatetime.day"}
{"in": "文字列中にひとつでも非アスキー文字が含まれるか調べる", "out": "any(not c.isascii() for c in s)"}
{"in": "既存のファイルをUTF8で追加できるようにオープンする]", "out": "open(filepath, mode='a', encoding='utf-8')"}
{"in": "プラットフォームの符号付き整数の最大値", "out": "sys.maxsize"}
{"in": "データフレームの欠損値を直前の値に設定する", "out": "df.fillna(method='ffill')"}
{"in": "option: 色を半透明にする", "out": "alpha = 0.5"}
{"in": "棒グラフをライムグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='limegreen')"}
{"in": "option: EUCを使う", "out": "encoding = 'euc_jp'"}
{"in": "全要素が1の行列", "out": "np.ones(行数, 列数, dtype=np.int)"}
{"in": "option: 紺色を使う", "out": "color = 'darkblue'"}
{"in": "リストとリストについて散布図を描画して、四角マーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='s', c=rgb)"}
{"in": "n個の数値イテラブル", "out": "range(n)"}
{"in": "ディムグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='dimgray')"}
{"in": "現在処理中の例外を情報", "out": "sys.exc_info()"}
{"in": "文字列をセンタリングにする", "out": "s.center(文字列幅)"}
{"in": "棒グラフの色をディープスカイブルーにする", "out": "plt.bar(データ列x, データ列y, color='deepskyblue')"}
{"in": "折れ線グラフのマーカーを大バツにする", "out": "plt.plot(データ列x, データ列y, marker='X')"}
{"in": "option: マーカーの色をコーラルにする", "out": "markerfacecolor = 'coral'"}
{"in": "イテラブルからサンプリングする", "out": "random.sample(iterable)"}
{"in": "nを切り捨てながら半分にする", "out": "n //= 2"}
{"in": "リストにリストを追加して拡張する", "out": "aList.extend(aList2)"}
{"in": "サポートベクター分類モデルを作る", "out": "model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)"}
{"in": "偽陽性を避けたい指標を使う", "out": "sklearn.metrics.precision_score(正解データ列, 予測データ列)"}
{"in": "option: グラフの色をペルーに設定する", "out": "color = 'peru'"}
{"in": "行列の行ごとの最小値", "out": "np.min(aArray, axis=1)"}
{"in": "横棒グラフをライムグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='limegreen')"}
{"in": "option: マーカーの色をダークスラテグレーにする", "out": "markerfacecolor = 'darkslategray'"}
{"in": "辞書の内部もコピーする", "out": "{k: copy.copy(v) for k, v in aDict.items()}"}
{"in": "ドジャーブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='dodgerblue')"}
{"in": "散布図の色をパウダーブルーにする", "out": "plt.scatter(データ列x, データ列y, color='powderblue')"}
{"in": "折れ線グラフの丸マーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='o', markerfacecolor='#800080')"}
{"in": "散布図に青いマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, markerfacecolor='b')"}
{"in": "辞書のキーとその値をペアとして取り出す", "out": "aDict.items()"}
{"in": "散布図の色をダークターコイズにする", "out": "plt.scatter(データ列x, データ列y, color='darkturquoise')"}
{"in": "ヒストグラムの色をライトグリーンに設定する", "out": "plt.hist(データ列, color='lightgreen')"}
{"in": "フォレストグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='forestgreen')"}
{"in": "データシリーズが正規分布からどの程度、尖っているか見る", "out": "ds.skew()"}
{"in": "横棒グラフの色をリネンにする", "out": "plt.barh(データ列x, データ列y, color='linen')"}
{"in": "一点鎖線グラフを描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot')"}
{"in": "ヒストグラムをダークグレー色で描画する", "out": "plt.hist(データ列, color='darkgray')"}
{"in": "折れ線グラフをタン色で描画する", "out": "plt.plot(データ列x, データ列y, color='tan')"}
{"in": "nが無限に続く数列", "out": "itertools.repeat(n)"}
{"in": "棒グラフを赤色で描画する", "out": "plt.bar(データ列x, データ列y, color='red')"}
{"in": "茶色色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='brown')"}
{"in": "リストをnからナンバリングする", "out": "enumerate(aList, start=n)"}
{"in": "カウンタ同士で積集合演算する", "out": "aCounter & aCounter2"}
{"in": "option: コーラル色を使う", "out": "color = 'coral'"}
{"in": "パウダーブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='powderblue')"}
{"in": "ヒストグラムを三つ並べて描画する", "out": "plt.hist([データ列, データ列, データ列], color=['b', 'r', 'g'])"}
{"in": "ライトグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightseagreen')"}
{"in": "Pythonのバージョン", "out": "sys.version"}
{"in": "option: グラフの色をホットピンクに設定する", "out": "color = 'hotpink'"}
{"in": "データフレームのカラムの調和平均を求める", "out": "scipy.stats.hmean(df['列A'])"}
{"in": "ヒストグラムの線の種類を点線に設定する", "out": "plt.hist(データ列, linestyle='dotted')"}
{"in": "TSVファイルを読み込む", "out": "pd.read_csv('file.tsv', sep='\\t')"}
{"in": "横棒グラフをオリーブ色で描画する", "out": "plt.barh(データ列x, データ列y, color='olive')"}
{"in": "ヒストグラムをダークマゼンタ色で描画する", "out": "plt.hist(データ列, color='darkmagenta')"}
{"in": "ダークグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkgray')"}
{"in": "赤い折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='r')"}
{"in": "データフレームのあるカラムが何日か見る", "out": "df['列A'].dt.day"}
{"in": "option: 改行をセパレータで使う", "out": "sep = '\\n'"}
{"in": "自然数最小公倍数", "out": "math.lcm(n, n2)"}
{"in": "折れ線グラフの色をダークシアグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='darkseagreen')"}
{"in": "文字列をプリントする", "out": "print(value)"}
{"in": "option: グラフの色をペールグリーンに設定する", "out": "color = 'palegreen'"}
{"in": "折れ線グラフの色をコーンズシルクに設定する", "out": "plt.plot(データ列x, データ列y, color='cornsilk')"}
{"in": "棒グラフの色をホワイトスモークにする", "out": "plt.bar(データ列x, データ列y, color='whitesmoke')"}
{"in": "データフレームをグループ化し、ある列に対し平均値を求める", "out": "df.groupby('列A')['列B'].mean()"}
{"in": "棒グラフをライトスチールブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightsteelblue')"}
{"in": "nとn2の差", "out": "n - n2"}
{"in": "グラフのカラーパレットを淡くする", "out": "sns.set(pallete='muted')"}
{"in": "散布図の色をダークスレートブルーにする", "out": "plt.scatter(データ列x, データ列y, color='darkslateblue')"}
{"in": "棒グラフをコーンズシルク色で描画する", "out": "plt.bar(データ列x, データ列y, color='cornsilk')"}
{"in": "ふたつの列からグループ化し、最小値を求める", "out": "df.groupby(['列A', '列B'], as_index=False).min()"}
{"in": "ヒストグラムをサンディーブラウン色で描画する", "out": "plt.hist(データ列, color='sandybrown')"}
{"in": "実数の二乗", "out": "x ** 2"}
{"in": "散布図に赤いバツマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='r')"}
{"in": "空白", "out": "' '"}
{"in": "折れ線グラフの色をミディアムスレートブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumslateblue')"}
{"in": "スレートブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='slateblue')"}
{"in": "散布図の色を茶色にする", "out": "plt.scatter(データ列x, データ列y, color='brown')"}
{"in": "ヒストグラムのビン数を設定する", "out": "plt.hist(データ列, bins=区関数)"}
{"in": "データフレームの選択したカラムの平均値", "out": "df[['列A', '列B']].mean()"}
{"in": "散布図をトマト色で描画する", "out": "plt.scatter(データ列x, データ列y, color='tomato')"}
{"in": "ヒストグラムの色をディムグレーに設定する", "out": "plt.hist(データ列, color='dimgray')"}
{"in": "実数が無限大か調べる", "out": "math.isinf(x)"}
{"in": "日付時刻データと日付時刻データの時間差が何秒か知る", "out": "(aDatetime - aDatetime2).total_seconds()"}
{"in": "ヒストグラムの色をシエナに設定する", "out": "plt.hist(データ列, color='sienna')"}
{"in": "option: クリムゾン色を使う", "out": "color = 'crimson'"}
{"in": "散布図に赤いダイアモンドマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='r')"}
{"in": "データ列とデータ列から重複を取り除く", "out": "set(ds.unique().tolist()+ds2.unique().tolist())"}
{"in": "散布図の左三角マーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='<', markersize=2.0)"}
{"in": "グラフの縦軸を対数に変更する", "out": "plt.yscale('log')"}
{"in": "散布図の色をシーグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='seagreen')"}
{"in": "文字列全体を正規表現にマッチさせる", "out": "re.fullmatch(pattern, s)"}
{"in": "横棒グラフの色をバリーウッドにする", "out": "plt.barh(データ列x, データ列y, color='burlywood')"}
{"in": "文字列の大文字と小文字を交換する", "out": "s.swapcase()"}
{"in": "ダークグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkgrey')"}
{"in": "横棒グラフの色をアクアにする", "out": "plt.barh(データ列x, データ列y, color='aqua')"}
{"in": "散布図のマーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, markersize=2.0)"}
{"in": "横棒グラフの色をブランチドアーモンドにする", "out": "plt.barh(データ列x, データ列y, color='blanchedalmond')"}
{"in": "横棒グラフの色をターコイズにする", "out": "plt.barh(データ列x, データ列y, color='turquoise')"}
{"in": "横棒グラフの色をダークサーモンにする", "out": "plt.barh(データ列x, データ列y, color='darksalmon')"}
{"in": "option: 読み込みモードに設定する", "out": "mode = 'r'"}
{"in": "カウンタ同士でユニオン演算する", "out": "aCounter | aCounter2"}
{"in": "ヒストグラムの色をナバホホワイトに設定する", "out": "plt.hist(データ列, color='navajowhite')"}
{"in": "棒グラフをピーチパフ色で描画する", "out": "plt.bar(データ列x, データ列y, color='peachpuff')"}
{"in": "option: スチールブルー色を使う", "out": "color = 'steelblue'"}
{"in": "リストとリストについての散布図に赤い丸マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='o', c='r')"}
{"in": "日付時刻データが土曜日か調べる", "out": "aDatetime.weekday() == 5"}
{"in": "ヒストグラムの色をライトブルーに設定する", "out": "plt.hist(データ列, color='lightblue')"}
{"in": "サーモン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='salmon')"}
{"in": "グラフの中に枠なしの凡例を入れる", "out": "plt.legend(frameon=False)"}
{"in": "データフレームのあるカラムが何時か見る", "out": "df['列A'].dt.hour"}
{"in": "棒グラフの色をライトグレーにする", "out": "plt.bar(データ列x, データ列y, color='lightgray')"}
{"in": "集合にイテラブルの要素を全て追加する", "out": "aSet.update(iterable)"}
{"in": "タプルの要素を昇順にソートする", "out": "sorted(aTuple, reverse=True)"}
{"in": "option: ライムグリーン色を使う", "out": "color = 'limegreen'"}
{"in": "折れ線グラフの色をライトイエローに設定する", "out": "plt.plot(データ列x, データ列y, color='lightyellow')"}
{"in": "棒グラフの色をダークカーキにする", "out": "plt.bar(データ列x, データ列y, color='darkkhaki')"}
{"in": "データフレームの選択したカラムを万の位で丸める", "out": "df[['列A', '列B']].round(-4)"}
{"in": "横棒グラフをライトスレイグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightslategray')"}
{"in": "ヒストグラムの色をミディアムパープルに設定する", "out": "plt.hist(データ列, color='mediumpurple')"}
{"in": "グリッドを点線にする", "out": "plt.grid(linestyle='dotted')"}
{"in": "赤い実線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid', color='r')"}
{"in": "横棒グラフをライム色で描画する", "out": "plt.barh(データ列x, データ列y, color='lime')"}
{"in": "散布図の右三角マーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='#800080')"}
{"in": "グラフの見栄えをデフォルトでいい感じに設定する", "out": "sns.set()"}
{"in": "リストとリストについての散布図に黒い大バツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='X', c='k')"}
{"in": "グラフの中の縦軸にラベルを付ける", "out": "plt.ylabel('y軸ラベル')"}
{"in": "option: グラフの色をターコイズに設定する", "out": "color = 'turquoise'"}
{"in": "二次元タプルをフラット化する", "out": "sum(aTuple)"}
{"in": "データフレームのある列を抽出する", "out": "df['列A']"}
{"in": "自然数の階乗", "out": "math.factorial(n)"}
{"in": "折れ線グラフの左三角マーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='<', markerfacecolor='b')"}
{"in": "折れ線グラフをブラック色で描画する", "out": "plt.plot(データ列x, データ列y, color='black')"}
{"in": "ミディアムアクアマリン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "ダークグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkgray')"}
{"in": "カウンタを辞書に変換する", "out": "dict(aCounter)"}
{"in": "配列を2次元1列に変形する", "out": "aArray.reshape(-1, 1)"}
{"in": "棒グラフをホワイトスモーク色で描画する", "out": "plt.bar(データ列x, データ列y, color='whitesmoke')"}
{"in": "横棒グラフをダークグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkgreen')"}
{"in": "ヒストグラムをミディアムバイオレットレッド色で描画する", "out": "plt.hist(データ列, color='mediumvioletred')"}
{"in": "ミディアムターコイズ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumturquoise')"}
{"in": "eの実数乗", "out": "math.exp(x)"}
{"in": "横軸の表示範囲を変更する", "out": "plt.xlim(最小値, 最大値)"}
{"in": "グラフを描画する準備をする", "out": "import matplotlib.pyplot as plt"}
{"in": "折れ線グラフをオリーブ色で描画する", "out": "plt.plot(データ列x, データ列y, color='olive')"}
{"in": "option: マーカーを三角に変更する", "out": "marker = '^'"}
{"in": "横棒グラフの色をミディアムパープルにする", "out": "plt.barh(データ列x, データ列y, color='mediumpurple')"}
{"in": "折れ線グラフの色をスカイブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='skyblue')"}
{"in": "option: グラフの色をプラムに設定する", "out": "color = 'plum'"}
{"in": "文字列が文字列リストに含まれるか調べる", "out": "s in aStringList"}
{"in": "ヒストグラムをライトグレー色で描画する", "out": "plt.hist(データ列, color='lightgray')"}
{"in": "データシリーズの分", "out": "ds.dt.minute"}
{"in": "プラットホームの名前", "out": "sys.platform"}
{"in": "デピンク色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='deeppink')"}
{"in": "option: 青色を使う", "out": "color = 'blue'"}
{"in": "破線グラフを描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed')"}
{"in": "折れ線グラフの色をオリベドラブに設定する", "out": "plt.plot(データ列x, データ列y, color='olivedrab')"}
{"in": "散布図の色をライトスカイブルーにする", "out": "plt.scatter(データ列x, データ列y, color='lightskyblue')"}
{"in": "文字列が片仮名か調べる", "out": "('ァ' <= ch <= 'ン')"}
{"in": "option: アクアマリン色を使う", "out": "color = 'aquamarine'"}
{"in": "ヒストグラムをピーチパフ色で描画する", "out": "plt.hist(データ列, color='peachpuff')"}
{"in": "option: グラフの色を青に設定する", "out": "color = 'blue'"}
{"in": "棒グラフをダークオーキッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkorchid')"}
{"in": "x,y,zをそれぞれn,n2,n3に設定する", "out": "x, y, z = n, n2, n3"}
{"in": "多次元データを特異値分解でパステル調に次元に次元削減する", "out": "sklearn.decomposition.TruncatedSVD(n_components=N).fit_transform(多次元データ)"}
{"in": "棒グラフの色をダークターコイズにする", "out": "plt.bar(データ列x, データ列y, color='darkturquoise')"}
{"in": "散布図をゴールド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='gold')"}
{"in": "本日が何年か知る", "out": "datetime.datetime.today().year"}
{"in": "JSON形式の文字列を辞書に変換する", "out": "json.loads(jsonString)"}
{"in": "ヒストグラムの色をラベンダーブラッシュに設定する", "out": "plt.hist(データ列, color='lavenderblush')"}
{"in": "データフレームを丸めて、整数型にする", "out": "df.round().astype(int)"}
{"in": "ヒストグラムをゴールド色で描画する", "out": "plt.hist(データ列, color='gold')"}
{"in": "散布図の大バツマーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='X', markersize=2.0)"}
{"in": "データフレームの全カラムを散布図で可視化する", "out": "sns.pairplot(df)"}
{"in": "辞書を浅くコピーする", "out": "dict(aDict)"}
{"in": "散布図の色をカデットブルーにする", "out": "plt.scatter(データ列x, データ列y, color='cadetblue')"}
{"in": "カテゴリに並べて、データフレームを箱ひげ図にする", "out": "sns.boxplot(x='カテゴリ列', y='列', data=df)"}
{"in": "折れ線グラフをライム色で描画する", "out": "plt.plot(データ列x, データ列y, color='lime')"}
{"in": "データフレームの指定したカラムを10の位で丸める", "out": "df['列A'].round(-1)"}
{"in": "データフレームの選択したカラムの欠損値を中央値で埋める", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].median())"}
{"in": "option: グリーンイエロー色を使う", "out": "color = 'greenyellow'"}
{"in": "配列の歪度を求める", "out": "scipy.stats.skew(配列, bias=False)"}
{"in": "散布図の大バツマーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='r')"}
{"in": "データフレームの指定したカラムの欠損値を最頻値に設定する", "out": "df['列A'].fillna(df['列A'].mode().iloc[0])"}
{"in": "ダークスレートブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkslateblue')"}
{"in": "散布図に四角マーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='s')"}
{"in": "データフレームを棒グラフにする", "out": "sns.barplot(x='カテゴリ列', y='列名', data=df)"}
{"in": "クリムゾン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='crimson')"}
{"in": "棒グラフをマゼンタ色で描画する", "out": "plt.bar(データ列x, データ列y, color='magenta')"}
{"in": "option: グラフの色をダークオレンジに設定する", "out": "color = 'darkorange'"}
{"in": "option: マーカーの色をライトサーモンにする", "out": "markerfacecolor = 'lightsalmon'"}
{"in": "棒グラフをスレートブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='slateblue')"}
{"in": "データフレームの標本分散", "out": "df.var(ddof=0)"}
{"in": "行列の列ごとの分散", "out": "np.var(aArray, axis=0)"}
{"in": "黒いバツマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='x', c='k')"}
{"in": "ライトグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightgrey')"}
{"in": "ヒストグラムをグリーン色で描画する", "out": "plt.hist(データ列, color='green')"}
{"in": "イテラブルを無限に繰り返す", "out": "itertools.cycle(iterable)"}
{"in": "option: グラフの色をダークバイオレットに設定する", "out": "color = 'darkviolet'"}
{"in": "日付データからn時間分、減算する", "out": "aDate - datetime.timedelta(hours=n)"}
{"in": "青紫色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='violet')"}
{"in": "切片なしの線形回帰分析の準備をする", "out": "model = sklearn.linear_model.LinearRegression(fit_intercept=False)"}
{"in": "ファイルをバイナリ書き込みモードでオープンして]、fとする", "out": "f = open(filepath, mode='wb')"}
{"in": "散布図をチョコレート色で描画する", "out": "plt.scatter(データ列x, データ列y, color='chocolate')"}
{"in": "正規分布にしたがってランダムに配列を生成する", "out": "scipy.stats.norm.rvs(loc=平均値, scale=標準偏差, size=データ数)"}
{"in": "淡いピンク色色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightpink')"}
{"in": "ヒストグラムの色をピーチパフに設定する", "out": "plt.hist(データ列, color='peachpuff')"}
{"in": "散布図の色を小麦色にする", "out": "plt.scatter(データ列x, データ列y, color='wheat')"}
{"in": "option: 欠損値も無視しない", "out": "dropna = True"}
{"in": "棒グラフの色をロイヤルブルーにする", "out": "plt.bar(データ列x, データ列y, color='royalblue')"}
{"in": "リストの長さ", "out": "len(aList)"}
{"in": "ヒストグラムの色を貝殻に設定する", "out": "plt.hist(データ列, color='seashell')"}
{"in": "赤い右三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='>', c='r')"}
{"in": "option: マーカーの色をホットピンクにする", "out": "markerfacecolor = 'hotpink'"}
{"in": "データフレームの末尾5行を抽出する", "out": "df.tail(5)"}
{"in": "グラフ中のフォントを設定する", "out": "sns.set(font=フォント名)"}
{"in": "パールバイオレットレッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='palevioletred')"}
{"in": "折れ線グラフをカーキ色で描画する", "out": "plt.plot(データ列x, データ列y, color='khaki')"}
{"in": "ミディアムアクアマリン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "ヒストグラムの色をアクアに設定する", "out": "plt.hist(データ列, color='aqua')"}
{"in": "文字列が全て英数字か調べる", "out": "s.isalnum()"}
{"in": "ある列の文字列が部分文字列で始まらない行を抽出する", "out": "df[~ df['列A'].str.startswith(部分文字列)]"}
{"in": "nがn2より大きいか調べる", "out": "n > n2"}
{"in": "イテラブルをカウンタに変換する", "out": "collections.Counter(iterable)"}
{"in": "横棒グラフの色をクリムゾンにする", "out": "plt.barh(データ列x, データ列y, color='crimson')"}
{"in": "option: ピーチパフ色を使う", "out": "color = 'peachpuff'"}
{"in": "横棒グラフの色をサドルブラウンにする", "out": "plt.barh(データ列x, データ列y, color='saddlebrown')"}
{"in": "タプルのn番目以降の部分を取り出す", "out": "aTuple[n:]"}
{"in": "文字列の左側からタブを取り除く", "out": "s.lstrip('\\t')"}
{"in": "ヒストグラムの色をダークグレーに設定する", "out": "plt.hist(データ列, color='darkgrey')"}
{"in": "多次元データをt-SNEでパステル調に次元に次元削減する", "out": "sklearn.manifold.TSNE(n_components=N).fit_transform(多次元データ)"}
{"in": "棒グラフの色をスラグレーにする", "out": "plt.bar(データ列x, データ列y, color='slategrey')"}
{"in": "散布図をミディアムバイオレットレッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumvioletred')"}
{"in": "棒グラフをミディアムスレートブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumslateblue')"}
{"in": "自然数個からk個取り出したときの順列の総数", "out": "math.perm(n, k)"}
{"in": "横棒グラフをスラグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='slategray')"}
{"in": "リストの末尾のn要素を取り除く", "out": "aList[:-n]"}
{"in": "乱数シードを初期化する", "out": "random.seed()"}
{"in": "ロバストな線形クラス分類の準備をする", "out": "model = sklearn.linear_model.HuberClassifier()"}
{"in": "ファイルに文字列を書き込む", "out": "f.write(s)"}
{"in": "option: 改行なし", "out": "end = ''"}
{"in": "折れ線グラフの星マーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='*', markerfacecolor='b')"}
{"in": "ヒストグラムの色をロージーブラウンに設定する", "out": "plt.hist(データ列, color='rosybrown')"}
{"in": "データフレームのカラムの標準誤差を求める", "out": "scipy.stats.sem(df['列A'])"}
{"in": "棒グラフの色をミディアムスプリンググリーンにする", "out": "plt.bar(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "文字列中に部分文字列が含まれるか調べる", "out": "sub in s"}
{"in": "既存のファイルをEUCで追加できるようにオープンする]", "out": "open(filepath, mode='a', encoding='euc_jp')"}
{"in": "option: グラフの色をリネンに設定する", "out": "color = 'linen'"}
{"in": "xの小数点以下'3'桁までをプリントする", "out": "print(':.3f'.format(x))"}
{"in": "データフレームのカラムを散布図にする", "out": "sns.scatterplot(data=df, x='列名', y='列名')"}
{"in": "ヒストグラムをゴールデンロッド色で描画する", "out": "plt.hist(データ列, color='goldenrod')"}
{"in": "データフレームのポイントプロットを描画する", "out": "sns.pairplot(hue='カテゴリ列', data=df)"}
{"in": "ヒストグラムをラベンダーブラッシュ色で描画する", "out": "plt.hist(データ列, color='lavenderblush')"}
{"in": "ヒストグラムをインディアンレッド色で描画する", "out": "plt.hist(データ列, color='indianred')"}
{"in": "リストとリストについての散布図にrgbのポイントマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='.', c=rgb)"}
{"in": "散布図の色をゴールデンロッドにする", "out": "plt.scatter(データ列x, データ列y, color='goldenrod')"}
{"in": "データ列の四分位を可視化する", "out": "plt.boxplot(データ列)"}
{"in": "データフレームのある列の値がxに等しくない行を抽出する", "out": "df[df['列A'] != x]"}
{"in": "パールゴールデンロッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='palegoldenrod')"}
{"in": "折れ線グラフをラベンダー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lavender')"}
{"in": "スラグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='slategray')"}
{"in": "配列の最頻値を求める", "out": "mode, count = scipy.stats.mode(配列)"}
{"in": "ディムグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='dimgrey')"}
{"in": "option: マーカーの色をオレンジレッドにする", "out": "markerfacecolor = 'orangered'"}
{"in": "棒グラフをミディアムオーキッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumorchid')"}
{"in": "散布図の色をナバホホワイトにする", "out": "plt.scatter(データ列x, データ列y, color='navajowhite')"}
{"in": "ミディアムターコイズ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumturquoise')"}
{"in": "横棒グラフの色をライトコーラルにする", "out": "plt.barh(データ列x, データ列y, color='lightcoral')"}
{"in": "三自然数の最大公約数", "out": "math.gcd(n, n2, n3)"}
{"in": "イテラブルの集合", "out": "set(iterable)"}
{"in": "折れ線グラフにラベルを付ける", "out": "plt.plot(データ列x, データ列y, label='ラベル')"}
{"in": "オブジェクトが関数か調べる", "out": "callable(obj)"}
{"in": "実数を切り上げて整数に変換する", "out": "math.ceil(x)"}
{"in": "折れ線グラフの色をクリムゾンに設定する", "out": "plt.plot(データ列x, データ列y, color='crimson')"}
{"in": "散布図をインディアンレッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='indianred')"}
{"in": "事前に複数行対応として正規表現をコンパイルする", "out": "re.compile(pattern, flag=re.MULTILINE)"}
{"in": "青色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='blue')"}
{"in": "ライトスチールブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightsteelblue')"}
{"in": "散布図の色をアクアにする", "out": "plt.scatter(データ列x, データ列y, color='aqua')"}
{"in": "ミディアムバイオレットレッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumvioletred')"}
{"in": "データフレームの末尾100行を抽出する", "out": "df.tail(100)"}
{"in": "ある列のカテゴリごとの平均値", "out": "df.groupby('列A').mean()"}
{"in": "横棒グラフをピンク色で描画する", "out": "plt.barh(データ列x, データ列y, color='pink')"}
{"in": "オブジェクトのハッシュ値", "out": "hash(obj)"}
{"in": "ベージュ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='beige')"}
{"in": "散布図の色をラベンダーブラッシュにする", "out": "plt.scatter(データ列x, データ列y, color='lavenderblush')"}
{"in": "option: ライトスカイブルー色を使う", "out": "color = 'lightskyblue'"}
{"in": "折れ線グラフの丸マーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='o', markerfacecolor='r')"}
{"in": "データフレームから散布図を作り、回帰直線を加える", "out": "sns.regplot(data=df, x='列名', y='列名')"}
{"in": "全ての８進数字", "out": "string.octdigits"}
{"in": "ユーザが整数を入力する", "out": "int(input())"}
{"in": "ヒストグラムを黄色色で描画する", "out": "plt.hist(データ列, color='yellow')"}
{"in": "散布図に丸マーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='o')"}
{"in": "ライトスレイグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightslategrey')"}
{"in": "xの印字可能な文字列", "out": "ascii(x)"}
{"in": "ライトブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightblue')"}
{"in": "文字列を太字でプリントする", "out": "print(f'\\033[1m{value}\\033[0m')"}
{"in": "正則化付き線形回帰分析の準備をする", "out": "model = sklearn.linear_model.ElasticNet()"}
{"in": "整数nを八進文字列に変換する", "out": "oct(n)[2:]"}
{"in": "イテラブルから重複なく、n個ランダムに選ぶ", "out": "random.sample(iterable, k=n)"}
{"in": "ヒストグラムの色をパウダーブルーに設定する", "out": "plt.hist(データ列, color='powderblue')"}
{"in": "散布図の下三角マーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='v', markeredgewidth=2.5)"}
{"in": "折れ線グラフをロージーブラウン色で描画する", "out": "plt.plot(データ列x, データ列y, color='rosybrown')"}
{"in": "データフレームの数値をまとめて小数点以下n桁で丸める", "out": "df.round(n)"}
{"in": "option: ミディアムオーキッド色を使う", "out": "color = 'mediumorchid'"}
{"in": "option: グラフの種類を一点鎖線に設定する", "out": "linestyle = 'dashbot'"}
{"in": "折れ線グラフの色をフローラルホワイトに設定する", "out": "plt.plot(データ列x, データ列y, color='floralwhite')"}
{"in": "散布図の色をオレンジにする", "out": "plt.scatter(データ列x, データ列y, color='orange')"}
{"in": "棒グラフを赤くする", "out": "plt.bar(データ列x, データ列y, color='r')"}
{"in": "棒グラフの色をアイボリーにする", "out": "plt.bar(データ列x, データ列y, color='ivory')"}
{"in": "ヒストグラムを青紫色で描画する", "out": "plt.hist(データ列, color='violet')"}
{"in": "最初のプログラムを書く", "out": "print('Hello World')"}
{"in": "文字列中にひとつでも非英数字が含まれるか調べる", "out": "any(not c.isalnum() for c in s)"}
{"in": "シアン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='cyan')"}
{"in": "option: グラフの色をライトシアンに設定する", "out": "color = 'lightcyan'"}
{"in": "綺麗なグラフを使う準備をする", "out": "import seaborn as sns"}
{"in": "散布図のダイアモンドマーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='b')"}
{"in": "散布図の左三角マーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='r')"}
{"in": "パーセプトロンで回帰分析を行う", "out": "model = sklearn.neural_network.MLPRegressor(hidden_layer_sizes=(10, 10))"}
{"in": "タプルの各要素を関数に適用した結果でソートする", "out": "sorted(aTuple, key=func)"}
{"in": "日付時刻データが何月か知る", "out": "aDatetime.month"}
{"in": "棒グラフをラベンダーブラッシュ色で描画する", "out": "plt.bar(データ列x, データ列y, color='lavenderblush')"}
{"in": "青緑色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='teal')"}
{"in": "横棒グラフの色をダークグリーンにする", "out": "plt.barh(データ列x, データ列y, color='darkgreen')"}
{"in": "日付時刻データにn秒分、加算する", "out": "aDatetime + datetime.timedelta(seconds=n)"}
{"in": "nをn2分の一にする", "out": "n /= n2"}
{"in": "フローラルホワイト色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='floralwhite')"}
{"in": "イテラブルからn個、サンプリングする", "out": "random.sample(iterable, k=n)"}
{"in": "横棒グラフの色をライトシアンにする", "out": "plt.barh(データ列x, データ列y, color='lightcyan')"}
{"in": "散布図に青い下三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='b')"}
{"in": "xの小数点以下'5'桁までの文字列に変換する", "out": "':.5f'.format(x)"}
{"in": "データフレームのある列をリストとして抽出する", "out": "df['列A'].values.tolist()"}
{"in": "赤い点線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted', color='r')"}
{"in": "配列の平均値", "out": "np.mean(aArray)"}
{"in": "文字列の先頭で大文字・小文字を無視して正規表現にマッチさせる", "out": "re.match(pattern, s, flags=re.IGNORECASE)"}
{"in": "折れ線グラフのバツマーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='x', markerfacecolor='k')"}
{"in": "折れ線グラフの色をグリーンイエローに設定する", "out": "plt.plot(データ列x, データ列y, color='greenyellow')"}
{"in": "nかけるn2", "out": "n * n2"}
{"in": "散布図をローングリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lawngreen')"}
{"in": "ヒストグラムをロイヤルブルー色で描画する", "out": "plt.hist(データ列, color='royalblue')"}
{"in": "ヒストグラムをパールゴールデンロッド色で描画する", "out": "plt.hist(データ列, color='palegoldenrod')"}
{"in": "アルファベットの文字列", "out": "string.ascii_letters"}
{"in": "決定木の重要度を表示する", "out": "plt.barh(X.columns, model.feature_importances_)"}
{"in": "アクア色のヒストグラムを描画する", "out": "plt.hist(データ列, color='aqua')"}
{"in": "データフレームを表示するとき、小数点以下の表示精度をn桁に設定する", "out": "pd.set_option('precision', n)"}
{"in": "折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y)"}
{"in": "year年month月day日hour時minute分の日付時刻", "out": "datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)"}
{"in": "スノー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='snow')"}
{"in": "option: グラフの色を耐火レンガに設定する", "out": "color = 'firebrick'"}
{"in": "散布図にrgbの丸マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='o', c=rgb)"}
{"in": "散布図の左三角マーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='#800080')"}
{"in": "データフレームの中の列を等量でビン数nでビン分割する", "out": "pd.qcut(df[col], n)"}
{"in": "option: マーカーを右三角に変更する", "out": "marker = '>'"}
{"in": "ヒストグラムの色をデピンクに設定する", "out": "plt.hist(データ列, color='deeppink')"}
{"in": "整数nを二進文字列に変換する", "out": "bin(n)[2:]"}
{"in": "折れ線グラフをオリベドラブ色で描画する", "out": "plt.plot(データ列x, データ列y, color='olivedrab')"}
{"in": "イテラブルをイミュータブルな集合に変換する", "out": "frozenset(iterable)"}
{"in": "option: 四角マーカーを使う", "out": "marker = 's'"}
{"in": "スカイブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='skyblue')"}
{"in": "ホワイトスモーク色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='whitesmoke')"}
{"in": "アンサンブル学習で回帰分析を行う", "out": "sklearn.ensemble.VotingRegressor()"}
{"in": "データフレームの列を型に変換する", "out": "df[col] = df[col].astype(ty)"}
{"in": "散布図の色をインディアンレッドにする", "out": "plt.scatter(データ列x, データ列y, color='indianred')"}
{"in": "ダークオリーブグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkolivegreen')"}
{"in": "データフレームの選択したカラムが正規分布からどの程度、尖っているか見る", "out": "df[['列A', '列B']].skew()"}
{"in": "ミディアムシアグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumseagreen')"}
{"in": "ライトスレイグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightslategrey')"}
{"in": "平均値付き箱ひげ図を描画する", "out": "plt.boxplot(データ列, showmeans=True)"}
{"in": "散布図に赤い大バツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='X', c='r')"}
{"in": "option: グラフの色をディムグレーに設定する", "out": "color = 'dimgray'"}
{"in": "横棒グラフをライトグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightgreen')"}
{"in": "バリーウッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='burlywood')"}
{"in": "横棒グラフをミディアムバイオレットレッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumvioletred')"}
{"in": "option: マーカーの色をライトスレイグレーにする", "out": "markerfacecolor = 'lightslategrey'"}
{"in": "折れ線グラフの色をライトスレイグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='lightslategray')"}
{"in": "ファイル名がJSONファイルか調べる", "out": "filename.endswith('.json')"}
{"in": "バツ印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='x')"}
{"in": "棒グラフの色をコーラルにする", "out": "plt.bar(データ列x, データ列y, color='coral')"}
{"in": "option: エクセルファイルシートの名前を設定する", "out": "sheet_name = ['A', 'B']"}
{"in": "ファイルを一行ずつ読み込む", "out": "f.readline()"}
{"in": "折れ線グラフにポイントマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='.')"}
{"in": "多次元データを主成分分析でパステル調に次元に次元削減する", "out": "sklearn.decomposition.PCA(n_components=N).fit_transform(多次元データ)"}
{"in": "グラフの用途をポスターに設定する", "out": "sns.set(context='poster')"}
{"in": "ベージュ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='beige')"}
{"in": "データフレームの選択したカラムにおいてどの値が頻出か見る", "out": "df[['列A', '列B']].mode()"}
{"in": "スラグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='slategray')"}
{"in": "文字列の開始位置番目と終了位置番目の間に部分文字列が含まれないか調べる", "out": "s.find(sub, start, end) == -1"}
{"in": "両端キューの先頭に要素を追加する", "out": "deq.appendleft(element)"}
{"in": "昨日の日付", "out": "datetime.date.today() - datetime.timedelta(days=1)"}
{"in": "散布図の色をライトシアンにする", "out": "plt.scatter(データ列x, データ列y, color='lightcyan')"}
{"in": "ダークシアン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkcyan')"}
{"in": "TSVファイルからデータフレームを読み込む", "out": "pd.read_csv('file.tsv', sep='\\t')"}
{"in": "散布図の色をオリーブにする", "out": "plt.scatter(データ列x, データ列y, color='olive')"}
{"in": "グラフのカラーパレットを濃くする", "out": "sns.set(pallete='deep')"}
{"in": "ガウス過程分類モデルを作る", "out": "model = sklearn.gaussian_process.GaussianProcessClassifier()"}
{"in": "ヒストグラムの色をローングリーンに設定する", "out": "plt.hist(データ列, color='lawngreen')"}
{"in": "ヒストグラムをコーンズシルク色で描画する", "out": "plt.hist(データ列, color='cornsilk')"}
{"in": "集合をイミュータブルに変換する", "out": "frozenset(aSet)"}
{"in": "二つの文字列を文字列で区切ってプリントする", "out": "print(value, value2, sep=s)"}
{"in": "シスル色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='thistle')"}
{"in": "横棒グラフをグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='gray')"}
{"in": "散布図の右三角マーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='k')"}
{"in": "データフレームの最頻値", "out": "df.mode()"}
{"in": "アクア色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='aqua')"}
{"in": "両端キューの先頭から要素を取り除く", "out": "deq.popleft()"}
{"in": "データフレームを二つの列によって昇順にソートする", "out": "df.sort_values(by=['列A', '列B'], ascending=True)"}
{"in": "ダーク・スラテグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkslategrey')"}
{"in": "棒グラフをミスティローズ色で描画する", "out": "plt.bar(データ列x, データ列y, color='mistyrose')"}
{"in": "ヒストグラムの色をミディアムバイオレットレッドに設定する", "out": "plt.hist(データ列, color='mediumvioletred')"}
{"in": "データフレームの指定したカラムの文字列を欠損値に変換する", "out": "df['列A'].replace(値, np.nan)"}
{"in": "モカシン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='moccasin')"}
{"in": "オブジェクトがプロパティを持つか調べる", "out": "hasattr(obj, プロパティ名)"}
{"in": "折れ線グラフの色をライトグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='lightseagreen')"}
{"in": "欠損値がある行をドロップする", "out": "df.dropna(inplace=True)"}
{"in": "ファイルからディレクトリ名を使う", "out": "os.path.dirname(filepath)"}
{"in": "option: グラフの色を貝殻に設定する", "out": "color = 'seashell'"}
{"in": "新しいリッジ回帰モデルを作る", "out": "model = sklearn.linear_model.Ridge(alpha=正則化項)"}
{"in": "イテラブルの全順列", "out": "itertools.permutations(iterable)"}
{"in": "ロバスト分類モデルを作る", "out": "model = sklearn.linear_model.RANSACClassifier(random_state=0)"}
{"in": "散布図を紺碧色で描画する", "out": "plt.scatter(データ列x, データ列y, color='azure')"}
{"in": "ライトスレイグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightslategrey')"}
{"in": "第二引数で指定されたファイルの名前", "out": "sys.argv[1]"}
{"in": "ディープスカイブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='deepskyblue')"}
{"in": "折れ線グラフを小麦色色で描画する", "out": "plt.plot(データ列x, データ列y, color='wheat')"}
{"in": "データフレームの指定したカラムの統計量", "out": "df['列A'].describe()"}
{"in": "大量のデータが正規分布に従うか仮説検定する", "out": "scipy.stats.kstest(df['列A'], 'norm')"}
{"in": "ヒストグラムをバリーウッド色で描画する", "out": "plt.hist(データ列, color='burlywood')"}
{"in": "日付時刻データが日付時刻データと同時か調べる", "out": "aDatetime == aDatetime2"}
{"in": "option: グラフの色をダークサーモンに設定する", "out": "color = 'darksalmon'"}
{"in": "CSVファイルをヘッダを指定せず読み込む", "out": "pd.read_csv('file.csv', header=None)"}
{"in": "オプションで、出力先をファイルに設定する", "out": "file = sys.open(filename, 'w')"}
{"in": "本日をISO形式の文字列に変換する", "out": "datetime.datetime.today().isoformat()"}
{"in": "ターコイズ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='turquoise')"}
{"in": "折れ線グラフに赤いダイアモンドマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='D', markerfacecolor='r')"}
{"in": "ヒストグラムをグリーンイエロー色で描画する", "out": "plt.hist(データ列, color='greenyellow')"}
{"in": "データフレームの指定したカラムの欠損値を最大値で埋める", "out": "df['列A'].fillna(df['列A'].max())"}
{"in": "横棒グラフをミディアムブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumblue')"}
{"in": "実数が正の数か調べる", "out": "x > 0"}
{"in": "ライトブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightblue')"}
{"in": "右三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='>')"}
{"in": "リストをランダムにシャッフルする", "out": "random.shuffle(aList)"}
{"in": "折れ線グラフの色を貝殻に設定する", "out": "plt.plot(データ列x, データ列y, color='seashell')"}
{"in": "折れ線グラフの線の種類を点線に設定する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted')"}
{"in": "スタッキングでクラス分類を行う", "out": "sklearn.ensemble.StackingClassifier()"}
{"in": "実数を千の位で丸める", "out": "round(x, -3)"}
{"in": "ヒストグラムの色をトマトに設定する", "out": "plt.hist(データ列, color='tomato')"}
{"in": "ミディアムブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumblue')"}
{"in": "エポック秒のデータ列から日付データに変換する", "out": "pd.to_datetime(ds, unit='s', utc=True)"}
{"in": "折れ線グラフを赤い一点鎖線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot', color='r')"}
{"in": "データフレームから重複ありでランダムに10行をサンプリングする", "out": "df.sample(10, replace=True)"}
{"in": "実数の三乗", "out": "x ** 3"}
{"in": "データフレームの母標準偏差", "out": "df.std(ddof=0)"}
{"in": "ライトグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightgrey')"}
{"in": "データフレームの複数の列をドロップする", "out": "df.drop(['列A', '列B'], axis=1, inplace=True)"}
{"in": "散布図に黒いダイアモンドマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='k')"}
{"in": "日付時刻データの時刻", "out": "aDatetime.time()"}
{"in": "ヒストグラムの色をライトゴールドロディイエローに設定する", "out": "plt.hist(データ列, color='lightgoldenrodyellow')"}
{"in": "データフレームが正規分布からどの程度、歪んでいるか見る", "out": "df.kurt()"}
{"in": "ナバホホワイト色のヒストグラムを描画する", "out": "plt.hist(データ列, color='navajowhite')"}
{"in": "文字列の終了位置より前に部分文字列が含まれるか調べる", "out": "s.find(sub, 0, end) != -1"}
{"in": "option: マーカーを大バツに変更する", "out": "marker = 'X'"}
{"in": "option: ミントクリーム色を使う", "out": "color = 'mintcream'"}
{"in": "データフレームの欠損値を最頻値で埋める", "out": "df.fillna(df.mode().iloc[0])"}
{"in": "ネイビー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='navy')"}
{"in": "勾配ブースティング分類木を作る", "out": "model = sklearn.ensemble.GradientBoostingClassifier()"}
{"in": "ダークバイオレット色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkviolet')"}
{"in": "折れ線グラフを赤い点線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted', color='r')"}
{"in": "横棒グラフの色を耐火レンガにする", "out": "plt.barh(データ列x, データ列y, color='firebrick')"}
{"in": "option: ライトグリーン色を使う", "out": "color = 'lightseagreen'"}
{"in": "ミスティローズ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mistyrose')"}
{"in": "ダークカーキ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkkhaki')"}
{"in": "折れ線グラフをロイヤルブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='royalblue')"}
{"in": "折れ線グラフに三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='^')"}
{"in": "ファイルを書き込みできるようにオープンする]", "out": "open(filepath, mode='w')"}
{"in": "グラフの描画で淡くカラーパレットを使う", "out": "sns.set(pallete='muted')"}
{"in": "リストの重複を取り除く", "out": "sorted(set(aList), key=aList.index)"}
{"in": "パープル色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='purple')"}
{"in": "リストとリストを連結する", "out": "aList + aList2"}
{"in": "データフレームから指定した三つの列を抽出する", "out": "df[['列A', '列B', '列C']]"}
{"in": "シアン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='cyan')"}
{"in": "データフレームの先頭", "out": "df.head()"}
{"in": "棒グラフをダークグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkgreen')"}
{"in": "文字の文字コード", "out": "ord(ch)"}
{"in": "未初期化の行列", "out": "np.empty((行数, 列数), dtype=np.int)"}
{"in": "折れ線グラフの星マーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='*', markeredgewidth=2.5)"}
{"in": "option: ダークグレー色を使う", "out": "color = 'darkgrey'"}
{"in": "棒グラフの色をクリムゾンにする", "out": "plt.bar(データ列x, データ列y, color='crimson')"}
{"in": "option: ダークグレー色を使う", "out": "color = 'darkgray'"}
{"in": "文字列の両端から部分文字列を取り除く", "out": "s.strip(sub)"}
{"in": "横棒グラフの色をダークオーキッドにする", "out": "plt.barh(データ列x, データ列y, color='darkorchid')"}
{"in": "xの小数点以下'2'桁までをプリントする", "out": "print(':.2f'.format(x))"}
{"in": "辞書のキーを要素に設定する", "out": "aDict[key] = element"}
{"in": "option: エンコーディングをSJISに設定する", "out": "encoding = 'shift_jis'"}
{"in": "貝殻色のヒストグラムを描画する", "out": "plt.hist(データ列, color='seashell')"}
{"in": "ヒストグラムをネイビー色で描画する", "out": "plt.hist(データ列, color='navy')"}
{"in": "実数が有限か調べる", "out": "math.isfinite(x)"}
{"in": "棒グラフの色をカデットブルーにする", "out": "plt.bar(データ列x, データ列y, color='cadetblue')"}
{"in": "配列から重複を除いた配列を作る", "out": "np.unique(aArray)"}
{"in": "データフレームの指定したカラムの中にいくつ欠損値があるか数える", "out": "df['列A'].isna().sum()"}
{"in": "ブルーバイオレット色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='blueviolet')"}
{"in": "データフレームの指定したカラムの欠損値を平均値で埋める", "out": "df['列A'].fillna(df['列A'].mean())"}
{"in": "自然数の最大公約数", "out": "math.gcd(n, n2)"}
{"in": "ヒストグラムをパレットトルコイズ色で描画する", "out": "plt.hist(データ列, color='paleturquoise')"}
{"in": "折れ線グラフを青色で描画する", "out": "plt.plot(データ列x, データ列y, color='blue')"}
{"in": "数値の符号をコピーにする", "out": "math.copysign(x, x2)"}
{"in": "棒グラフを青緑色で描画する", "out": "plt.bar(データ列x, データ列y, color='teal')"}
{"in": "ブースティングでクラス分類を行う", "out": "model = sklearn.ensemble.AdaBoostClassifier(random_state=0, n_estimators=100)"}
{"in": "散布図の下三角マーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='b')"}
{"in": "ホワイトスモーク色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='whitesmoke')"}
{"in": "データフレームの選択したカラムの空文字を欠損値に変換し、ドロップする", "out": "df[['列A', '列B']].replace('', np.nan).dropna()"}
{"in": "実数の天井", "out": "math.ceil(x)"}
{"in": "日付データををn分後に進める", "out": "aDate + datetime.timedelta(minutes=n)"}
{"in": "散布図の色をグレーにする", "out": "plt.scatter(データ列x, データ列y, color='gray')"}
{"in": "折れ線グラフの四角マーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='s', markerfacecolor='b')"}
{"in": "ヒストグラムをダークカーキ色で描画する", "out": "plt.hist(データ列, color='darkkhaki')"}
{"in": "ハニーデュー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='honeydew')"}
{"in": "チョコレート色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='chocolate')"}
{"in": "データフレームを小数点以下n桁で丸める", "out": "df.round(n)"}
{"in": "オリベドラブ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='olivedrab')"}
{"in": "文字列の先頭だけ大文字化する", "out": "s.capitalize()"}
{"in": "データフレームから重複ありでランダムに100行をサンプリングする", "out": "df.sample(100, replace=True)"}
{"in": "浮動小数点数の有理数近似", "out": "q.limit_denominator(max_denominator=1000000)"}
{"in": "データフレームを保存する", "out": "df.to_csv('file.csv')"}
{"in": "rgbの星マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='*', c=rgb)"}
{"in": "リネン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='linen')"}
{"in": "折れ線グラフをミディアムターコイズ色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumturquoise')"}
{"in": "棒グラフを淡いピンク色色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightpink')"}
{"in": "イテラブルを累積する", "out": "itertools.accumulate(iterable, operator.mul)"}
{"in": "折れ線グラフをフローラルホワイト色で描画する", "out": "plt.plot(データ列x, データ列y, color='floralwhite')"}
{"in": "インデント付きで辞書を文字列に変換する", "out": "json.dumps(aDict, ensure_ascii=False, indent=n)"}
{"in": "折れ線グラフに青い下三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='v', markerfacecolor='b')"}
{"in": "ライトシアン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightcyan')"}
{"in": "折れ線グラフの色をスチールブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='steelblue')"}
{"in": "ヒストグラムを黄色くする", "out": "plt.hist(データ列, color='y')"}
{"in": "ヒストグラムの色をダークバイオレットに設定する", "out": "plt.hist(データ列, color='darkviolet')"}
{"in": "option: ライトスチールブルー色を使う", "out": "color = 'lightsteelblue'"}
{"in": "option: グラフの色をドジャーブルーに設定する", "out": "color = 'dodgerblue'"}
{"in": "データシリーズの値が欠損値か調べる", "out": "ds.isna()"}
{"in": "実数の絶対値", "out": "math.fabs(x)"}
{"in": "折れ線グラフをディープスカイブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='deepskyblue')"}
{"in": "データフレームのヒストグラム付き散布図を描画する", "out": "sns.jointplot(x='列名', y='列名', data=df)"}
{"in": "数式を積分する", "out": "sympy.integrate(e)"}
{"in": "nマイナスn2", "out": "n - n2"}
{"in": "文字列を右トリムする", "out": "s.rstrip()"}
{"in": "配列の次元数", "out": "aArray.ndim"}
{"in": "横棒グラフの色をダーク・スラテグレーにする", "out": "plt.barh(データ列x, データ列y, color='darkslategrey')"}
{"in": "標準出力を使う", "out": "sys.stdout"}
{"in": "散布図の色をダーク・スラテグレーにする", "out": "plt.scatter(データ列x, データ列y, color='darkslategrey')"}
{"in": "折れ線グラフをリネン色で描画する", "out": "plt.plot(データ列x, データ列y, color='linen')"}
{"in": "横棒グラフの色をインディアンレッドにする", "out": "plt.barh(データ列x, データ列y, color='indianred')"}
{"in": "実数を万の位で丸める", "out": "round(x, -4)"}
{"in": "ヒストグラムをマゼンタ色で描画する", "out": "plt.hist(データ列, color='magenta')"}
{"in": "文字列内にひとつでもアルファベットが含まれるか調べる", "out": "any(c.isalpha() for c in s)"}
{"in": "行列の行", "out": "aArray[行番号]"}
{"in": "リストをn倍する", "out": "aList * n"}
{"in": "青いグリッド線を引く", "out": "plt.grid(color='b')"}
{"in": "ヒストグラムの色をペールグリーンに設定する", "out": "plt.hist(データ列, color='palegreen')"}
{"in": "散布図をダークターコイズ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkturquoise')"}
{"in": "散布図をイエローグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='yellowgreen')"}
{"in": "シーグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='seagreen')"}
{"in": "option: マーカーの色をパレットトルコイズにする", "out": "markerfacecolor = 'paleturquoise'"}
{"in": "積み上げ横棒グラフを描画する", "out": "plt.barh(ラベル列, データ列, bottom=データ列y, color='#800080')"}
{"in": "rgbの三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='^', c=rgb)"}
{"in": "スラグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='slategrey')"}
{"in": "ヒストグラムの色をダークマゼンタに設定する", "out": "plt.hist(データ列, color='darkmagenta')"}
{"in": "紺色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkblue')"}
{"in": "グリッドの線の種類を一点鎖線に変更する", "out": "plt.grid(linestyle='dashbot')"}
{"in": "折れ線グラフを青い一点鎖線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot', color='b')"}
{"in": "散布図に大バツマーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='X')"}
{"in": "データ列間の平均絶対誤差を求める", "out": "sklearn.metrics.mean_absolute_error(データ列, データ列2)"}
{"in": "データフレームの選択したカラムの欠損値を最小値に設定する", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].min())"}
{"in": "option: マーカーの色をサドルブラウンにする", "out": "markerfacecolor = 'saddlebrown'"}
{"in": "折れ線グラフを赤色で描画する", "out": "plt.plot(データ列x, データ列y, color='red')"}
{"in": "棒グラフをダークグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkgray')"}
{"in": "リストの文字列の位置をエラーなく使う", "out": "aList.index(element) if element in aList else -1"}
{"in": "ファイルにxを文字列に変換して書き込む", "out": "f.write(str(x))"}
{"in": "ダークシアン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkcyan')"}
{"in": "横棒グラフの色をネイビーにする", "out": "plt.barh(データ列x, データ列y, color='navy')"}
{"in": "データ列を箱ひげ図にする", "out": "plt.boxplot(データ列)"}
{"in": "現在の秒数", "out": "datetime.date.today().second"}
{"in": "実数の自然対数", "out": "math.log(x)"}
{"in": "ファイル名がテキストファイルか調べる", "out": "filename.endswith('.txt')"}
{"in": "リストのn番目からn2番目までの部分", "out": "aList[n:n2]"}
{"in": "横棒グラフの色をグリーンにする", "out": "plt.barh(データ列x, データ列y, color='green')"}
{"in": "文字列をSJISでバイト列に変換する", "out": "s.encode(encoding='sjis', errors='ignore')"}
{"in": "プログラムの実行を正しく終了する", "out": "sys.exit(0)"}
{"in": "散布図の色をドジャーブルーにする", "out": "plt.scatter(データ列x, データ列y, color='dodgerblue')"}
{"in": "option: エンコーディングをUTF8に設定する", "out": "encoding = 'utf-8'"}
{"in": "空列", "out": "[]"}
{"in": "散布図を黒くする", "out": "plt.scatter(データ列x, データ列y, color='k')"}
{"in": "データフレームをある列によってグループ化して、グループ名を列挙する", "out": "[name for name, _ in df.groupby('列A')]"}
{"in": "ヒストグラムをロージーブラウン色で描画する", "out": "plt.hist(データ列, color='rosybrown')"}
{"in": "実数を実数で割る", "out": "x / y"}
{"in": "オブジェクトは浮動小数点数クラスか調べる", "out": "isinstance(obj, float)"}
{"in": "ゴールデンロッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='goldenrod')"}
{"in": "棒グラフをスチールブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='steelblue')"}
{"in": "year年month月day日の日付", "out": "datetime.date(year=year, month=month, day=day)"}
{"in": "ファイル名がTSVファイルか調べる", "out": "filename.endswith('.tsv')"}
{"in": "ファイルから追加ストリームをオープンして]、fとする", "out": "f = open(filepath, mode='a')"}
{"in": "option: 値を置き換える", "out": "inplace = True"}
{"in": "円グラフを真円にする", "out": "plt.axis('equals')"}
{"in": "nをn2だけ左シフトする", "out": "n << n2"}
{"in": "ペルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='peru')"}
{"in": "データフレームの指定の列に重複があれば、ドロップする", "out": "df.drop_duplicates(subset=['列A', '列B'], inplace=True)"}
{"in": "折れ線グラフの三角マーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='^', markersize=2.0)"}
{"in": "ヒストグラムをアンティークホワイト色で描画する", "out": "plt.hist(データ列, color='antiquewhite')"}
{"in": "リストとリストについて散布図を描画して、マーカーを丸に設定する", "out": "plt.plot(データ列x, データ列y, marker='o')"}
{"in": "ヒストグラムの色をライトスレイグレーに設定する", "out": "plt.hist(データ列, color='lightslategrey')"}
{"in": "リストの要素を昇順にソートする", "out": "sorted(aList, reverse=False)"}
{"in": "実数に実数を掛ける", "out": "x * y"}
{"in": "リストの末尾からn番目以前の部分を取り出す", "out": "aList[:-n]"}
{"in": "散布図をダークオーキッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkorchid')"}
{"in": "ヒストグラムの色をグリーンに設定する", "out": "plt.hist(データ列, color='green')"}
{"in": "横棒グラフをダーク・スラテグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkslategrey')"}
{"in": "グラフにy=0の破線を付ける", "out": "plt.axhline(y=0, linestyle='dashed')"}
{"in": "データフレームをCSVファイルにヘッダを付けず保存する", "out": "df.to_csv('file.csv', header=None)"}
{"in": "データフレームのカラムのスピアマンの相関係数を求める", "out": "scipy.stats.spearmanr(df['列A'], df['列B'])"}
{"in": "棒グラフをオレンジ色で描画する", "out": "plt.bar(データ列x, データ列y, color='orange')"}
{"in": "ヒストグラムの色をミディアムシアグリーンに設定する", "out": "plt.hist(データ列, color='mediumseagreen')"}
{"in": "データフレームを表示するとき、表示可能な最大列数を変更する", "out": "pd.set_option('display.max_columns', n)"}
{"in": "ペールグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='palegreen')"}
{"in": "実数の逆余弦", "out": "math.acos(x)"}
{"in": "option: マーカーの色をライトコーラルにする", "out": "markerfacecolor = 'lightcoral'"}
{"in": "チップのデータセットからデータフレームを読み込む", "out": "df = sns.load_dataset('tips')"}
{"in": "箱ひげ図を描画して、平均線を加える", "out": "plt.boxplot(データ列, meanline=True)"}
{"in": "ヒストグラムをミントクリーム色で描画する", "out": "plt.hist(データ列, color='mintcream')"}
{"in": "option: ミディアムブルー色を使う", "out": "color = 'mediumblue'"}
{"in": "データフレームの指定したカラムの不偏分散", "out": "df['列A'].var(ddof=1)"}
{"in": "ミディアムバイオレットレッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumvioletred')"}
{"in": "ヒストグラムの色をサーモンに設定する", "out": "plt.hist(データ列, color='salmon')"}
{"in": "ライムグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='limegreen')"}
{"in": "option: ダークグリーン色を使う", "out": "color = 'darkgreen'"}
{"in": "文字列の先頭で正規表現にマッチするか見る", "out": "re.match(pattern, s)"}
{"in": "棒グラフの色をネイビーにする", "out": "plt.bar(データ列x, データ列y, color='navy')"}
{"in": "イテラブルからひとつランダムに選ぶ", "out": "random.choice(iterable)"}
{"in": "year年month月を日付に変換する", "out": "datetime.date(year=year, month=month, day=1)"}
{"in": "一点鎖線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot')"}
{"in": "日付時刻データを浮動小数点数に変換する", "out": "aDatetime.timestamp()"}
{"in": "データフレームのある列をドロップする", "out": "df.drop('列A', axis=1, inplace=True)"}
{"in": "ヒストグラムをカラーマップで描画する", "out": "plt.hist(データ列x, color=plt.get_cmap(\"Spectral\"))"}
{"in": "横棒グラフの色をイエローグリーンにする", "out": "plt.barh(データ列x, データ列y, color='yellowgreen')"}
{"in": "散布図の色をスカイブルーにする", "out": "plt.scatter(データ列x, データ列y, color='skyblue')"}
{"in": "タプルをn回、連結する", "out": "aTuple * n"}
{"in": "散布図をスプリンググリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='springgreen')"}
{"in": "折れ線グラフのポイントマーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='.', markerfacecolor='r')"}
{"in": "option: 欠損値は無視する", "out": "dropna = True"}
{"in": "ヒストグラムの色をフォレストグリーンに設定する", "out": "plt.hist(データ列, color='forestgreen')"}
{"in": "折れ線グラフの色をミディアムアクアマリンに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "散布図の色をシャルトリューズにする", "out": "plt.scatter(データ列x, データ列y, color='chartreuse')"}
{"in": "プラットホームがMacOSか調べる", "out": "sys.platform.startswith('darwin')"}
{"in": "文字列を改行で区切る", "out": "s.splitlines()"}
{"in": "ガウス過程で回帰分析を行う", "out": "model = sklearn.gaussian_process.GaussianProcessRegressor()"}
{"in": "モカシン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='moccasin')"}
{"in": "xを整数に変換する", "out": "int(x)"}
{"in": "二つの文字列をタブで区切ってプリントする", "out": "print(value, value2, sep='\\t')"}
{"in": "日付時刻データををn時間後に進める", "out": "aDatetime + datetime.timedelta(hours=n)"}
{"in": "データフレームの中にいくつ文字列があるか数える", "out": "df.isin([value]).sum()"}
{"in": "ライトグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightgrey')"}
{"in": "option: マーカーの色をスレートブルーにする", "out": "markerfacecolor = 'slateblue'"}
{"in": "データフレームの散布図に多項式回帰を加える", "out": "sns.regplot(data=df, x='列名', y='列名', order=2)"}
{"in": "ヒストグラムをアクア色で描画する", "out": "plt.hist(データ列, color='aqua')"}
{"in": "折れ線グラフをレモンシフォン色で描画する", "out": "plt.plot(データ列x, データ列y, color='lemonchiffon')"}
{"in": "横棒グラフをミディアムシアグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumseagreen')"}
{"in": "棒グラフをライトシアン色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightcyan')"}
{"in": "データフレームの不偏分散", "out": "df.var(ddof=1)"}
{"in": "フォレストグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='forestgreen')"}
{"in": "横棒グラフをナバホホワイト色で描画する", "out": "plt.barh(データ列x, データ列y, color='navajowhite')"}
{"in": "整数nがセットのどれかか調べる", "out": "n in aSet"}
{"in": "データフレームの選択したカラムの中央値", "out": "df[['列A', '列B']].median()"}
{"in": "リストとリストについての散布図に赤いダイアモンドマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='D', c='r')"}
{"in": "ライムグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='limegreen')"}
{"in": "ミッドナイトブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='midnightblue')"}
{"in": "散布図をダークスレートブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkslateblue')"}
{"in": "日付時刻データと日付時刻データの時間差を秒数で求める", "out": "(aDatetime - aDatetime2).total_seconds()"}
{"in": "option: 右三角マーカーを使う", "out": "marker = '>'"}
{"in": "横棒グラフの色をミディアムアクアマリンにする", "out": "plt.barh(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "データフレームの選択したカラムの尖度", "out": "df[['列A', '列B']].skew()"}
{"in": "データフレームのある列をダミー変数にする", "out": "pd.get_dummies(df['列A'])"}
{"in": "ライトシアン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightcyan')"}
{"in": "ヒストグラムの色をゴールデンロッドに設定する", "out": "plt.hist(データ列, color='goldenrod')"}
{"in": "インディアンレッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='indianred')"}
{"in": "option: 列方向に計算する", "out": "axis = 0"}
{"in": "データフレームを丸める", "out": "df.round()"}
{"in": "nの各桁の総和", "out": "sum(map(int, str(n)))"}
{"in": "イテラブルの各要素に対して、predicateFuncが真であれば、その要素を出力する", "out": "itertools.takewhile(predicateFunc, iterable)"}
{"in": "データフレームの要約統計量", "out": "df.describe()"}
{"in": "横棒グラフの色をライトゴールドロディイエローにする", "out": "plt.barh(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "データフレームの欠損値を平均値に設定する", "out": "df.fillna(df.mean())"}
{"in": "黒い四角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='s', c='k')"}
{"in": "棒グラフの色をミディアムターコイズにする", "out": "plt.bar(データ列x, データ列y, color='mediumturquoise')"}
{"in": "イテラブルから配列を作る", "out": "np.array(iterable)"}
{"in": "フクシア色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='fuchsia')"}
{"in": "マゼンタ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='magenta')"}
{"in": "ヒストグラムの色をホワイトスモークに設定する", "out": "plt.hist(データ列, color='whitesmoke')"}
{"in": "リストとリストについての散布図に黒い三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='^', c='k')"}
{"in": "グラフをポスター用に設定する", "out": "sns.set(context='poster')"}
{"in": "オプションで、ファイルを出力にする", "out": "file = sys.open(filename, 'w')"}
{"in": "文字列を左トリムする", "out": "s.lstrip()"}
{"in": "日付時刻データが水曜日か調べる", "out": "aDatetime.weekday() == 2"}
{"in": "ファイルの拡張子なしのファイル名を使う", "out": "os.path.splitext(os.path.basename(filepath))[0]"}
{"in": "棒グラフを小麦色色で描画する", "out": "plt.bar(データ列x, データ列y, color='wheat')"}
{"in": "シスル色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='thistle')"}
{"in": "散布図の色をパールゴールデンロッドにする", "out": "plt.scatter(データ列x, データ列y, color='palegoldenrod')"}
{"in": "横棒グラフの色をライトスカイブルーにする", "out": "plt.barh(データ列x, データ列y, color='lightskyblue')"}
{"in": "棒グラフをミディアムアクアマリン色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "折れ線グラフを実線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid')"}
{"in": "nではない", "out": "not n"}
{"in": "散布図のマーカーを下三角にする", "out": "plt.scatter(データ列x, データ列y, marker='v')"}
{"in": "スラグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='slategrey')"}
{"in": "二変数の最大値", "out": "max(x, y)"}
{"in": "1からNまでの配列", "out": "np.arange(1, N+1)"}
{"in": "プラム色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='plum')"}
{"in": "データシリーズの平均値", "out": "ds.mean()"}
{"in": "二つのデータフレームを縦方向に結合する", "out": "pd.concat([df, df2], axis=0)"}
{"in": "平均と標準偏差から疑似乱数を生成する", "out": "random.normalvariate(mu=0.5, sigma=0.2)"}
{"in": "配列のデータ型", "out": "aArray.dtype()"}
{"in": "データフレームの指定したカラムを千の位で丸める", "out": "df['列A'].round(-3)"}
{"in": "ロバスト推定でクラス分類を行う", "out": "model = sklearn.linear_model.RANSACClassifier(random_state=0)"}
{"in": "データフレームの指定したカラムの欠損値を直前の値で埋める", "out": "df['列A'].fillna(method='ffill')"}
{"in": "棒グラフの色をライトスチールブルーにする", "out": "plt.bar(データ列x, データ列y, color='lightsteelblue')"}
{"in": "部分的最小二乗法で回帰分析を行う", "out": "model = sklearn.cross_decomposition.PLSRegression(n_components=10)"}
{"in": "スプリンググリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='springgreen')"}
{"in": "散布図にダイアモンドマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='D')"}
{"in": "散布図をスラグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='slategrey')"}
{"in": "新しい回帰木モデルを作る", "out": "model = sklearn.tree.DecisionTreeRegressor()"}
{"in": "折れ線グラフに青いバツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='x', markerfacecolor='b')"}
{"in": "データ列を等量でビン数nでビン分割する", "out": "pd.qcut(ds, n)"}
{"in": "xの小数点以下'1'桁までの文字列に変換する", "out": "':.1f'.format(x)"}
{"in": "二つの文字列をスラッシュで区切ってプリントする", "out": "print(value, value2, sep='/')"}
{"in": "散布図の色をサンディーブラウンにする", "out": "plt.scatter(データ列x, データ列y, color='sandybrown')"}
{"in": "青緑色のヒストグラムを描画する", "out": "plt.hist(データ列, color='teal')"}
{"in": "横棒グラフの色を暗い赤にする", "out": "plt.barh(データ列x, データ列y, color='darkred')"}
{"in": "データフレームを二つの列によって降順に破壊的にソートする", "out": "df.sort_values(by=['列A', '列B'], ascending=False, inplace=True)"}
{"in": "カウンタ同士で積集合", "out": "aCounter & aCounter2"}
{"in": "横棒グラフの色をハニーデューにする", "out": "plt.barh(データ列x, データ列y, color='honeydew')"}
{"in": "ヒストグラムの色をコーンズシルクに設定する", "out": "plt.hist(データ列, color='cornsilk')"}
{"in": "マゼンタ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='magenta')"}
{"in": "データフレームの相関行列をヒートマップで可視化する", "out": "sns.heatmap(df.corr())"}
{"in": "散布図をダークオリーブグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkolivegreen')"}
{"in": "option: 大バツマーカーを使う", "out": "marker = 'X'"}
{"in": "散布図をダークグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkgreen')"}
{"in": "両端キューの末尾", "out": "deq[-1]"}
{"in": "データシリーズの欠損値を最大値に設定する", "out": "ds.fillna(ds.max())"}
{"in": "option: ミディアムスプリンググリーン色を使う", "out": "color = 'mediumspringgreen'"}
{"in": "option: グラフの色をダークカーキに設定する", "out": "color = 'darkkhaki'"}
{"in": "ファイルからストリームを読み込み、fileとする", "out": "file = open(filepath)"}
{"in": "折れ線グラフの大バツマーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='X', markerfacecolor='#800080')"}
{"in": "option: グラフの色をライムグリーンに設定する", "out": "color = 'limegreen'"}
{"in": "横棒グラフをパールゴールデンロッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='palegoldenrod')"}
{"in": "option: 先頭のカラムをインデックスに設定する", "out": "index_col = 0"}
{"in": "二次元リストをフラット化する", "out": "sum(aList)"}
{"in": "タプルの末尾を取り除く", "out": "aTuple[:-1]"}
{"in": "option: ライトスレイグレー色を使う", "out": "color = 'lightslategray'"}
{"in": "データ列を二つ並べて箱ひげ図にする", "out": "plt.boxplot([データ列, データ列])"}
{"in": "ネイビー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='navy')"}
{"in": "ヒストグラムをスカイブルー色で描画する", "out": "plt.hist(データ列, color='skyblue')"}
{"in": "リッジ回帰とロッソ回帰のハイブリッド分析の準備をする", "out": "model = sklearn.linear_model.ElasticNet()"}
{"in": "日付時刻データをn時間前に戻す", "out": "aDatetime - datetime.timedelta(hours=n)"}
{"in": "折れ線グラフをトマト色で描画する", "out": "plt.plot(データ列x, データ列y, color='tomato')"}
{"in": "ライトスチールブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightsteelblue')"}
{"in": "ロージーブラウン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='rosybrown')"}
{"in": "指定した列のカテゴリで集計し、それぞれの合計を求める", "out": "df.groupby('列A').sum()"}
{"in": "ダークスラテグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkslategray')"}
{"in": "データシリーズの中の欠損値の合計を数える", "out": "ds.isna().sum()"}
{"in": "option: グラフの色をオリベドラブに設定する", "out": "color = 'olivedrab'"}
{"in": "データフレームの指定したカラムの欠損値を中央値で埋める", "out": "df['列A'].fillna(df['列A'].median())"}
{"in": "青緑色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='teal')"}
{"in": "year年month月day日hour時を日付時刻に変換する", "out": "datetime.datetime(year=year, month=month, day=day, hour=hour)"}
{"in": "option: グラフの色をオリーブに設定する", "out": "color = 'olive'"}
{"in": "文字列を太字でプリントできる文字列に変換する", "out": "f'\\033[1m{value}\\033[0m'"}
{"in": "ハローワールドとプリントする", "out": "print('Hello World')"}
{"in": "タプルをひとつ置きに取り出す", "out": "aTuple[::2]"}
{"in": "辞書の値を列挙する", "out": "aDict.values()"}
{"in": "印字可能な文字を全部使う", "out": "string.printable"}
{"in": "文字列中から正規表現にマッチする文字列を探す", "out": "re.search(pattern, s)"}
{"in": "正規分布による累積分布関数", "out": "scipy.stats.norm.cdf(x, loc=平均値, scale=標準偏差)"}
{"in": "ファイルからファイル名を使う", "out": "os.path.basename(filepath)"}
{"in": "棒グラフの色をパパイヤウィップにする", "out": "plt.bar(データ列x, データ列y, color='papayawhip')"}
{"in": "データフレームから列を二つ選択する", "out": "df[['列A', '列B']]"}
{"in": "グラフの背景色を白くする", "out": "sns.set(style='whitegrid')"}
{"in": "ライトシアン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightcyan')"}
{"in": "ヒストグラムを淡いピンク色色で描画する", "out": "plt.hist(データ列, color='lightpink')"}
{"in": "行列の列ごとの標準偏差", "out": "np.std(aArray, axis=0)"}
{"in": "横棒グラフの色をライトサーモンにする", "out": "plt.barh(データ列x, データ列y, color='lightsalmon')"}
{"in": "散布図の三角マーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='r')"}
{"in": "データフレームのカラムの正規分布を判定する", "out": "scipy.stats.shapiro(df['列A'])"}
{"in": "データフレームの欠損値をxに設定する", "out": "df.fillna(x)"}
{"in": "文字列の左側から空白を取り除く", "out": "s.lstrip(' ')"}
{"in": "option: 欠損値を先頭にする", "out": "na_position = 'first'"}
{"in": "改行する", "out": "print()"}
{"in": "グラフの縦横を設定する", "out": "plt.figure(figsize=(横幅, 高さ))"}
{"in": "折れ線グラフの色をスノーに設定する", "out": "plt.plot(データ列x, データ列y, color='snow')"}
{"in": "横棒グラフの色をホットピンクにする", "out": "plt.barh(データ列x, データ列y, color='hotpink')"}
{"in": "タプルの要素を昇順にソートする", "out": "sorted(aTuple, reverse=False)"}
{"in": "配列を等量でn個にビン分割する", "out": "pd.qcut(aArray, n)"}
{"in": "シエナ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='sienna')"}
{"in": "ヒストグラムの色をグレーに設定する", "out": "plt.hist(データ列, color='grey')"}
{"in": "ある列のカテゴリごとの最大値", "out": "df.groupby('列A').max()"}
{"in": "折れ線グラフの色をディムグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='dimgrey')"}
{"in": "グラフを画像ファイルとして保存する", "out": "plt.savefig('foo.png')"}
{"in": "縦軸の目盛を対数に変更する", "out": "plt.yscale('log')"}
{"in": "青い折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='b')"}
{"in": "データフレームの欠損値を直後の値で埋める", "out": "df.fillna(method='bfill')"}
{"in": "option: グラフの色を白に設定する", "out": "color = 'white'"}
{"in": "パパイヤウィップ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='papayawhip')"}
{"in": "横棒グラフをインディゴ色で描画する", "out": "plt.barh(データ列x, データ列y, color='indigo')"}
{"in": "散布図の色をディムグレーにする", "out": "plt.scatter(データ列x, データ列y, color='dimgrey')"}
{"in": "ファイルをクローズする", "out": "f.close()"}
{"in": "ロージーブラウン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='rosybrown')"}
{"in": "文字列を部分文字列で区切る", "out": "s.split(sub)"}
{"in": "nがn2より小さいか調べる", "out": "n < n2"}
{"in": "データフレームの指定したカラムの尖度", "out": "df['列A'].skew()"}
{"in": "小麦色色のヒストグラムを描画する", "out": "plt.hist(データ列, color='wheat')"}
{"in": "配列を転置する", "out": "aArray.T"}
{"in": "ダークスレートブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkslateblue')"}
{"in": "散布図の色をコーンフラワーブルーにする", "out": "plt.scatter(データ列x, データ列y, color='cornflowerblue')"}
{"in": "折れ線グラフの色をドジャーブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='dodgerblue')"}
{"in": "option: ASCII文字に限定する", "out": "flag = re.ASCII"}
{"in": "散布図をオリーブ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='olive')"}
{"in": "棒グラフをライトスレイグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightslategrey')"}
{"in": "option: ブランチドアーモンド色を使う", "out": "color = 'blanchedalmond'"}
{"in": "option: グラフの色をパウダーブルーに設定する", "out": "color = 'powderblue'"}
{"in": "JSONファイルのファイル入力を辞書に変換する", "out": "json.load(fin)"}
{"in": "折れ線グラフを淡いピンク色色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightpink')"}
{"in": "オブジェクトの参照カウント", "out": "sys.getrefcount(obj)"}
{"in": "折れ線グラフに下三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='v')"}
{"in": "データシリーズが何分か見る", "out": "ds.dt.minute"}
{"in": "赤い大バツマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='X', c='r')"}
{"in": "nとn2の和", "out": "n + n2"}
{"in": "option: グラフの色をフローラルホワイトに設定する", "out": "color = 'floralwhite'"}
{"in": "レモンシフォン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lemonchiffon')"}
{"in": "グラフにx=0の破線を付ける", "out": "plt.axvline(x=0, linestyle='dashed')"}
{"in": "数式を微分する", "out": "sympy.diff(e)"}
{"in": "二つの文字列をカンマで区切ってプリントする", "out": "print(value, value2, sep=',')"}
{"in": "rgbの大バツマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='X', c=rgb)"}
{"in": "散布図にrgbのポイントマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='.', c=rgb)"}
{"in": "既存のファイルをSJISで追加できるようにオープンする]", "out": "open(filepath, mode='a', encoding='shift_jis')"}
{"in": "option: マーカーの色をダークオリーブグリーンにする", "out": "markerfacecolor = 'darkolivegreen'"}
{"in": "option: 配列のデータ型を指定する", "out": "dtype = np.int32"}
{"in": "ピーチパフ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='peachpuff')"}
{"in": "角度のラジアン", "out": "math.radians(degree)"}
{"in": "データフレームの重複した行をマスクする", "out": "df.duplicated()"}
{"in": "タプル内の要素が少なくともひとつ真か調べる", "out": "any(aTuple)"}
{"in": "リストをn回、連結する", "out": "aList * n"}
{"in": "オレンジ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='orange')"}
{"in": "散布図を黄色くする", "out": "plt.scatter(データ列x, データ列y, color='y')"}
{"in": "実数の整数部", "out": "math.modf(x)[1]"}
{"in": "標準入力を得る", "out": "sys.stdin"}
{"in": "実数の逆正弦", "out": "math.asin(x)"}
{"in": "折れ線グラフを色付きの破線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed', color='#800080')"}
{"in": "折れ線グラフをイエローグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='yellowgreen')"}
{"in": "リストとリストについての散布図に黒い星マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='*', c='k')"}
{"in": "散布図をハニーデュー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='honeydew')"}
{"in": "シャピロ・ウィルク検定を行う", "out": "scipy.stats.shapiro(df['列A'])"}
{"in": "ダークマゼンタ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkmagenta')"}
{"in": "横棒グラフをダークカーキ色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkkhaki')"}
{"in": "折れ線グラフをインディゴ色で描画する", "out": "plt.plot(データ列x, データ列y, color='indigo')"}
{"in": "散布図のマーカーを大バツにする", "out": "plt.scatter(データ列x, データ列y, marker='X')"}
{"in": "暗い赤色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkred')"}
{"in": "ローングリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lawngreen')"}
{"in": "クラス分類の予測精度を見る", "out": "混同行列 = sklearn.metrics.confusion_matrix(正解データ列, 予測データ列)"}
{"in": "option: グラフの種類を点線に設定する", "out": "linestyle = 'dotted'"}
{"in": "実数のn乗", "out": "pow(x, n)"}
{"in": "データフレームの列のユニークな値", "out": "df[col].unique()"}
{"in": "option: セパレータを使わない", "out": "sep = ''"}
{"in": "散布図の色を耐火レンガにする", "out": "plt.scatter(データ列x, データ列y, color='firebrick')"}
{"in": "ミディアムスプリンググリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "イテラブルを累積したイテラブル", "out": "itertools.accumulate(iterable, operator.mul)"}
{"in": "白いヒストグラムを描画する", "out": "plt.hist(データ列, color='w')"}
{"in": "コーラル色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='coral')"}
{"in": "option: マーカーの色をダークバイオレットにする", "out": "markerfacecolor = 'darkviolet'"}
{"in": "棒グラフの色をライトグリーンにする", "out": "plt.bar(データ列x, データ列y, color='lightseagreen')"}
{"in": "タプルの末尾", "out": "aTuple[-1]"}
{"in": "option: グラフの色をゴールドに設定する", "out": "color = 'gold'"}
{"in": "白色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='white')"}
{"in": "オレンジ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='orange')"}
{"in": "横棒グラフの色をミスティローズにする", "out": "plt.barh(データ列x, データ列y, color='mistyrose')"}
{"in": "seabornのデフォルトを適用する", "out": "sns.set()"}
{"in": "実数の正弦の逆数", "out": "math.asin(x)"}
{"in": "日付時刻データの年数", "out": "aDatetime.year"}
{"in": "データシリーズの空文字を欠損値に変換し、ドロップする", "out": "ds.replace('', np.nan).dropna()"}
{"in": "丸マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='o')"}
{"in": "リストとリストについて散布図を描画して、マーカーをダイアモンドに設定する", "out": "plt.plot(データ列x, データ列y, marker='D')"}
{"in": "カウンタの全数", "out": "aCounter.total()"}
{"in": "イテラブルを累加する", "out": "itertools.accumulate(iterable)"}
{"in": "ライム色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lime')"}
{"in": "nをn2で割った余りをnに代入する", "out": "n %= n2"}
{"in": "実数の双曲線正接", "out": "math.tanh(x)"}
{"in": "ナバホホワイト色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='navajowhite')"}
{"in": "横棒グラフをパールバイオレットレッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='palevioletred')"}
{"in": "Pythonパスにディレクトリを追加する", "out": "sys.path.append(dir)"}
{"in": "データフレームをある列によって降順に破壊的にソートする", "out": "df.sort_values(by='列A', ascending=False, inplace=True)"}
{"in": "option: マーカーの色をミントクリームにする", "out": "markerfacecolor = 'mintcream'"}
{"in": "option: ミスティローズ色を使う", "out": "color = 'mistyrose'"}
{"in": "ヒストグラムをフクシア色で描画する", "out": "plt.hist(データ列, color='fuchsia')"}
{"in": "文字列を白色でプリントする", "out": "print(f'\\033[37m{value}\\033[0m')"}
{"in": "横棒グラフの色を赤にする", "out": "plt.barh(データ列x, データ列y, color='red')"}
{"in": "横棒グラフの色をカデットブルーにする", "out": "plt.barh(データ列x, データ列y, color='cadetblue')"}
{"in": "データフレームの選択したカラムがどの程度、分散しているか見る", "out": "df[['列A', '列B']].var()"}
{"in": "赤いポイントマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='.', c='r')"}
{"in": "日付時刻データををn分後に進める", "out": "aDatetime + datetime.timedelta(minutes=n)"}
{"in": "散布図をシャルトリューズ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='chartreuse')"}
{"in": "リストとリストについて散布図を描画して、マーカーをポイントに設定する", "out": "plt.plot(データ列x, データ列y, marker='.')"}
{"in": "整数乱数で要素を埋めた配列", "out": "np.random.randint(開始値, 終了値, N)"}
{"in": "ミディアムパープル色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumpurple')"}
{"in": "ケンドール相関係数でデータフレームの相関行列を求める", "out": "df.corr(method='kendall')"}
{"in": "数式を簡略にする", "out": "sympy.sympify(e)"}
{"in": "データフレームの空文字を欠損値に変換し、ドロップする", "out": "df.replace('', np.nan).dropna()"}
{"in": "option: 色の透明度を設定する", "out": "alpha = 0.5"}
{"in": "文字列をマゼンタでプリントする", "out": "print(f'\\033[35m{value}\\033[0m')"}
{"in": "データフレームのあるカラムの年", "out": "df['列A'].dt.year"}
{"in": "現在が何秒か知る", "out": "datetime.date.today().second"}
{"in": "データフレームの中の列を等量でn個にビン分割する", "out": "pd.qcut(df[col], n)"}
{"in": "散布図をダークシアン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkcyan')"}
{"in": "横棒グラフをグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='green')"}
{"in": "棒グラフを青紫色で描画する", "out": "plt.bar(データ列x, データ列y, color='violet')"}
{"in": "ヒストグラムをダークスラテグレー色で描画する", "out": "plt.hist(データ列, color='darkslategray')"}
{"in": "ヒストグラムの色をミスティローズに設定する", "out": "plt.hist(データ列, color='mistyrose')"}
{"in": "データ列のノルムを揃える", "out": "sklearn.preprocessing.Normalizer(norm=\"l2\").fit_transform(データ列)"}
{"in": "折れ線グラフを赤い破線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed', color='r')"}
{"in": "横棒グラフをオーキッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='orchid')"}
{"in": "折れ線グラフの色をライトスチールブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='lightsteelblue')"}
{"in": "辞書をチェーンマップに変換する", "out": "collections.ChainMap(aDict)"}
{"in": "ヒストグラムの色をミントクリームに設定する", "out": "plt.hist(データ列, color='mintcream')"}
{"in": "データシリーズの曜日の名前", "out": "ds.dt.weekday_name"}
{"in": "option: マーカーを四角に変更する", "out": "marker = 's'"}
{"in": "レモンシフォン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lemonchiffon')"}
{"in": "option: グラフの色をライムに設定する", "out": "color = 'lime'"}
{"in": "option: オリーブ色を使う", "out": "color = 'olive'"}
{"in": "ライトゴールドロディイエロー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightgoldenrodyellow')"}
{"in": "ピーチパフ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='peachpuff')"}
{"in": "棒グラフをライトグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightgreen')"}
{"in": "横棒グラフをラベンダーブラッシュ色で描画する", "out": "plt.barh(データ列x, データ列y, color='lavenderblush')"}
{"in": "実数の正接の逆数", "out": "math.atan(x)"}
{"in": "棒グラフの色を赤にする", "out": "plt.bar(データ列x, データ列y, color='red')"}
{"in": "半透明の一点鎖線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot', alpha=0.5)"}
{"in": "文字列を部分文字列で二分する", "out": "s.partition(sub)"}
{"in": "グラフで使える色名の一覧", "out": "matplotlib.colors.cnames"}
{"in": "データフレームを10の位で丸める", "out": "df.round(-1)"}
{"in": "ミディアムスレートブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumslateblue')"}
{"in": "変数について数式の微分を行う", "out": "sympy.diff(e, z)"}
{"in": "ライトスチールブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightsteelblue')"}
{"in": "散布図の色をレモンシフォンにする", "out": "plt.scatter(データ列x, データ列y, color='lemonchiffon')"}
{"in": "散布図の色をライトコーラルにする", "out": "plt.scatter(データ列x, データ列y, color='lightcoral')"}
{"in": "折れ線グラフを青い破線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed', color='b')"}
{"in": "リストの末尾から要素をポップする", "out": "aList.pop()"}
{"in": "折れ線グラフに青い右三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='>', markerfacecolor='b')"}
{"in": "option: マーカーの色をサンディーブラウンにする", "out": "markerfacecolor = 'sandybrown'"}
{"in": "カウンタの項目を増やす", "out": "aCounter[element] += 1"}
{"in": "色付きの点線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted', color='#800080')"}
{"in": "横棒グラフの色をラベンダーブラッシュにする", "out": "plt.barh(データ列x, データ列y, color='lavenderblush')"}
{"in": "棒グラフの色を淡いピンク色にする", "out": "plt.bar(データ列x, データ列y, color='lightpink')"}
{"in": "棒グラフをライトグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightgray')"}
{"in": "リストの各要素を関数に適用した結果でソートする", "out": "sorted(aList, key=func)"}
{"in": "数式の平方根を求める", "out": "sympy.sqrt(e)"}
{"in": "ヒストグラムの色を黄色に設定する", "out": "plt.hist(データ列, color='yellow')"}
{"in": "横棒グラフをターコイズ色で描画する", "out": "plt.barh(データ列x, データ列y, color='turquoise')"}
{"in": "パールゴールデンロッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='palegoldenrod')"}
{"in": "日付データの日数", "out": "aDate.day"}
{"in": "散布図を茶色色で描画する", "out": "plt.scatter(データ列x, データ列y, color='brown')"}
{"in": "データフレームから", "out": "df.select_dtypes(型).columns"}
{"in": "二変数の最小値", "out": "min(x, y)"}
{"in": "散布図のダイアモンドマーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='k')"}
{"in": "option: モカシン色を使う", "out": "color = 'moccasin'"}
{"in": "データフレームのあるカラムの秒", "out": "df['列A'].dt.second"}
{"in": "折れ線グラフのバツマーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='x', markerfacecolor='#800080')"}
{"in": "サドルブラウン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='saddlebrown')"}
{"in": "ライム色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lime')"}
{"in": "option: マーカーの色をディープスカイブルーにする", "out": "markerfacecolor = 'deepskyblue'"}
{"in": "散布図をシーグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='seagreen')"}
{"in": "ベクトルの演算をする", "out": "import numpy as np"}
{"in": "モデルの残差を求める", "out": "目的変数 - model.predict(説明変数)"}
{"in": "option: シャルトリューズ色を使う", "out": "color = 'chartreuse'"}
{"in": "データフレームからカテゴリデータの列を抽出する", "out": "df.select_dtypes('object')"}
{"in": "ファイルをバイナリ書き込みできるようにオープンする]", "out": "open(filepath, mode='wb')"}
{"in": "クラス分類の正解率を求める", "out": "sklearn.metrics.accuracy_score(正解データ列, 予測データ列)"}
{"in": "横棒グラフをダークオーキッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkorchid')"}
{"in": "ピーチパフ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='peachpuff')"}
{"in": "データフレームの中に文字列があるか調べる", "out": "df.isin([value])"}
{"in": "キーが辞書上で定義済みか調べる", "out": "key in aDict"}
{"in": "散布図の色をパパイヤウィップにする", "out": "plt.scatter(データ列x, データ列y, color='papayawhip')"}
{"in": "折れ線グラフのマーカーを左三角にする", "out": "plt.plot(データ列x, データ列y, marker='<')"}
{"in": "折れ線グラフをダークシアグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkseagreen')"}
{"in": "グリッド線", "out": "plt.grid(linewidth=3.0)"}
{"in": "ヒストグラムの色をパールゴールデンロッドに設定する", "out": "plt.hist(データ列, color='palegoldenrod')"}
{"in": "データフレームの列の名前一覧で指定した列をドロップする", "out": "df.drop(columns, axis=1, inplace=True)"}
{"in": "ゲインズボロ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='gainsboro')"}
{"in": "スカイブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='skyblue')"}
{"in": "option: サーモン色を使う", "out": "color = 'salmon'"}
{"in": "棒グラフをインディアンレッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='indianred')"}
{"in": "フォーマットで列を日付データに変換する", "out": "pd.to_datetime(df['列A'], format='%Y-%m-%d')"}
{"in": "散布図を白くする", "out": "plt.scatter(データ列x, データ列y, color='w')"}
{"in": "データフレームから重複を残さず重複をドロップする", "out": "df.drop_duplicates(keep=False)"}
{"in": "折れ線グラフの色をオールドレースに設定する", "out": "plt.plot(データ列x, データ列y, color='oldlace')"}
{"in": "折れ線グラフをサンディーブラウン色で描画する", "out": "plt.plot(データ列x, データ列y, color='sandybrown')"}
{"in": "赤いダイアモンドマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='D', c='r')"}
{"in": "option: マーカーの色をビスクにする", "out": "markerfacecolor = 'bisque'"}
{"in": "データを平均と分散で標準化を行う", "out": "sklearn.preprocessing.StandardScaler().fit_transform(データ)"}
{"in": "折れ線グラフの色をペールグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='palegreen')"}
{"in": "データフレームの中である列に重複があれば、ドロップする", "out": "df.drop_duplicates(subset='列A', inplace=True)"}
{"in": "アヤメのデータセットをロードする", "out": "df = sns.load_dataset('iris')"}
{"in": "サドルブラウン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='saddlebrown')"}
{"in": "イテラブルのイミュータブルな集合", "out": "frozenset(iterable)"}
{"in": "option: マーカーの色をゴールドにする", "out": "markerfacecolor = 'gold'"}
{"in": "スラグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='slategray')"}
{"in": "インディアンレッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='indianred')"}
{"in": "文字列を文字リストに変換する", "out": "list(s)"}
{"in": "二つのカウンタの共通する要素", "out": "aCounter & aCounter2"}
{"in": "データフレームのカラムの歪度を求める", "out": "scipy.stats.skew(df['列A'], bias=False)"}
{"in": "半透明の実線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid', alpha=0.5)"}
{"in": "棒グラフの色をオーキッドにする", "out": "plt.bar(データ列x, データ列y, color='orchid')"}
{"in": "nとn2の商", "out": "n / n2"}
{"in": "文字列中の片仮名を平仮名に変換する", "out": "''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])"}
{"in": "option: グラフの色をダークシアグリーンに設定する", "out": "color = 'darkseagreen'"}
{"in": "二つの文字列を改行で区切ってプリントする", "out": "print(value, value2, sep='\\n')"}
{"in": "決定木の重要度を可視化する", "out": "plt.barh(X.columns, model.feature_importances_)"}
{"in": "プラム色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='plum')"}
{"in": "ヒストグラムをサドルブラウン色で描画する", "out": "plt.hist(データ列, color='saddlebrown')"}
{"in": "横棒グラフをパレットトルコイズ色で描画する", "out": "plt.barh(データ列x, データ列y, color='paleturquoise')"}
{"in": "ヒストグラムの色をミディアムオーキッドに設定する", "out": "plt.hist(データ列, color='mediumorchid')"}
{"in": "折れ線グラフをピンク色で描画する", "out": "plt.plot(データ列x, データ列y, color='pink')"}
{"in": "option: NaNは例外を投げる", "out": "nan_policy = 'raise'"}
{"in": "グラフの色を暗くする", "out": "sns.set(pallete='dark')"}
{"in": "横棒グラフをコーラル色で描画する", "out": "plt.barh(データ列x, データ列y, color='coral')"}
{"in": "辞書の値の一覧", "out": "aDict.values()"}
{"in": "集合をイミュータブルなセットに変換する", "out": "frozenset(aSet)"}
{"in": "option: パレットトルコイズ色を使う", "out": "color = 'paleturquoise'"}
{"in": "データ列をインポートする", "out": "import pandas as pd"}
{"in": "カデットブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='cadetblue')"}
{"in": "データフレームの選択したカラムが正規分布からどの程度、歪んでいるか見る", "out": "df[['列A', '列B']].kurt()"}
{"in": "横棒グラフの色をミッドナイトブルーにする", "out": "plt.barh(データ列x, データ列y, color='midnightblue')"}
{"in": "カテゴリデータ列をワン・ホットベクトル化する", "out": "sklearn.preprocessing.OneHotEncoder(sparse=False).fit_transform(データ列)"}
{"in": "既存の配列を元に全要素が1の配列", "out": "np.ones_like(aArray)"}
{"in": "文字列をバイト配列に変換する", "out": "bytearray(s)"}
{"in": "ゴールデンロッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='goldenrod')"}
{"in": "グラフのx軸とy軸の比率を等しくする", "out": "plt.axis('equals')"}
{"in": "option: マーカーの色をパールバイオレットレッドにする", "out": "markerfacecolor = 'palevioletred'"}
{"in": "option: グラフの色をミディアムバイオレットレッドに設定する", "out": "color = 'mediumvioletred'"}
{"in": "線形モデルの回帰変数", "out": "model.coef_"}
{"in": "棒グラフの色をシアンにする", "out": "plt.bar(データ列x, データ列y, color='cyan')"}
{"in": "折れ線グラフに黒い星マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='*', markerfacecolor='k')"}
{"in": "折れ線グラフに黒い左三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='<', markerfacecolor='k')"}
{"in": "文字列は全て十進数字か調べる", "out": "s.isdecimal()"}
{"in": "横棒グラフをライトシアン色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightcyan')"}
{"in": "ふたつの集合が集合と互いに素か調べる", "out": "aSet.isdisjoint(aSet2)"}
{"in": "ふたつの列からグループ化し、標準偏差を求める", "out": "df.groupby(['列A', '列B'], as_index=False).std()"}
{"in": "ふたつの集合の差集合", "out": "aSet.difference(aSet2)"}
{"in": "CSVファイルをn番目のカラムをインデックスとして読み込む", "out": "pd.read_csv('file.csv', index_col=n)"}
{"in": "フォーマットでデータ列を日付データに変換する", "out": "pd.to_datetime(ds, format='%Y-%m-%d')"}
{"in": "特異値分解を行う", "out": "model = sklearn.decomposition.TruncatedSVD(n_components=n)"}
{"in": "全要素を０で初期化した複素数型の行列", "out": "np.zeros(行数, 列数, dtype=bool)"}
{"in": "散布図の色をディムグレーにする", "out": "plt.scatter(データ列x, データ列y, color='dimgray')"}
{"in": "スクリプトファイルと同じディレクトリのファイルのパス", "out": "os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)"}
{"in": "nとn2の論理積", "out": "n & n2"}
{"in": "棒グラフをペールグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='palegreen')"}
{"in": "リストとリストについての散布図に黒い四角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='s', c='k')"}
{"in": "文字列を緑色でプリントできる文字列に変換する", "out": "f'\\033[32m{value}\\033[0m'"}
{"in": "本日が水曜日か調べる", "out": "datetime.datetime.today().weekday() == 2"}
{"in": "散布図の色をコーラルにする", "out": "plt.scatter(データ列x, データ列y, color='coral')"}
{"in": "レベッカパープル色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='rebeccapurple')"}
{"in": "インディゴ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='indigo')"}
{"in": "棒グラフをカデットブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='cadetblue')"}
{"in": "コマンドの第一引数を知る", "out": "sys.argv[1]"}
{"in": "n個の要素があるリスト", "out": "[element] * n"}
{"in": "アクアマリン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='aquamarine')"}
{"in": "文字列がタプルの要素か調べる", "out": "element in aTuple"}
{"in": "ロバストな線形回帰分析の準備をする", "out": "model = sklearn.linear_model.HuberRegressor()"}
{"in": "ライトゴールドロディイエロー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "ローングリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lawngreen')"}
{"in": "データフレームを表示するとき、n列までデータフレームを表示可能なようにする", "out": "pd.set_option('display.max_columns', n)"}
{"in": "option: サンディーブラウン色を使う", "out": "color = 'sandybrown'"}
{"in": "横棒グラフを描画する", "out": "plt.barh(ラベル列, データ列)"}
{"in": "横棒グラフの色をアンティークホワイトにする", "out": "plt.barh(データ列x, データ列y, color='antiquewhite')"}
{"in": "棒グラフの色をオレンジにする", "out": "plt.bar(データ列x, データ列y, color='orange')"}
{"in": "option: グリーン色を使う", "out": "color = 'green'"}
{"in": "文字列中に部分文字列がいくつか含まれるか調べる", "out": "s.count(sub)"}
{"in": "データフレームのカラムが正規分布に従うか仮説検定する", "out": "scipy.stats.shapiro(df['列A'])"}
{"in": "実行時の標準出力の出力先がターミナルか調べる", "out": "sys.stdout.isatty()"}
{"in": "横棒グラフの色をディープスカイブルーにする", "out": "plt.barh(データ列x, データ列y, color='deepskyblue')"}
{"in": "スカイブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='skyblue')"}
{"in": "リストを展開してプリントする", "out": "print(*aList)"}
{"in": "レベッカパープル色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='rebeccapurple')"}
{"in": "ダークグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkgreen')"}
{"in": "ダークシアン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkcyan')"}
{"in": "データフレームの中にある文字列の合計を数える", "out": "df.isin([value]).sum()"}
{"in": "散布図の色をミディアムパープルにする", "out": "plt.scatter(データ列x, データ列y, color='mediumpurple')"}
{"in": "option: マーカーの色をアリスブルーにする", "out": "markerfacecolor = 'aliceblue'"}
{"in": "リストをナンバリングする", "out": "enumerate(aList)"}
{"in": "棒グラフをライトブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightblue')"}
{"in": "貝殻色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='seashell')"}
{"in": "棒グラフの色をゴーストホワイトにする", "out": "plt.bar(データ列x, データ列y, color='ghostwhite')"}
{"in": "option: 改行コードをUNIXに設定する", "out": "newline = '\\n'"}
{"in": "実数の双曲線正弦", "out": "math.sinh(x)"}
{"in": "option: グラフの色をネイビーに設定する", "out": "color = 'navy'"}
{"in": "散布図の色をコーンズシルクにする", "out": "plt.scatter(データ列x, データ列y, color='cornsilk')"}
{"in": "ホットピンク色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='hotpink')"}
{"in": "日付時刻データを文字列でフォーマットする", "out": "aDatetime.strftime(\"%d/%m/%y\")"}
{"in": "貝殻色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='seashell')"}
{"in": "散布図をターコイズ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='turquoise')"}
{"in": "データフレームの列の名前を付け直す", "out": "df.rename(columns={'列A': '列a', '列B': '列b'})"}
{"in": "グリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='green')"}
{"in": "棒グラフの色をオリーブにする", "out": "plt.bar(データ列x, データ列y, color='olive')"}
{"in": "リストとリストについての散布図に黒い丸マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='o', c='k')"}
{"in": "折れ線グラフに赤い大バツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='X', markerfacecolor='r')"}
{"in": "折れ線グラフをアンティークホワイト色で描画する", "out": "plt.plot(データ列x, データ列y, color='antiquewhite')"}
{"in": "折れ線グラフのダイアモンドマーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='D', markerfacecolor='r')"}
{"in": "option: 貝殻色を使う", "out": "color = 'seashell'"}
{"in": "浮動小数点数の最小値", "out": "sys.float_info.min"}
{"in": "データフレームの指定したカラムの欠損値を最大値に設定する", "out": "df['列A'].fillna(df['列A'].max())"}
{"in": "棒グラフの色を黄色にする", "out": "plt.bar(データ列x, データ列y, color='yellow')"}
{"in": "ヒストグラムの色をオリーブに設定する", "out": "plt.hist(データ列, color='olive')"}
{"in": "折れ線グラフの下三角マーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='v', markerfacecolor='k')"}
{"in": "カテゴリで色分けして、データフレームをにバイオリン図で可視化する", "out": "sns.violinplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)"}
{"in": "ふたつの集合が共通の要素を持たないか調べる", "out": "aSet.isdisjoint(aSet2)"}
{"in": "配列と同じ大きさの空配列を作る", "out": "np.empty_like(aArray)"}
{"in": "option: 線の幅を3.0ポイントに設定する", "out": "linewidth = 3.0"}
{"in": "棒グラフをスノー色で描画する", "out": "plt.bar(データ列x, データ列y, color='snow')"}
{"in": "ふたつの集合が集合と交わりを持たないか調べる", "out": "aSet.isdisjoint(aSet2)"}
{"in": "文字列の先頭で正規表現にASCII限定としてマッチするか見る", "out": "re.match(pattern, s, flags=re.ASCI)"}
{"in": "二つの配列を列方向に連結する", "out": "np.concatenate([aArray, aArray2], axis=0)"}
{"in": "ミスティローズ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mistyrose')"}
{"in": "option: マーカーの色をミディアムバイオレットレッドにする", "out": "markerfacecolor = 'mediumvioletred'"}
{"in": "折れ線グラフの色をライムグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='limegreen')"}
{"in": "集合からエラーなく要素を取り除く", "out": "aSet.discard(element)"}
{"in": "データフレームを関数の値によってグループ化し、要約統計量を求める", "out": "df.groupby(関数).describe()"}
{"in": "リストとリストについての散布図に赤い星マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='*', c='r')"}
{"in": "両端キューのn番目に要素を挿入する", "out": "deq.insert(n, element)"}
{"in": "行列の値", "out": "aArray[行番号, 列番号]"}
{"in": "横棒グラフをダークグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkgray')"}
{"in": "ヒストグラムを紺色で描画する", "out": "plt.hist(データ列, color='darkblue')"}
{"in": "散布図に黒い右三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='k')"}
{"in": "棒グラフの色をインディゴにする", "out": "plt.bar(データ列x, データ列y, color='indigo')"}
{"in": "棒グラフをシエナ色で描画する", "out": "plt.bar(データ列x, データ列y, color='sienna')"}
{"in": "データシリーズの歪度", "out": "ds.kurt()"}
{"in": "option: グラフの色をダークオーキッドに設定する", "out": "color = 'darkorchid'"}
{"in": "リネン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='linen')"}
{"in": "タプルの末尾のn要素を取り除く", "out": "aTuple[:-n]"}
{"in": "ライトブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightblue')"}
{"in": "折れ線グラフをデピンク色で描画する", "out": "plt.plot(データ列x, データ列y, color='deeppink')"}
{"in": "データフレームをある列によって昇順に破壊的にソートする", "out": "df.sort_values(by='列A', ascending=True, inplace=True)"}
{"in": "折れ線グラフに青い四角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='s', markerfacecolor='b')"}
{"in": "データフレームの列をヒストグラムにする", "out": "plt.hist(df[column])"}
{"in": "散布図の色をカーキにする", "out": "plt.scatter(データ列x, データ列y, color='khaki')"}
{"in": "ダークグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkgray')"}
{"in": "リストの中の最大値", "out": "max(aList)"}
{"in": "n2がn以上、かつ、n3以下か調べる", "out": "n <= n2 and n2 <= n3"}
{"in": "横棒グラフをネイビー色で描画する", "out": "plt.barh(データ列x, データ列y, color='navy')"}
{"in": "棒グラフの色をフクシアにする", "out": "plt.bar(データ列x, データ列y, color='fuchsia')"}
{"in": "横棒グラフをダークサーモン色で描画する", "out": "plt.barh(データ列x, データ列y, color='darksalmon')"}
{"in": "ユニークな値を要素とする配列", "out": "np.unique(aArray)"}
{"in": "二つの文字列は同じか調べる", "out": "s == s2"}
{"in": "日付時刻データの秒数", "out": "aDatetime.second"}
{"in": "折れ線グラフの色をゲインズボロに設定する", "out": "plt.plot(データ列x, データ列y, color='gainsboro')"}
{"in": "option: 丸マーカーを使う", "out": "marker = 'o'"}
{"in": "横棒グラフを紺色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkblue')"}
{"in": "ガウス過程回帰モデルを作る", "out": "model = sklearn.gaussian_process.GaussianProcessRegressor()"}
{"in": "ある列の値がxより大きく、yより小さい行を抽出する", "out": "df[(x < df['列A']) & (df['列A'] < y)]"}
{"in": "option: グラフの色をダークスレートブルーに設定する", "out": "color = 'darkslateblue'"}
{"in": "option: オレンジレッド色を使う", "out": "color = 'orangered'"}
{"in": "ライトグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightgray')"}
{"in": "リストとリストについての散布図に黒いダイアモンドマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='D', c='k')"}
{"in": "縦軸の目盛を表示しない", "out": "plt.yticks([])"}
{"in": "日付時刻データをn日前に戻す", "out": "aDatetime - datetime.timedelta(days=n)"}
{"in": "ビスク色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='bisque')"}
{"in": "標準入力から1行だけ改行なしで読む", "out": "sys.stdin.readline().rstrip()"}
{"in": "JSONを使う", "out": "import json"}
{"in": "二つの文字列は等しくないか調べる", "out": "s != s2"}
{"in": "横棒グラフをダークマゼンタ色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkmagenta')"}
{"in": "散布図の色をブルーバイオレットにする", "out": "plt.scatter(データ列x, データ列y, color='blueviolet')"}
{"in": "シルバー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='silver')"}
{"in": "棒グラフの色を青紫にする", "out": "plt.bar(データ列x, データ列y, color='violet')"}
{"in": "折れ線グラフを耐火レンガ色で描画する", "out": "plt.plot(データ列x, データ列y, color='firebrick')"}
{"in": "散布図の右三角マーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='>', markersize=2.0)"}
{"in": "二つの変数を同じ値にする", "out": "x = y = n"}
{"in": "ヒストグラムの色をハニーデューに設定する", "out": "plt.hist(データ列, color='honeydew')"}
{"in": "option: マーカーの色を青緑にする", "out": "markerfacecolor = 'teal'"}
{"in": "ナバホホワイト色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='navajowhite')"}
{"in": "データフレームの選択したカラムを千の位で丸めて、整数型にする", "out": "df[['列A', '列B']].round(-3).astype(int)"}
{"in": "データフレームのカラムのトリム分散を求める", "out": "scipy.stats.tvar(df['列A'], limits=(下限, 上限), inclusive=(True, True))"}
{"in": "散布図に下三角マーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='v')"}
{"in": "実数の逆双曲線正接", "out": "math.atanh(x)"}
{"in": "文字列内にひとつでもアスキー文字が含まれるか調べる", "out": "any(c.isascii() for c in s)"}
{"in": "データフレームのカラムのケンドールの相関係数を求める", "out": "scipy.stats.kendalltau(df['列A'], df['列B'])"}
{"in": "ヒストグラムをダークオリーブグリーン色で描画する", "out": "plt.hist(データ列, color='darkolivegreen')"}
{"in": "散布図の色をオレンジレッドにする", "out": "plt.scatter(データ列x, データ列y, color='orangered')"}
{"in": "散布図の色をイエローグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='yellowgreen')"}
{"in": "日付データををn週間後に進める", "out": "aDate + datetime.timedelta(weeks=n)"}
{"in": "option: バイナリモードに設定する", "out": "mode = 'rb'"}
{"in": "ヒストグラムをミディアムスプリンググリーン色で描画する", "out": "plt.hist(データ列, color='mediumspringgreen')"}
{"in": "紺碧色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='azure')"}
{"in": "文字列中の平仮名を片仮名に変換する", "out": "''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])"}
{"in": "option: 整数型を使う", "out": "dtype = np.int"}
{"in": "スラグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='slategrey')"}
{"in": "配列のユニークな要素とその位置", "out": "u, indices = np.unique(aArray, return_index=True)"}
{"in": "整数nが配列のどれかか調べる", "out": "n in aArray"}
{"in": "棒グラフの色をデピンクにする", "out": "plt.bar(データ列x, データ列y, color='deeppink')"}
{"in": "エクセルファイルからデータフレームを読み込む", "out": "pd.read_excel('file.xlsx')"}
{"in": "ダークマゼンタ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkmagenta')"}
{"in": "JSON形式のバイト列を辞書に変換する", "out": "json.loads(b.decode('unicode-escape'))"}
{"in": "データフレームのあるカラムのタイムゾーンを日本に設定する", "out": "df['列A'].tz_convert('Asia/Tokyo')"}
{"in": "イテラブルを文字列リストに変換して、タブで連結する", "out": "'\\t'.join(map(str, iterable))"}
{"in": "データフレームの指定したカラムの要約統計量", "out": "df['列A'].describe()"}
{"in": "両端キューをタプルに変換する", "out": "tuple(deq)"}
{"in": "データフレームの指定したカラムの中にある文字列と文字列の合計を数える", "out": "df['列A'].isin([value, value2]).sum()"}
{"in": "option: グラフの色をライトブルーに設定する", "out": "color = 'lightblue'"}
{"in": "カウンタを少ない順に列挙する", "out": "aCounter.most_common()[::-1]"}
{"in": "星印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='*')"}
{"in": "数列の相関係数を求める", "out": "scipy.stats.pearsonr(数列, 数列2)"}
{"in": "ライトサーモン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightsalmon')"}
{"in": "データフレームのある列の値がx以下の行を抽出する", "out": "df[df['列A'] <= x]"}
{"in": "文字列を下線付きでプリントする", "out": "print(f'\\033[4m{value}\\033[0m')"}
{"in": "ダークオーキッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkorchid')"}
{"in": "試しに何か動かす", "out": "print('Hello World')"}
{"in": "option: グラフの種類を実線に設定する", "out": "linestyle = 'solid'"}
{"in": "部分的最小二乗回帰モデルを作る", "out": "model = sklearn.cross_decomposition.PLSRegression(n_components=10)"}
{"in": "ゴーストホワイト色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='ghostwhite')"}
{"in": "カウンタをリストに変換する", "out": "list(aCounter)"}
{"in": "横棒グラフの色をローングリーンにする", "out": "plt.barh(データ列x, データ列y, color='lawngreen')"}
{"in": "データシリーズの曜日が何日目か見る", "out": "ds.dt.dayofweek"}
{"in": "切片なしの線形回帰モデルを作る", "out": "model = sklearn.linear_model.LinearRegression(fit_intercept=False)"}
{"in": "青い棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='b')"}
{"in": "棒グラフの色をスカイブルーにする", "out": "plt.bar(データ列x, データ列y, color='skyblue')"}
{"in": "日付を使う", "out": "import datetime"}
{"in": "データフレームの中の欠損値の合計を数える", "out": "df.isna().sum()"}
{"in": "option: グラフの色をミッドナイトブルーに設定する", "out": "color = 'midnightblue'"}
{"in": "エクセルファイルから複数のシートを指定してデータフレームとして読み込む", "out": "pd.read_excel('file.xlsx', sheet_name=[0, 1])"}
{"in": "実数のn乗", "out": "x ** n"}
{"in": "JSONファイルのファイル入力を読み込んで、dataとする", "out": "data = json.load(fin)"}
{"in": "折れ線グラフに青いダイアモンドマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='D', markerfacecolor='b')"}
{"in": "多次元データを多次元尺度構成法で濃く次元に次元削減する", "out": "sklearn.manifold.MSD(n_components=二).fit_transform(多次元データ)"}
{"in": "三つの文字列を順にプリントする", "out": "print(value, value2, value3)"}
{"in": "変数名をキーとして、辞書", "out": "dict(name=element)"}
{"in": "ピーチパフ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='peachpuff')"}
{"in": "日付時刻データからn秒分、減算する", "out": "aDatetime - datetime.timedelta(seconds=n)"}
{"in": "折れ線グラフをダークゴールデンロッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "データフレームのある列の値がxに等しい行を抽出する", "out": "df[df['列A'] == x]"}
{"in": "主成分分析を行う", "out": "model = sklearn.decomposition.PCA(n_components=n)"}
{"in": "マゼンタ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='magenta')"}
{"in": "option: マーカーの色をオレンジにする", "out": "markerfacecolor = 'orange'"}
{"in": "データフレームの選択したカラムを百の位で丸める", "out": "df[['列A', '列B']].round(-2)"}
{"in": "折れ線グラフの色を耐火レンガに設定する", "out": "plt.plot(データ列x, データ列y, color='firebrick')"}
{"in": "散布図をペルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='peru')"}
{"in": "白いグリッド線を引く", "out": "plt.grid(color='w')"}
{"in": "レベッカパープル色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='rebeccapurple')"}
{"in": "実数の仮数", "out": "math.frexp(x)[0]"}
{"in": "棒グラフをフクシア色で描画する", "out": "plt.bar(データ列x, データ列y, color='fuchsia')"}
{"in": "折れ線グラフの色をマゼンタに設定する", "out": "plt.plot(データ列x, データ列y, color='magenta')"}
{"in": "データフレームをある列によってソートして、NaNを先頭にする", "out": "df.sort_values(by='列A', na_position='first')"}
{"in": "文字列中にひとつでも非大文字が含まれるか調べる", "out": "any(not c.isupper() for c in s)"}
{"in": "散布図に黒いポイントマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='.', c='k')"}
{"in": "タプルを引数として展開して表示する", "out": "print(*aTuple, sep=',')"}
{"in": "anemptystring", "out": "''"}
{"in": "散布図に赤い星マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='*', c='r')"}
{"in": "JSONL形式のファイルからデータフレームを読み込む", "out": "pd.read_json(filename, orient='records', lines=True)"}
{"in": "ホットピンク色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='hotpink')"}
{"in": "棒グラフの色をフローラルホワイトにする", "out": "plt.bar(データ列x, データ列y, color='floralwhite')"}
{"in": "option: マーカーの色をオリベドラブにする", "out": "markerfacecolor = 'olivedrab'"}
{"in": "データフレームの選択したカラムの分散", "out": "df[['列A', '列B']].var()"}
{"in": "棒グラフをピンク色で描画する", "out": "plt.bar(データ列x, データ列y, color='pink')"}
{"in": "xを文字列に変換する", "out": "str(x)"}
{"in": "横棒グラフをディムグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='dimgray')"}
{"in": "データシリーズの値を正規表現patternでまとめてreplに置き換える", "out": "ds.replace(pattern, repl, regex=True)"}
{"in": "ヒストグラムをアクアマリン色で描画する", "out": "plt.hist(データ列, color='aquamarine')"}
{"in": "コレクションを使う", "out": "import collections"}
{"in": "option: グラフの色をサドルブラウンに設定する", "out": "color = 'saddlebrown'"}
{"in": "0から始まる無限数列", "out": "itertools.count()"}
{"in": "両端キュー中の要素の数を数える", "out": "deq.count(element)"}
{"in": "日付データにn日分、加算する", "out": "aDate + datetime.timedelta(days=n)"}
{"in": "ホワイトスモーク色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='whitesmoke')"}
{"in": "データフレームのある列を配列として抽出する", "out": "df['列A'].values"}
{"in": "option: 説明変数を事前に正規化する", "out": "normalize = True"}
{"in": "バリーウッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='burlywood')"}
{"in": "散布図の色をマゼンタにする", "out": "plt.scatter(データ列x, データ列y, color='magenta')"}
{"in": "ロイヤルブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='royalblue')"}
{"in": "ヒストグラムの色をマゼンタに設定する", "out": "plt.hist(データ列, color='magenta')"}
{"in": "データフレームの選択したカラムの第一四分位数", "out": "df[['列A', '列B']].quantile(0.25)"}
{"in": "option: マーカーの色をマルーンにする", "out": "markerfacecolor = 'maroon'"}
{"in": "横棒グラフをクリムゾン色で描画する", "out": "plt.barh(データ列x, データ列y, color='crimson')"}
{"in": "データフレームの指定したカラムの欠損値を直前の値に設定する", "out": "df['列A'].fillna(method='ffill')"}
{"in": "行列の逆行列", "out": "np.linalg.inv(aArray)"}
{"in": "グリッド線を赤くする", "out": "plt.grid(color='r')"}
{"in": "横棒グラフをペルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='peru')"}
{"in": "散布図のバツマーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='x', markeredgewidth=2.5)"}
{"in": "散布図を貝殻色で描画する", "out": "plt.scatter(データ列x, データ列y, color='seashell')"}
{"in": "データフレームの中の列を四分位数ごとにビン分割する", "out": "pd.qcut(df[col], 4)"}
{"in": "文字列の接頭辞から部分文字列を取り除く", "out": "s.removeprefix(sub)"}
{"in": "横棒グラフをライトゴールドロディイエロー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "option: マーカーの色をモカシンにする", "out": "markerfacecolor = 'moccasin'"}
{"in": "numpyを使う", "out": "import numpy as np"}
{"in": "クラスのサブクラスか調べる", "out": "issubclass(サブクラス, クラス)"}
{"in": "文字列を右寄せにする", "out": "s.rjust(文字列幅)"}
{"in": "グリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='green')"}
{"in": "ヒストグラムをレベッカパープル色で描画する", "out": "plt.hist(データ列, color='rebeccapurple')"}
{"in": "ミントクリーム色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mintcream')"}
{"in": "パープル色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='purple')"}
{"in": "散布図をライトグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightgrey')"}
{"in": "散布図の色をミディアムシアグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='mediumseagreen')"}
{"in": "データフレームの二つのカラムを並べて箱ひげ図で可視化する", "out": "plt.boxplot([df['カラム'], df['カラム']])"}
{"in": "折れ線グラフをサドルブラウン色で描画する", "out": "plt.plot(データ列x, データ列y, color='saddlebrown')"}
{"in": "散布図をライトイエロー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightyellow')"}
{"in": "折れ線グラフの下三角マーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='v', markeredgewidth=2.5)"}
{"in": "辞書をソートしてJSON形式の文字列に変換する", "out": "json.dumps(aDict, ensure_ascii=False, sort_keys=True)"}
{"in": "耐火レンガ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='firebrick')"}
{"in": "棒グラフをダークゴールデンロッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "option: 箱ひげ図を水平方向にする", "out": "vert = False"}
{"in": "散布図の色をライムグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='limegreen')"}
{"in": "集合が空か調べる", "out": "len(aSet) == 0"}
{"in": "ブランチドアーモンド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='blanchedalmond')"}
{"in": "横棒グラフの色をモカシンにする", "out": "plt.barh(データ列x, データ列y, color='moccasin')"}
{"in": "棒グラフをクリムゾン色で描画する", "out": "plt.bar(データ列x, データ列y, color='crimson')"}
{"in": "option: マーカーの色をサーモンにする", "out": "markerfacecolor = 'salmon'"}
{"in": "データフレームの中の列を中央値でビン分割する", "out": "pd.qcut(df[col], 2)"}
{"in": "ディムグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='dimgray')"}
{"in": "ダーク・スラテグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkslategrey')"}
{"in": "文字列が正規表現にマッチさせる", "out": "re.match(pattern, s)"}
{"in": "散布図をパープル色で描画する", "out": "plt.scatter(データ列x, データ列y, color='purple')"}
{"in": "散布図を淡いピンク色色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightpink')"}
{"in": "折れ線グラフをベージュ色で描画する", "out": "plt.plot(データ列x, データ列y, color='beige')"}
{"in": "プラム色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='plum')"}
{"in": "option: 決定木の深さを制限する", "out": "maxdepth = n"}
{"in": "ミントクリーム色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mintcream')"}
{"in": "日付データを文字列でフォーマットして文字列に変換する", "out": "aDate.strftime(\"%d/%m/%y\")"}
{"in": "横棒グラフの色をチョコレートにする", "out": "plt.barh(データ列x, データ列y, color='chocolate')"}
{"in": "option: グラフの色を小麦色に設定する", "out": "color = 'wheat'"}
{"in": "option: マーカーの色をロージーブラウンにする", "out": "markerfacecolor = 'rosybrown'"}
{"in": "フィシャー流の尖度を求める", "out": "scipy.stats.kurtosis(配列, fisher=True, bias=False)"}
{"in": "数式を展開する", "out": "sympy.expand(e)"}
{"in": "option: ポイントマーカーを使う", "out": "marker = '.'"}
{"in": "日付データにn秒分、加算する", "out": "aDate + datetime.timedelta(seconds=n)"}
{"in": "散布図の三角マーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='#800080')"}
{"in": "グラフの用途を論文に設定する", "out": "sns.set(context='paper')"}
{"in": "モデルを当てはめる", "out": "model.fit(説明変数, 目的変数)"}
{"in": "横棒グラフをグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='grey')"}
{"in": "既存のファイルを文字列の示すエンコーディングで追加できるようにオープンする]", "out": "open(filepath, mode='a', encoding=s)"}
{"in": "既存のファイルを文字コードtextで追加できるようにオープンする]", "out": "open(filepath, mode='a', encoding=text)"}
{"in": "散布図に黒い下三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='v', c='k')"}
{"in": "散布図の色を赤にする", "out": "plt.scatter(データ列x, データ列y, color='red')"}
{"in": "実数の余弦", "out": "math.cos(x)"}
{"in": "option: グラフの色をダークグリーンに設定する", "out": "color = 'darkgreen'"}
{"in": "モカシン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='moccasin')"}
{"in": "グリッド線を青くする", "out": "plt.grid(color='b')"}
{"in": "パールバイオレットレッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='palevioletred')"}
{"in": "茶色色のヒストグラムを描画する", "out": "plt.hist(データ列, color='brown')"}
{"in": "ファイルを絶対パスに変換する", "out": "os.path.abspath(filepath)"}
{"in": "ヒストグラムをスラグレー色で描画する", "out": "plt.hist(データ列, color='slategray')"}
{"in": "横棒グラフの色をライトスレイグレーにする", "out": "plt.barh(データ列x, データ列y, color='lightslategray')"}
{"in": "散布図の色をミディアムブルーにする", "out": "plt.scatter(データ列x, データ列y, color='mediumblue')"}
{"in": "ダークマゼンタ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkmagenta')"}
{"in": "ブラック色のヒストグラムを描画する", "out": "plt.hist(データ列, color='black')"}
{"in": "折れ線グラフをダークシアン色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkcyan')"}
{"in": "横棒グラフを赤色で描画する", "out": "plt.barh(データ列x, データ列y, color='red')"}
{"in": "横棒グラフの色をダークグレーにする", "out": "plt.barh(データ列x, データ列y, color='darkgray')"}
{"in": "文字列をASCII限定として正規表現で分割する", "out": "re.split(pattern, s, flags=re.ASCI)"}
{"in": "本日の日付時刻", "out": "datetime.datetime.today()"}
{"in": "配列をリストを境界値としてビン分割する", "out": "pd.cut(aArray, aList)"}
{"in": "リストのn番目に文字列を挿入する", "out": "aList.insert(n, element)"}
{"in": "データフレームの指定したカラムを千の位で丸めて、整数型にする", "out": "df['列A'].round(-3).astype(int)"}
{"in": "折れ線グラフに大バツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='X')"}
{"in": "option: レベッカパープル色を使う", "out": "color = 'rebeccapurple'"}
{"in": "散布図に四角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='s')"}
{"in": "散布図の色を暗い赤にする", "out": "plt.scatter(データ列x, データ列y, color='darkred')"}
{"in": "データフレームの選択したカラムの中の欠損値の合計を数える", "out": "df[['列A', '列B']].isna().sum()"}
{"in": "横棒グラフをグリーンイエロー色で描画する", "out": "plt.barh(データ列x, データ列y, color='greenyellow')"}
{"in": "散布図の色をミディアムターコイズにする", "out": "plt.scatter(データ列x, データ列y, color='mediumturquoise')"}
{"in": "データフレームの散布図をグループ化して縦横に並べる", "out": "sns.relplot(data=df, x='列名', y='列名', hue='カテゴリ列', col='カテゴリ列', row='カテゴリ列')"}
{"in": "散布図をグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='green')"}
{"in": "散布図をスチールブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='steelblue')"}
{"in": "ヒストグラムをダークスレートブルー色で描画する", "out": "plt.hist(データ列, color='darkslateblue')"}
{"in": "option: マーカーの色をライトグリーンにする", "out": "markerfacecolor = 'lightseagreen'"}
{"in": "棒グラフの色をグレーにする", "out": "plt.bar(データ列x, データ列y, color='gray')"}
{"in": "option: 淡いピンク色色を使う", "out": "color = 'lightpink'"}
{"in": "横棒グラフの色を黄色にする", "out": "plt.barh(データ列x, データ列y, color='yellow')"}
{"in": "データフレームの平均と信頼区間を描画する", "out": "sns.pointplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)"}
{"in": "実数の逆正接", "out": "math.atan(x)"}
{"in": "棒グラフの色をバリーウッドにする", "out": "plt.bar(データ列x, データ列y, color='burlywood')"}
{"in": "折れ線グラフの色をミディアムブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumblue')"}
{"in": "行列のムーア・ペンローズの擬似逆行列", "out": "np.linalg.pinv(aArray)"}
{"in": "タプルの末尾からn番目以前の部分を取り出す", "out": "aTuple[:-n]"}
{"in": "ラベンダーブラッシュ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lavenderblush')"}
{"in": "横棒グラフの色をスノーにする", "out": "plt.barh(データ列x, データ列y, color='snow')"}
{"in": "ライム色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lime')"}
{"in": "折れ線グラフの色をオーキッドに設定する", "out": "plt.plot(データ列x, データ列y, color='orchid')"}
{"in": "グラフ中で日本語を表示できるようにする", "out": "sns.set(font='IPAexGothic')"}
{"in": "ダークバイオレット色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkviolet')"}
{"in": "xの小数点以下'1'桁までをプリントする", "out": "print(':.1f'.format(x))"}
{"in": "イエローグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='yellowgreen')"}
{"in": "option: グラフの色をレモンシフォンに設定する", "out": "color = 'lemonchiffon'"}
{"in": "異なる列をキーとして二つのデータフレームを内部ジョインする", "out": "pd.merge(df, df2, left_on='列A', right_on='列B', how='inner')"}
{"in": "option: グラフの色をアクアに設定する", "out": "color = 'aqua'"}
{"in": "要素が全て1の配列", "out": "np.ones(要素数, dtype=np.int)"}
{"in": "xとyの商と余りを同時に求める", "out": "divmod(x, y)"}
{"in": "文字列の終了位置より前に部分文字列が含まれないか調べる", "out": "s.find(sub, 0, end) == -1"}
{"in": "散布図に丸マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='o')"}
{"in": "棒グラフをライトサーモン色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightsalmon')"}
{"in": "散布図の色をダークシアンにする", "out": "plt.scatter(データ列x, データ列y, color='darkcyan')"}
{"in": "データフレームの欠損値を直後の値に設定する", "out": "df.fillna(method='bfill')"}
{"in": "レモンシフォン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lemonchiffon')"}
{"in": "option: 右三角マーカーを描画する", "out": "marker = '>'"}
{"in": "ファイルを読み込みモードでオープンして]、fとする", "out": "f = open(filepath, mode='r')"}
{"in": "データ列の偏りを平方根変換する", "out": "np.sqrt(データ列)"}
{"in": "データフレームに重複があるか見る", "out": "df.duplicated()"}
{"in": "データフレームの選択したカラムを千の位で丸める", "out": "df[['列A', '列B']].round(-3)"}
{"in": "option: グラフの色をスカイブルーに設定する", "out": "color = 'skyblue'"}
{"in": "マルーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='maroon')"}
{"in": "文字列の接尾辞から部分文字列を取り除く", "out": "s.removesuffix(sub)"}
{"in": "本日の年数", "out": "datetime.datetime.today().year"}
{"in": "両端キューをデキューする", "out": "deq.popleft()"}
{"in": "option: マーカーの色をダークカーキにする", "out": "markerfacecolor = 'darkkhaki'"}
{"in": "数式を変数について微分する", "out": "sympy.diff(e, z)"}
{"in": "データフレームの指定したカラムを百の位で丸める", "out": "df['列A'].round(-2)"}
{"in": "ヒストグラムをビスク色で描画する", "out": "plt.hist(データ列, color='bisque')"}
{"in": "折れ線グラフを貝殻色で描画する", "out": "plt.plot(データ列x, データ列y, color='seashell')"}
{"in": "散布図の丸マーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='k')"}
{"in": "本日が何曜日か知る", "out": "datetime.datetime.today().weekday()"}
{"in": "散布図の丸マーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='#800080')"}
{"in": "データシリーズを丸める", "out": "ds.round()"}
{"in": "棒グラフをチョコレート色で描画する", "out": "plt.bar(データ列x, データ列y, color='chocolate')"}
{"in": "散布図をフクシア色で描画する", "out": "plt.scatter(データ列x, データ列y, color='fuchsia')"}
{"in": "option: マーカーの色を青にする", "out": "markerfacecolor = 'blue'"}
{"in": "黒いヒストグラムを描画する", "out": "plt.hist(データ列, color='k')"}
{"in": "散布図のマーカーをポイントにする", "out": "plt.scatter(データ列x, データ列y, marker='.')"}
{"in": "option: マーカーの色をインディアンレッドにする", "out": "markerfacecolor = 'indianred'"}
{"in": "アルファベットの小文字列", "out": "string.ascii_lowercase"}
{"in": "横棒グラフの色をディムグレーにする", "out": "plt.barh(データ列x, データ列y, color='dimgray')"}
{"in": "本日を文字列でフォーマットする", "out": "datetime.datetime.today().strftime(\"%d/%m/%y\")"}
{"in": "横棒グラフの色をフクシアにする", "out": "plt.barh(データ列x, データ列y, color='fuchsia')"}
{"in": "ディムグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='dimgrey')"}
{"in": "折れ線グラフに赤い右三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='>', markerfacecolor='r')"}
{"in": "ミディアムシアグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumseagreen')"}
{"in": "データ列をインポートする", "out": "import pandas as pd"}
{"in": "ヒストグラムの色をクリムゾンに設定する", "out": "plt.hist(データ列, color='crimson')"}
{"in": "事前にASCII限定として正規表現をコンパイルする", "out": "re.compile(pattern, flag=re.ASCI)"}
{"in": "データフレームの選択したカラムの欠損値を直前の値で埋める", "out": "df[['列A', '列B']].fillna(method='ffill')"}
{"in": "折れ線グラフの透明度を設定する", "out": "plt.plot(データ列x, データ列y, alpha=0.5)"}
{"in": "部分文字列を範囲を指定して探す", "out": "s.find(sub, start, end)"}
{"in": "折れ線グラフのポイントマーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='.', markerfacecolor='b')"}
{"in": "横棒グラフをトマト色で描画する", "out": "plt.barh(データ列x, データ列y, color='tomato')"}
{"in": "棒グラフの色をターコイズにする", "out": "plt.bar(データ列x, データ列y, color='turquoise')"}
{"in": "散布図に赤い三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='^', c='r')"}
{"in": "ディレクトリをPythonパスに加える", "out": "sys.path.append(os.path.join(os.path.dirname(__file__), dir))"}
{"in": "文字列を走査し、正規表現に複数行対応としてマッチするか見る", "out": "re.search(pattern, s, flags=re.MULTILINE)"}
{"in": "カウンタをリセットする", "out": "aCounter.clear()"}
{"in": "パパイヤウィップ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='papayawhip')"}
{"in": "棒グラフをミディアムパープル色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumpurple')"}
{"in": "棒グラフの色をトマトにする", "out": "plt.bar(データ列x, データ列y, color='tomato')"}
{"in": "棒グラフの色をスレートブルーにする", "out": "plt.bar(データ列x, データ列y, color='slateblue')"}
{"in": "日付時刻データにn日分、加算する", "out": "aDatetime + datetime.timedelta(days=n)"}
{"in": "option: マーカーの色をライムにする", "out": "markerfacecolor = 'lime'"}
{"in": "nがn2以下、または、n3以上か調べる", "out": "n <= n2 or n >= n3"}
{"in": "予測値とデータの離れ具合を可視化する", "out": "sns.residplot(x='列名', y='列名', data=df)"}
{"in": "ヒストグラムをイエローグリーン色で描画する", "out": "plt.hist(データ列, color='yellowgreen')"}
{"in": "散布図のポイントマーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='b')"}
{"in": "散布図の右三角マーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='b')"}
{"in": "データシリーズの中に文字列があるか調べる", "out": "ds.isin([value])"}
{"in": "コーラル色のヒストグラムを描画する", "out": "plt.hist(データ列, color='coral')"}
{"in": "option: マーカーの色をダークグリーンにする", "out": "markerfacecolor = 'darkgreen'"}
{"in": "データフレームの指定したカラムの空文字をドロップする", "out": "df['列A'].replace('', np.nan).dropna()"}
{"in": "散布図をブルーバイオレット色で描画する", "out": "plt.scatter(データ列x, データ列y, color='blueviolet')"}
{"in": "折れ線グラフをミディアムアクアマリン色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "散布図に青い星マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='b')"}
{"in": "外れ値を除いた配列の算術平均を求める", "out": "scipy.stats.tmean(配列, limits=(下限, 上限), inclusive=(True, True))"}
{"in": "散布図の色をアンティークホワイトにする", "out": "plt.scatter(データ列x, データ列y, color='antiquewhite')"}
{"in": "nが-9以上、9以下か調べる", "out": "-9 <= n <= 9"}
{"in": "ヒストグラムをインディゴ色で描画する", "out": "plt.hist(データ列, color='indigo')"}
{"in": "カウンタを低頻出方から列挙する", "out": "aCounter.most_common()[::-1]"}
{"in": "データフレームのある列を配列に変換する", "out": "df['列A'].values"}
{"in": "ある列の文字列が部分文字列で終わる行を抽出する", "out": "df[df['列A'].str.endswith(部分文字列)]"}
{"in": "散布図の色をベージュにする", "out": "plt.scatter(データ列x, データ列y, color='beige')"}
{"in": "サンディーブラウン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='sandybrown')"}
{"in": "ヒストグラムをライトコーラル色で描画する", "out": "plt.hist(データ列, color='lightcoral')"}
{"in": "リストが空か調べる", "out": "len(aList) == 0"}
{"in": "option: マーカーの色をシーグリーンにする", "out": "markerfacecolor = 'seagreen'"}
{"in": "ベージュ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='beige')"}
{"in": "折れ線グラフをダークオーキッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkorchid')"}
{"in": "オプションで、ファイルを使う", "out": "file = sys.open(filename, 'w')"}
{"in": "最後の列を除いたデータフレーム", "out": "df[df.columns[:-1]]"}
{"in": "ヒストグラムを青緑色で描画する", "out": "plt.hist(データ列, color='teal')"}
{"in": "option: リネン色を使う", "out": "color = 'linen'"}
{"in": "オブジェクトは集合クラスか調べる", "out": "isinstance(obj, set)"}
{"in": "ある列の文字列が正規表現文字列にマッチしない行を抽出する", "out": "df[~df['列A'].str.match(正規表現)]"}
{"in": "折れ線グラフの色をシーグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='seagreen')"}
{"in": "勾配ブースティング回帰木を作る", "out": "model = sklearn.ensemble.GradientBoostingRegressor()"}
{"in": "ファイルからバイナリストリームをオープンして]、fとする", "out": "f = open(filepath, mode='rb')"}
{"in": "文字列中の全角数字を半角数字に変換する", "out": "s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))"}
{"in": "ゴールデンロッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='goldenrod')"}
{"in": "棒グラフの色をパレットトルコイズにする", "out": "plt.bar(データ列x, データ列y, color='paleturquoise')"}
{"in": "空の辞書", "out": "{}"}
{"in": "散布図の四角マーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='k')"}
{"in": "棒グラフをタン色で描画する", "out": "plt.bar(データ列x, データ列y, color='tan')"}
{"in": "ヒストグラムの色を青紫に設定する", "out": "plt.hist(データ列, color='violet')"}
{"in": "散布図をモカシン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='moccasin')"}
{"in": "ダークグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkgray')"}
{"in": "本日をタプルに変換する", "out": "datetime.datetime.today().timetuple()"}
{"in": "棒グラフの色をレモンシフォンにする", "out": "plt.bar(データ列x, データ列y, color='lemonchiffon')"}
{"in": "ヒストグラムの色をシアンに設定する", "out": "plt.hist(データ列, color='cyan')"}
{"in": "青緑色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='teal')"}
{"in": "データフレームの散布図にロジスティック回帰を加える", "out": "sns.regplot(x='列名', y='列名', data=df, logistic=True)"}
{"in": "ファイルを書き込みモードでオープンする]", "out": "open(filepath, mode='w')"}
{"in": "データを四分位点で標準化する", "out": "sklearn.preprocessing.RobustScaler().fit_transform(データ)"}
{"in": "トマト色のヒストグラムを描画する", "out": "plt.hist(データ列, color='tomato')"}
{"in": "横棒グラフをパパイヤウィップ色で描画する", "out": "plt.barh(データ列x, データ列y, color='papayawhip')"}
{"in": "アリスブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='aliceblue')"}
{"in": "データフレームを百の位で丸めて、整数型にする", "out": "df.round(-2).astype(int)"}
{"in": "リストの要素を昇順にソートする", "out": "sorted(aList, reverse=True)"}
{"in": "データフレームの空文字をドロップする", "out": "df.replace('', np.nan).dropna()"}
{"in": "日付時刻データを文字列でフォーマットして文字列に変換する", "out": "aDatetime.strftime(\"%d/%m/%y\")"}
{"in": "折れ線グラフに黒いバツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='x', markerfacecolor='k')"}
{"in": "散布図に下三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='v')"}
{"in": "option: グラフの色をダークマゼンタに設定する", "out": "color = 'darkmagenta'"}
{"in": "散布図を耐火レンガ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='firebrick')"}
{"in": "散布図にrgbの左三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='<', c=rgb)"}
{"in": "CSVファイルを読み込む", "out": "pd.read_csv('file.csv', sep=',')"}
{"in": "数式の微分を求める", "out": "sympy.diff(e)"}
{"in": "データフレームの選択したカラムの欠損値を最大値に設定する", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].max())"}
{"in": "横棒グラフの色をライトイエローにする", "out": "plt.barh(データ列x, データ列y, color='lightyellow')"}
{"in": "データフレームから型リストで指定したデータ型の列を除外する", "out": "df.select_dtypes(exclude=typeList)"}
{"in": "折れ線グラフをライトスレイグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightslategrey')"}
{"in": "折れ線グラフに黒い三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='^', markerfacecolor='k')"}
{"in": "イテラブルをダミー変数に変換する", "out": "pd.get_dummies(iterable)"}
{"in": "等間隔の配列を作る＼", "out": "np.arange(開始値, 終了値, 等差)"}
{"in": "ダークグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkgreen')"}
{"in": "棒グラフをディムグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='dimgrey')"}
{"in": "グラフの見栄えを綺麗にする", "out": "import seaborn as sns"}
{"in": "正規表現にマッチした文字列を新しい文字列で置き換える", "out": "re.sub(pattern, newsub, s)"}
{"in": "ダークゴールデンロッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "データフレームを各列毎にグループ化して、文字列というグループの個数を求める", "out": "df.groupby(column).size()[s]"}
{"in": "散布図の色をスラグレーにする", "out": "plt.scatter(データ列x, データ列y, color='slategrey')"}
{"in": "option: 小麦色色を使う", "out": "color = 'wheat'"}
{"in": "ヒストグラムを上限から下限までの範囲で描画する", "out": "plt.hist(データ列, range=(start, end))"}
{"in": "紺碧色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='azure')"}
{"in": "折れ線グラフをパレットトルコイズ色で描画する", "out": "plt.plot(データ列x, データ列y, color='paleturquoise')"}
{"in": "option: ローングリーン色を使う", "out": "color = 'lawngreen'"}
{"in": "横棒グラフの色をマルーンにする", "out": "plt.barh(データ列x, データ列y, color='maroon')"}
{"in": "小麦色色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='wheat')"}
{"in": "ファイルを読み込みできるようにオープンする]", "out": "open(filepath, mode='r')"}
{"in": "ガンマ関数の値", "out": "math.gamma(x)"}
{"in": "文字列の出力を改行なしに行う", "out": "print(value, end='')"}
{"in": "折れ線グラフの星マーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='*', markerfacecolor='k')"}
{"in": "アイボリー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='ivory')"}
{"in": "散布図の色をデピンクにする", "out": "plt.scatter(データ列x, データ列y, color='deeppink')"}
{"in": "棒グラフの色をダークグリーンにする", "out": "plt.bar(データ列x, データ列y, color='darkgreen')"}
{"in": "折れ線グラフをライトスカイブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightskyblue')"}
{"in": "ライムグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='limegreen')"}
{"in": "グリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='green')"}
{"in": "ヒストグラムの色をフローラルホワイトに設定する", "out": "plt.hist(データ列, color='floralwhite')"}
{"in": "棒グラフの色をラベンダーブラッシュにする", "out": "plt.bar(データ列x, データ列y, color='lavenderblush')"}
{"in": "文字列をトリムする", "out": "s.strip()"}
{"in": "リストとリストについての散布図にrgbの星マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='*', c=rgb)"}
{"in": "option: 左三角マーカーを描画する", "out": "marker = '<'"}
{"in": "ラベンダー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lavender')"}
{"in": "両端キューが空でないか調べる", "out": "len(deq) != 0"}
{"in": "データフレームの列からユニークな要素を抽出し、リスト化する", "out": "df[col].unique().tolist()"}
{"in": "全要素を初期値で初期化した行列", "out": "np.full((行数, 列数), 初期値, dtype=np.int)"}
{"in": "リストの先頭を取り除く", "out": "aList[1:]"}
{"in": "ヒストグラムをクリムゾン色で描画する", "out": "plt.hist(データ列, color='crimson')"}
{"in": "nからn2までの整数列", "out": "list(range(n, n2+1))"}
{"in": "散布図に赤い右三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='>', c='r')"}
{"in": "nが何桁か", "out": "len(str(n))"}
{"in": "棒グラフの色をグリーンにする", "out": "plt.bar(データ列x, データ列y, color='green')"}
{"in": "リストとリストについての散布図にダイアモンドマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='D')"}
{"in": "option: 改行しない", "out": "end = ''"}
{"in": "散布図をミスティローズ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mistyrose')"}
{"in": "ミントクリーム色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mintcream')"}
{"in": "データフレームを二つの列の値によってグループ化して、列挙する", "out": "[(name, group_df) for name, group_df in df.groupby(['列A', '列B'])]"}
{"in": "オールドレース色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='oldlace')"}
{"in": "折れ線グラフをゲインズボロ色で描画する", "out": "plt.plot(データ列x, データ列y, color='gainsboro')"}
{"in": "黒い三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='^', c='k')"}
{"in": "棒グラフをアリスブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='aliceblue')"}
{"in": "グリッド線", "out": "plt.grid(linewidth=3.0)"}
{"in": "タプルをミュータブルにする", "out": "list(aTuple)"}
{"in": "データシリーズの分散", "out": "ds.var()"}
{"in": "折れ線グラフをグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='green')"}
{"in": "計算機イプシロン", "out": "sys.float_info.epsilon"}
{"in": "集合から別の集合の要素を全て取り除く", "out": "aSet.difference_update(aSet2)"}
{"in": "折れ線グラフのマーカーを下三角にする", "out": "plt.plot(データ列x, データ列y, marker='v')"}
{"in": "パレットトルコイズ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='paleturquoise')"}
{"in": "エクセルファイルファイルをSJISで読み込む", "out": "pd.read_csv('file.csv', encoding='shift_jis')"}
{"in": "行列の行ごとの標準偏差", "out": "np.std(aArray, axis=1)"}
{"in": "nから無限にカウントダウンする", "out": "itertools.count(start=n, step=-1)"}
{"in": "散布図に左三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='<')"}
{"in": "ヒストグラムをライトスチールブルー色で描画する", "out": "plt.hist(データ列, color='lightsteelblue')"}
{"in": "ある列の値がx以上、y未満の行を抽出する", "out": "df[(x <= df['列A']) & (df['列A'] < y)]"}
{"in": "データ列の散布図を描画する", "out": "plt.scatter(データ列x, データ列y)"}
{"in": "オブジェクトはリストクラスか調べる", "out": "isinstance(obj, list)"}
{"in": "正規分布で疑似乱数を生成する", "out": "random.normalvariate(mu=0.5, sigma=0.2)"}
{"in": "データフレームの指定したカラムにおいてどの値が頻出か見る", "out": "df['列A'].mode()"}
{"in": "スノー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='snow')"}
{"in": "散布図の色をダークオレンジにする", "out": "plt.scatter(データ列x, データ列y, color='darkorange')"}
{"in": "文字列中にひとつでも非アルファベットが含まれるか調べる", "out": "any(not c.isalpha() for c in s)"}
{"in": "配列は何次元か調べる", "out": "aArray.ndim"}
{"in": "xの小数点以下'5'桁までをプリントする", "out": "print(':.5f'.format(x))"}
{"in": "散布図をパウダーブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='powderblue')"}
{"in": "ヒストグラムの色をミディアムスレートブルーに設定する", "out": "plt.hist(データ列, color='mediumslateblue')"}
{"in": "棒グラフをラベンダー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lavender')"}
{"in": "option: マーカーを左三角に変更する", "out": "marker = '<'"}
{"in": "文字列を部分文字列で分けたときの前半の文字列", "out": "s.partition(sub)[0]"}
{"in": "横棒グラフをライトサーモン色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightsalmon')"}
{"in": "ヒストグラムを黒くする", "out": "plt.hist(データ列, color='k')"}
{"in": "変数について数式の積分を求める", "out": "sympy.integrate(e, z)"}
{"in": "折れ線グラフの色をレベッカパープルに設定する", "out": "plt.plot(データ列x, データ列y, color='rebeccapurple')"}
{"in": "プラム色のヒストグラムを描画する", "out": "plt.hist(データ列, color='plum')"}
{"in": "改行なしに文字列をプリントする", "out": "print(value, end='')"}
{"in": "ヒストグラムの色をタンに設定する", "out": "plt.hist(データ列, color='tan')"}
{"in": "青色のヒストグラムを描画する", "out": "plt.hist(データ列, color='blue')"}
{"in": "折れ線グラフの色を黄色に設定する", "out": "plt.plot(データ列x, データ列y, color='yellow')"}
{"in": "option: グラフの色をコーラルに設定する", "out": "color = 'coral'"}
{"in": "データフレームの指定したカラムの欠損値を最頻値で埋める", "out": "df['列A'].fillna(df['列A'].mode().iloc[0])"}
{"in": "散布図の丸マーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='o', markeredgewidth=2.5)"}
{"in": "ヒストグラムをコーンフラワーブルー色で描画する", "out": "plt.hist(データ列, color='cornflowerblue')"}
{"in": "横棒グラフをアクアマリン色で描画する", "out": "plt.barh(データ列x, データ列y, color='aquamarine')"}
{"in": "折れ線グラフの色をアリスブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='aliceblue')"}
{"in": "棒グラフの色をパールバイオレットレッドにする", "out": "plt.bar(データ列x, データ列y, color='palevioletred')"}
{"in": "データシリーズを千の位で丸める", "out": "ds.round(-3)"}
{"in": "ダークカーキ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkkhaki')"}
{"in": "散布図に黒い大バツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='X', c='k')"}
{"in": "折れ線グラフの色をカデットブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='cadetblue')"}
{"in": "折れ線グラフをターコイズ色で描画する", "out": "plt.plot(データ列x, データ列y, color='turquoise')"}
{"in": "オプションで、出力先を標準エラーに設定する", "out": "file = sys.stderr"}
{"in": "折れ線グラフに青い丸マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='o', markerfacecolor='b')"}
{"in": "ヒストグラムをダーク・スラテグレー色で描画する", "out": "plt.hist(データ列, color='darkslategrey')"}
{"in": "ファイルパスのセパレータ記号", "out": "os.sep"}
{"in": "横棒グラフをライトグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightgray')"}
{"in": "エポック秒を日付時刻に変換する", "out": "datetime.datetime.fromtimestamp(timestamp)"}
{"in": "トマト色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='tomato')"}
{"in": "option: グラフの色を茶色に設定する", "out": "color = 'brown'"}
{"in": "option: グラフの色をシーグリーンに設定する", "out": "color = 'seagreen'"}
{"in": "nullに等しい値", "out": "None"}
{"in": "ヒストグラムの色をダーク・スラテグレーに設定する", "out": "plt.hist(データ列, color='darkslategrey')"}
{"in": "実数の逆双曲線余弦", "out": "math.acosh(x)"}
{"in": "文字列が文字列より辞書順で前か調べる", "out": "s < s2"}
{"in": "最大長nの両端キューを作る", "out": "collections.deque(maxlen=n)"}
{"in": "散布図の色をゲインズボロにする", "out": "plt.scatter(データ列x, データ列y, color='gainsboro')"}
{"in": "折れ線グラフの色をタンに設定する", "out": "plt.plot(データ列x, データ列y, color='tan')"}
{"in": "option: マーカーの色をダークグレーにする", "out": "markerfacecolor = 'darkgray'"}
{"in": "文字列内にひとつでも小文字が含まれるか調べる", "out": "any(c.islower() for c in s)"}
{"in": "日付データが水曜日か調べる", "out": "aDate.weekday() == 2"}
{"in": "ある列の文字列に部分文字列が含まれる行を抽出する", "out": "df[df['列A'].str.contains(部分文字列)]"}
{"in": "横棒グラフを黄色色で描画する", "out": "plt.barh(データ列x, データ列y, color='yellow')"}
{"in": "ライトグレー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightgray')"}
{"in": "文字列が全てアスキー文字か調べる", "out": "s.isascii()"}
{"in": "横棒グラフをリネン色で描画する", "out": "plt.barh(データ列x, データ列y, color='linen')"}
{"in": "辞書からキーの値をエラーなく得る", "out": "aDict.get(key, None)"}
{"in": "本日が何月か知る", "out": "datetime.datetime.today().month"}
{"in": "カウンタを辞書で更新する", "out": "aCounter.update(aDict)"}
{"in": "サイコロ", "out": "random.randint(1, 6)"}
{"in": "サンディーブラウン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='sandybrown')"}
{"in": "折れ線グラフをグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='grey')"}
{"in": "散布図をゲインズボロ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='gainsboro')"}
{"in": "横棒グラフをライトグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightgrey')"}
{"in": "ファイル名がCSVファイルか調べる", "out": "filename.endswith('.csv')"}
{"in": "データフレームの指定したカラムの欠損値を最小値で埋める", "out": "df['列A'].fillna(df['列A'].min())"}
{"in": "データ列を二つ並べてヒストグラムにする", "out": "plt.hist([データ列, データ列], color=['b', 'r'])"}
{"in": "ビン数を設定してヒストグラムを描画する", "out": "plt.hist(データ列, bins=区関数)"}
{"in": "option: マーカーの色をドジャーブルーにする", "out": "markerfacecolor = 'dodgerblue'"}
{"in": "データフレームの末尾n行を抽出する", "out": "df.tail(n)"}
{"in": "棒グラフの色をシスルにする", "out": "plt.bar(データ列x, データ列y, color='thistle')"}
{"in": "標準入力を使う", "out": "sys.stdin"}
{"in": "未定値", "out": "None"}
{"in": "ヒストグラムをパパイヤウィップ色で描画する", "out": "plt.hist(データ列, color='papayawhip')"}
{"in": "ヒストグラムの色をディムグレーに設定する", "out": "plt.hist(データ列, color='dimgrey')"}
{"in": "データフレームの列を説明変数にする", "out": "説明変数 = df[['列名', '列名2']]"}
{"in": "カウンタを高頻出方から列挙する", "out": "aCounter.most_common()"}
{"in": "散布図の左三角マーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='b')"}
{"in": "データシリーズの中に文字列と文字列があるか調べる", "out": "ds.isin([value, value2])"}
{"in": "グリッドを破線にする", "out": "plt.grid(linestyle='dashed')"}
{"in": "option: 改行コードをWindowsに設定する", "out": "newline = '\\r\\n'"}
{"in": "ヒストグラムの色をイエローグリーンに設定する", "out": "plt.hist(データ列, color='yellowgreen')"}
{"in": "option: NaNを無視しない", "out": "nan_policy = 'propagate'"}
{"in": "文字列全体を複数行対応として正規表現にマッチさせる", "out": "re.fullmatch(pattern, s, flags=re.MULTILINE)"}
{"in": "データシリーズの中にある文字列と文字列の合計を数える", "out": "ds.isin([value, value2]).sum()"}
{"in": "散布図にrgbの三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='^', c=rgb)"}
{"in": "グリッド線", "out": "plt.grid(linestyle='--')"}
{"in": "三変数の最大値", "out": "max(x, y, z)"}
{"in": "散布図にポイントマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='.')"}
{"in": "折れ線グラフの星マーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='*', markersize=2.0)"}
{"in": "option: セパレータをタブにする", "out": "sep = '\\t'"}
{"in": "白い横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='w')"}
{"in": "横棒グラフの色をダークシアンにする", "out": "plt.barh(データ列x, データ列y, color='darkcyan')"}
{"in": "散布図をライトスチールブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightsteelblue')"}
{"in": "棒グラフの色をミディアムオーキッドにする", "out": "plt.bar(データ列x, データ列y, color='mediumorchid')"}
{"in": "カウンタのユニークな項目を列挙する", "out": "list(aCounter)"}
{"in": "ライトスレイグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightslategray')"}
{"in": "散布図に青い四角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='b')"}
{"in": "データフレームのポイントプロットを描画する", "out": "sns.pointplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)"}
{"in": "カウンタ同士でユニオン", "out": "aCounter | aCounter2"}
{"in": "option: グラフの色をアリスブルーに設定する", "out": "color = 'aliceblue'"}
{"in": "データフレームのあるカラムを日付データに変換し、データフレームのインデックスにする", "out": "df.index = pd.DatetimeIndex(pd.to_datetime(df['列A']))"}
{"in": "四角印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='s')"}
{"in": "オレンジ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='orange')"}
{"in": "散布図に黒い大バツマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='k')"}
{"in": "棒グラフの色をダークグレーにする", "out": "plt.bar(データ列x, データ列y, color='darkgray')"}
{"in": "棒グラフをパレットトルコイズ色で描画する", "out": "plt.bar(データ列x, データ列y, color='paleturquoise')"}
{"in": "option: グラフの色をロージーブラウンに設定する", "out": "color = 'rosybrown'"}
{"in": "nの二乗", "out": "n ** 2"}
{"in": "文字列を赤色でプリントできる文字列に変換する", "out": "f'\\033[31m{value}\\033[0m'"}
{"in": "グラフの背景色を暗くする", "out": "sns.set(style='darkgrid')"}
{"in": "option: マーカーの色をシスルにする", "out": "markerfacecolor = 'thistle'"}
{"in": "ファイルをベース名と拡張子に分割する", "out": "os.path.splitext(filepath)"}
{"in": "マルーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='maroon')"}
{"in": "折れ線グラフの色をミディアムシアグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumseagreen')"}
{"in": "散布図の色をダークシアグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='darkseagreen')"}
{"in": "散布図に赤い丸マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='r')"}
{"in": "実数を二乗する", "out": "x ** 2"}
{"in": "データシリーズの曜日数", "out": "ds.dt.dayofweek"}
{"in": "棒グラフをオーキッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='orchid')"}
{"in": "オプションで、出力先を標準出力に設定する", "out": "file = sys.stdout"}
{"in": "色名からカラーコードを使う", "out": "matplotlib.colors.cnames[色名]"}
{"in": "ガンマ関数", "out": "math.gamma(x)"}
{"in": "ダークシアグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkseagreen')"}
{"in": "option: グラフの色をピーチパフに設定する", "out": "color = 'peachpuff'"}
{"in": "折れ線グラフをゴールド色で描画する", "out": "plt.plot(データ列x, データ列y, color='gold')"}
{"in": "データフレームを千の位で丸める", "out": "df.round(-3)"}
{"in": "ゼロ埋めされた行列", "out": "np.zeros(行数, 列数)"}
{"in": "辞書をカウンタに変換する", "out": "collections.Counter(aDict)"}
{"in": "option: ゴーストホワイト色を使う", "out": "color = 'ghostwhite'"}
{"in": "棒グラフをレモンシフォン色で描画する", "out": "plt.bar(データ列x, データ列y, color='lemonchiffon')"}
{"in": "棒グラフをダークグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkgrey')"}
{"in": "nからn2までのひとつ飛ばしの整数列", "out": "list(range(n, n2+1, 2))"}
{"in": "オブジェクトをイテラブルに変換する", "out": "iter(obj)"}
{"in": "配列の形状", "out": "aArray.shape"}
{"in": "折れ線グラフの右三角マーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='>', markeredgewidth=2.5)"}
{"in": "棒グラフをパパイヤウィップ色で描画する", "out": "plt.bar(データ列x, データ列y, color='papayawhip')"}
{"in": "カテゴリで色分けして、データフレームをに箱ひげ図で可視化する", "out": "sns.boxplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)"}
{"in": "棒グラフをトマト色で描画する", "out": "plt.bar(データ列x, データ列y, color='tomato')"}
{"in": "オリーブ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='olive')"}
{"in": "散布図の色を黄色にする", "out": "plt.scatter(データ列x, データ列y, color='yellow')"}
{"in": "実数の双曲線余弦", "out": "math.cosh(x)"}
{"in": "折れ線グラフに青い三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='^', markerfacecolor='b')"}
{"in": "赤色のヒストグラムを描画する", "out": "plt.hist(データ列, color='red')"}
{"in": "文字列を全て大文字に変換する", "out": "s.upper()"}
{"in": "データフレームのある列の値がx以上の行を抽出する", "out": "df[df['列A'] >= x]"}
{"in": "NaNも加えてデータフレームのある列をダミー変数に変換する", "out": "pd.get_dummies(df['列A'], dummy_na=True)"}
{"in": "option: ダークオリーブグリーン色を使う", "out": "color = 'darkolivegreen'"}
{"in": "折れ線グラフの左三角マーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='<', markerfacecolor='k')"}
{"in": "棒グラフをダークオリーブグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkolivegreen')"}
{"in": "nまでの偶整数列", "out": "list(range(2, n, 2))"}
{"in": "タプルの合計値", "out": "sum(aTuple)"}
{"in": "縦軸の目盛に文字列を付ける", "out": "plt.yticks([0, 60, 90], ['不可', '可', '秀'])"}
{"in": "ヒストグラムの色をダークスラテグレーに設定する", "out": "plt.hist(データ列, color='darkslategray')"}
{"in": "nをn2だけ減少させる", "out": "n -= n2"}
{"in": "散布図の色をオールドレースにする", "out": "plt.scatter(データ列x, データ列y, color='oldlace')"}
{"in": "ミディアムターコイズ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumturquoise')"}
{"in": "xの小数点以下'4'桁までをプリントする", "out": "print(':.4f'.format(x))"}
{"in": "棒グラフの色をダークマゼンタにする", "out": "plt.bar(データ列x, データ列y, color='darkmagenta')"}
{"in": "データフレームの欠損値を最大値に設定する", "out": "df.fillna(df.max())"}
{"in": "ヒストグラムを半透明にする", "out": "plt.hist(データ列x, alpha=0.5)"}
{"in": "横棒グラフを青くする", "out": "plt.barh(データ列x, データ列y, color='b')"}
{"in": "データフレームの指定したカラムを十の位で丸めて、整数型にする", "out": "df['列A'].round(-1).astype(int)"}
{"in": "多次元データをt-SNEで淡く次元に次元削減する", "out": "sklearn.manifold.TSNE(n_components=三).fit_transform(多次元データ)"}
{"in": "日付データが日付データと同時か調べる", "out": "aDate == aDate2"}
{"in": "ヒストグラムの色をレベッカパープルに設定する", "out": "plt.hist(データ列, color='rebeccapurple')"}
{"in": "データフレームのカラムの幾何平均を求める", "out": "scipy.stats.gmean(df['列A'])"}
{"in": "ヒストグラムをブラック色で描画する", "out": "plt.hist(データ列, color='black')"}
{"in": "グラフの色を明るくする", "out": "sns.set(pallete='bright')"}
{"in": "option: マーカーの色をダークシアグリーンにする", "out": "markerfacecolor = 'darkseagreen'"}
{"in": "横棒グラフをミディアムターコイズ色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumturquoise')"}
{"in": "ヒストグラムをミディアムターコイズ色で描画する", "out": "plt.hist(データ列, color='mediumturquoise')"}
{"in": "option: マーカーをダイアモンドに変更する", "out": "marker = 'D'"}
{"in": "option: マーカーの色をライトシアンにする", "out": "markerfacecolor = 'lightcyan'"}
{"in": "横棒グラフの色をパパイヤウィップにする", "out": "plt.barh(データ列x, データ列y, color='papayawhip')"}
{"in": "ヒストグラムの色をスチールブルーに設定する", "out": "plt.hist(データ列, color='steelblue')"}
{"in": "散布図に黒い左三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='k')"}
{"in": "コマンドライン引数", "out": "sys.argv"}
{"in": "全ての十六進数字", "out": "string.hexdigits"}
{"in": "nにn2をかけた値をnに代入する", "out": "n *= n2"}
{"in": "日付データと日付データの時間差が何秒か知る", "out": "(aDate - aDate2).total_seconds()"}
{"in": "四角印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='s')"}
{"in": "ミディアムスプリンググリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "棒グラフをリネン色で描画する", "out": "plt.bar(データ列x, データ列y, color='linen')"}
{"in": "折れ線グラフの三角マーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='^', markerfacecolor='b')"}
{"in": "棒グラフをライトスカイブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightskyblue')"}
{"in": "option: 左三角マーカーを使う", "out": "marker = '<'"}
{"in": "リストとリストについて散布図を描画して、マーカーを大バツに設定する", "out": "plt.plot(データ列x, データ列y, marker='X')"}
{"in": "散布図の色をライトグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='lightgreen')"}
{"in": "データフレームのシェイプ", "out": "df.shape"}
{"in": "書式を辞書でフォーマットする", "out": "formatText.format_map(aDict)"}
{"in": "文字列からformatのパターンで日付時刻に変換する", "out": "datetime.datetime.strptime(日付の書かれた文字列, format)"}
{"in": "データシリーズが何月か見る", "out": "ds.dt.month"}
{"in": "ヒストグラムをディープスカイブルー色で描画する", "out": "plt.hist(データ列, color='deepskyblue')"}
{"in": "行列の行列式", "out": "np.linalg.det(aArray)"}
{"in": "散布図の色をライトブルーにする", "out": "plt.scatter(データ列x, データ列y, color='lightblue')"}
{"in": "両端キューの先頭", "out": "deq[0]"}
{"in": "散布図をミディアムパープル色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumpurple')"}
{"in": "散布図に青い三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='b')"}
{"in": "option: マーカーの色をダークゴールデンロッドにする", "out": "markerfacecolor = 'darkgoldenrod'"}
{"in": "ファイルを文字列の示すエンコーディングでオープンする]", "out": "open(filepath, encoding=s)"}
{"in": "赤い一点鎖線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot', color='r')"}
{"in": "文字列中の正規表現を新しい文字列で置き換える", "out": "re.sub(pattern, newsub, s)"}
{"in": "散布図に青いダイアモンドマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='b')"}
{"in": "散布図を青色で描画する", "out": "plt.scatter(データ列x, データ列y, color='blue')"}
{"in": "赤い四角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='s', c='r')"}
{"in": "データを標準化する", "out": "sklearn.preprocessing.StandardScaler().fit_transform(データ)"}
{"in": "折れ線グラフをサーモン色で描画する", "out": "plt.plot(データ列x, データ列y, color='salmon')"}
{"in": "ヒストグラムをミディアムスレートブルー色で描画する", "out": "plt.hist(データ列, color='mediumslateblue')"}
{"in": "散布図の星マーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='k')"}
{"in": "ミディアムアクアマリン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumaquamarine')"}
{"in": "ゴールド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='gold')"}
{"in": "option: ネイビー色を使う", "out": "color = 'navy'"}
{"in": "日付データをn分前に戻す", "out": "aDate - datetime.timedelta(minutes=n)"}
{"in": "棒グラフの色をマゼンタにする", "out": "plt.bar(データ列x, データ列y, color='magenta')"}
{"in": "ピンク色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='pink')"}
{"in": "本日の日付", "out": "datetime.date.today()"}
{"in": "option: ペールグリーン色を使う", "out": "color = 'palegreen'"}
{"in": "既存の配列を元に全要素が0の配列", "out": "np.zeros_like(aArray)"}
{"in": "日付データををn時間後に進める", "out": "aDate + datetime.timedelta(hours=n)"}
{"in": "配列間の要素ごとの最大公約数", "out": "np.gcd(aArray, aArray2)"}
{"in": "データフレームのある列の値がxより小さい行を抽出する", "out": "df[df['列A'] < x]"}
{"in": "タブ", "out": "'\\t'"}
{"in": "横棒グラフをフクシア色で描画する", "out": "plt.barh(データ列x, データ列y, color='fuchsia')"}
{"in": "乱数の行列", "out": "np.random.random((行数, 列数))"}
{"in": "散布図をロイヤルブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='royalblue')"}
{"in": "折れ線グラフの四角マーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='s', markerfacecolor='k')"}
{"in": "日付時刻データをエポック秒に変換する", "out": "aDatetime.timestamp()"}
{"in": "文字列をコロンで区切って、列挙する", "out": "s.split(':')"}
{"in": "横棒グラフの色を貝殻にする", "out": "plt.barh(データ列x, データ列y, color='seashell')"}
{"in": "グレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='gray')"}
{"in": "折れ線グラフをブランチドアーモンド色で描画する", "out": "plt.plot(データ列x, データ列y, color='blanchedalmond')"}
{"in": "ヒストグラムの色をダークゴールデンロッドに設定する", "out": "plt.hist(データ列, color='darkgoldenrod')"}
{"in": "散布図の色をグレーにする", "out": "plt.scatter(データ列x, データ列y, color='grey')"}
{"in": "等差数列から整数乱数を生成する", "out": "random.randrange(start, end, step)"}
{"in": "日付時刻データと日付時刻データの時間差が何分か知る", "out": "(aDatetime - aDatetime2).total_seconds()//60"}
{"in": "両端キューの要素を左にn個分ローテンションする", "out": "deq.rotate(-n)"}
{"in": "棒グラフの色をオリベドラブにする", "out": "plt.bar(データ列x, データ列y, color='olivedrab')"}
{"in": "文字列を複数行対応として正規表現で分割する", "out": "re.split(pattern, s, flags=re.MULTILINE)"}
{"in": "バギングでクラス分類を行う", "out": "model = sklearn.ensemble.BaggingClassifier(n_estimators=10)"}
{"in": "横棒グラフの色をゴーストホワイトにする", "out": "plt.barh(データ列x, データ列y, color='ghostwhite')"}
{"in": "ミディアムターコイズ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumturquoise')"}
{"in": "データフレームの中央値", "out": "df.median()"}
{"in": "散布図の色を青紫にする", "out": "plt.scatter(データ列x, データ列y, color='violet')"}
{"in": "option: マーカーの色をハニーデューにする", "out": "markerfacecolor = 'honeydew'"}
{"in": "折れ線グラフをライトグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightgrey')"}
{"in": "グラフを使う準備をする", "out": "import matplotlib.pyplot as plt"}
{"in": "横棒グラフをレモンシフォン色で描画する", "out": "plt.barh(データ列x, データ列y, color='lemonchiffon')"}
{"in": "option: グレー色を使う", "out": "color = 'grey'"}
{"in": "散布図のマーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, markerfacecolor='#800080')"}
{"in": "棒グラフをアイボリー色で描画する", "out": "plt.bar(データ列x, データ列y, color='ivory')"}
{"in": "散布図の色をアリスブルーにする", "out": "plt.scatter(データ列x, データ列y, color='aliceblue')"}
{"in": "文字列の末尾から範囲を指定して部分文字列を探す", "out": "s.find(sub, start, end)"}
{"in": "折れ線グラフをコーラル色で描画する", "out": "plt.plot(データ列x, データ列y, color='coral')"}
{"in": "散布図をミディアムアクアマリン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "データを外れ値に頑健な標準化を行う", "out": "sklearn.preprocessing.RobustScaler().fit_transform(データ)"}
{"in": "データフレームの選択したカラムの欠損値を平均値で埋める", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].mean())"}
{"in": "option: イエローグリーン色を使う", "out": "color = 'yellowgreen'"}
{"in": "カテゴリで色分けして、データフレームをカウントプロットにする", "out": "sns.countplot(x='列名', hue='カテゴリ列', data=df)"}
{"in": "データフレームからランダムに10行を抽出する", "out": "df.sample(10)"}
{"in": "xを浮動小数点数に変換する", "out": "float(x)"}
{"in": "ダークオレンジ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkorange')"}
{"in": "rgbのダイアモンドマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='D', c=rgb)"}
{"in": "散布図の色をライトグレーにする", "out": "plt.scatter(データ列x, データ列y, color='lightgray')"}
{"in": "option: マーカーの色をコーンフラワーブルーにする", "out": "markerfacecolor = 'cornflowerblue'"}
{"in": "散布図の色をダークグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='darkgreen')"}
{"in": "カテゴリで色分けして、データフレームを棒グラフにする", "out": "sns.barplot(x='カテゴリ列', y='列名', hue='カテゴリ', data=df)"}
{"in": "ファイルから書き込みストリームをオープンして]、fとする", "out": "f = open(filepath, mode='w')"}
{"in": "表データを使う", "out": "import pandas as pd"}
{"in": "日付時刻データが木曜日か調べる", "out": "aDatetime.weekday() == 3"}
{"in": "option: 行方向に計算する", "out": "axis = 1"}
{"in": "データフレームをグループ化し、それぞれの最小値を求める", "out": "df.groupby('列A').min()"}
{"in": "ダークゴールデンロッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkgoldenrod')"}
{"in": "棒グラフの色をシーグリーンにする", "out": "plt.bar(データ列x, データ列y, color='seagreen')"}
{"in": "パレットトルコイズ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='paleturquoise')"}
{"in": "散布図をビスク色で描画する", "out": "plt.scatter(データ列x, データ列y, color='bisque')"}
{"in": "option: バツマーカーを使う", "out": "marker = 'x'"}
{"in": "ヒストグラムをライトスカイブルー色で描画する", "out": "plt.hist(データ列, color='lightskyblue')"}
{"in": "折れ線グラフの色をアイボリーに設定する", "out": "plt.plot(データ列x, データ列y, color='ivory')"}
{"in": "データを最大値と最小値で正規化する", "out": "sklearn.preprocessing.MinMaxScaler(feature_range=(0, 1)).fit_transform(データ)"}
{"in": "データフレームの指定したカラムを丸めて、整数型にする", "out": "df['列A'].round().astype(int)"}
{"in": "nとkのコンビネーション", "out": "math.comb(n, k)"}
{"in": "折れ線グラフの色をオレンジに設定する", "out": "plt.plot(データ列x, データ列y, color='orange')"}
{"in": "データフレームをCSVファイルで保存する", "out": "df.to_csv('file.csv')"}
{"in": "ファイルをバイナリモードでオープンして]、fとする", "out": "f = open(filepath, mode='rb')"}
{"in": "ダークオレンジ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkorange')"}
{"in": "モカシン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='moccasin')"}
{"in": "データフレームの選択したカラムの欠損値を最頻値に設定する", "out": "df[['列A', '列B']].fillna(df[['列A', '列B']].mode().iloc[0])"}
{"in": "棒グラフの色を暗い赤にする", "out": "plt.bar(データ列x, データ列y, color='darkred')"}
{"in": "代数計算を使う", "out": "import sympy"}
{"in": "option: スプリンググリーン色を使う", "out": "color = 'springgreen'"}
{"in": "黒いグリッド線を引く", "out": "plt.grid(color='k')"}
{"in": "折れ線グラフに星マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='*')"}
{"in": "ライトスチールブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightsteelblue')"}
{"in": "option: グラフの色をインディアンレッドに設定する", "out": "color = 'indianred'"}
{"in": "nをn2で割った余り", "out": "n % n2"}
{"in": "実数のn乗して実数による余り", "out": "pow(x, n, y)"}
{"in": "option: 三角マーカーを描画する", "out": "marker = '^'"}
{"in": "配列を中央値でビン分割する", "out": "pd.qcut(aArray, 2)"}
{"in": "リストとリストについての散布図に黒い左三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='<', c='k')"}
{"in": "列を指定して重複をドロップする", "out": "df.drop_duplicates(subset=['列A', '列B'], inplace=True)"}
{"in": "新しい線形回帰モデルを作る", "out": "model = sklearn.linear_model.LinearRegression()"}
{"in": "折れ線グラフをライトグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightgreen')"}
{"in": "グラフの補助目盛を有効にする", "out": "plt.minorticks_on()"}
{"in": "ヒストグラムを暗い赤色で描画する", "out": "plt.hist(データ列, color='darkred')"}
{"in": "option: グラフの色を紺碧に設定する", "out": "color = 'azure'"}
{"in": "上位集合もしくは等しいか調べる", "out": "aSet > aSet2"}
{"in": "文字列を青色にする", "out": "f'\\033[34m{value}\\033[0m'"}
{"in": "散布図の色をピンクにする", "out": "plt.scatter(データ列x, データ列y, color='pink')"}
{"in": "日付時刻データにn時間分、加算する", "out": "aDatetime + datetime.timedelta(hours=n)"}
{"in": "青い横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='b')"}
{"in": "オブジェクトを文字列に変換する", "out": "str(obj)"}
{"in": "option: グラフの色をサーモンに設定する", "out": "color = 'salmon'"}
{"in": "横棒グラフをタン色で描画する", "out": "plt.barh(データ列x, データ列y, color='tan')"}
{"in": "xが真か調べる", "out": "bool(x)"}
{"in": "option: マーカーの色をカデットブルーにする", "out": "markerfacecolor = 'cadetblue'"}
{"in": "折れ線グラフの色をパパイヤウィップに設定する", "out": "plt.plot(データ列x, データ列y, color='papayawhip')"}
{"in": "多次元データを主成分分析で濃く次元に次元削減する", "out": "sklearn.decomposition.PCA(n_components=二).fit_transform(多次元データ)"}
{"in": "折れ線グラフのラベルを設定する", "out": "plt.plot(データ列x, データ列y, label='ラベル')"}
{"in": "ヒストグラムの色をブランチドアーモンドに設定する", "out": "plt.hist(データ列, color='blanchedalmond')"}
{"in": "チョコレート色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='chocolate')"}
{"in": "サイコロと同じ乱数", "out": "random.randint(1, 6)"}
{"in": "赤い下三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='v', c='r')"}
{"in": "ヒストグラムの色をプラムに設定する", "out": "plt.hist(データ列, color='plum')"}
{"in": "option: グラフの色をダークシアンに設定する", "out": "color = 'darkcyan'"}
{"in": "横棒グラフをディムグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='dimgrey')"}
{"in": "option: バイナリモードを使う", "out": "mode = 'rb'"}
{"in": "ダークバイオレット色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkviolet')"}
{"in": "文字列を部分文字列で区切って、文字列リストに変換する", "out": "s.split(sub)"}
{"in": "全要素を０で初期化した８ビット整数型の行列", "out": "np.zeros(行数, 列数, dtype=np.int8)"}
{"in": "実部と虚部から複素数", "out": "complex(x, y)"}
{"in": "真上位集合か調べる", "out": "aSet > aSet2"}
{"in": "option: マーカーの色をパープルにする", "out": "markerfacecolor = 'purple'"}
{"in": "ヒストグラムをフォレストグリーン色で描画する", "out": "plt.hist(データ列, color='forestgreen')"}
{"in": "option: チョコレート色を使う", "out": "color = 'chocolate'"}
{"in": "文字列の末尾", "out": "s[-1]"}
{"in": "文字列を最後の部分文字列で二分し、前半の文字列を使う", "out": "s.rpartition(sub)[0]"}
{"in": "データフレームの列の一覧", "out": "df.info()"}
{"in": "散布図の色をターコイズにする", "out": "plt.scatter(データ列x, データ列y, color='turquoise')"}
{"in": "最適な位置に凡例を表示する", "out": "plt.legend(loc='best')"}
{"in": "原点から(実数,y)の距離", "out": "math.hypot(x, y)"}
{"in": "データフレームのstart行目からend行目まで抽出する", "out": "df[start:end]"}
{"in": "データフレームの指定したカラムの平均値", "out": "df['列A'].mean()"}
{"in": "データフレームの選択したカラムを丸める", "out": "df[['列A', '列B']].round()"}
{"in": "散布図に赤いポイントマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='.', c='r')"}
{"in": "暗い赤色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkred')"}
{"in": "ヒストグラムの描画して、正規化する", "out": "plt.hist(データ列, density=True)"}
{"in": "イテラブルとイテラブルをペアリングする", "out": "itertools.zip_longest(iterable, iterable2)"}
{"in": "散布図を赤くする", "out": "plt.scatter(データ列x, データ列y, color='r')"}
{"in": "実数の床", "out": "math.floor(x)"}
{"in": "rgbの左三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='<', c=rgb)"}
{"in": "option: マーカーを星に変更する", "out": "marker = '*'"}
{"in": "option: グラフの色をモカシンに設定する", "out": "color = 'moccasin'"}
{"in": "実数を切り上げる", "out": "math.ceil(x)"}
{"in": "折れ線グラフをローングリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='lawngreen')"}
{"in": "散布図に青い左三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='b')"}
{"in": "データシリーズが何年か見る", "out": "ds.dt.year"}
{"in": "数式の展開を行う", "out": "sympy.expand(e)"}
{"in": "多次元データを多次元尺度構成法で淡く次元に次元削減する", "out": "sklearn.manifold.MSD(n_components=三).fit_transform(多次元データ)"}
{"in": "積み上げ棒グラフを描画する", "out": "plt.bar(ラベル列, データ列, bottom=データ列y, color='#800080')"}
{"in": "option: マーカーの色をミディアムターコイズにする", "out": "markerfacecolor = 'mediumturquoise'"}
{"in": "データフレームをある列によってまとめたグループ", "out": "df.groupby('列A')"}
{"in": "散布図をレベッカパープル色で描画する", "out": "plt.scatter(データ列x, データ列y, color='rebeccapurple')"}
{"in": "アイボリー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='ivory')"}
{"in": "折れ線グラフの色をローングリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='lawngreen')"}
{"in": "十六進表記の文字列を浮動小数点数に変換する", "out": "float.fromhex(十六進表記の文字列)"}
{"in": "データフレームの指定したカラムの標準偏差", "out": "df['列A'].std()"}
{"in": "棒グラフをグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='grey')"}
{"in": "option: グラフの色をインディゴに設定する", "out": "color = 'indigo'"}
{"in": "データフレームをある列によって昇順にソートする", "out": "df.sort_values(by='列A', ascending=True)"}
{"in": "ゴールド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='gold')"}
{"in": "茶色色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='brown')"}
{"in": "折れ線グラフをゴーストホワイト色で描画する", "out": "plt.plot(データ列x, データ列y, color='ghostwhite')"}
{"in": "ペールグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='palegreen')"}
{"in": "プログラムのファイルの名前", "out": "sys.argv[0]"}
{"in": "option: マーカーの色をミッドナイトブルーにする", "out": "markerfacecolor = 'midnightblue'"}
{"in": "ファイルの拡張子", "out": "os.path.splitext(filepath)[1].lstrip('.')"}
{"in": "データ列の文字列長を列として使う", "out": "ds.str.len()"}
{"in": "折れ線グラフをミディアムパープル色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumpurple')"}
{"in": "実数から実数を引く", "out": "x - y"}
{"in": "データ列の離れ具合を可視化する", "out": "sns.residplot(x=データ列, y=データ列)"}
{"in": "折れ線グラフの色をディムグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='dimgray')"}
{"in": "nの無限数列", "out": "itertools.repeat(n)"}
{"in": "棒グラフの色をモカシンにする", "out": "plt.bar(データ列x, データ列y, color='moccasin')"}
{"in": "日付時刻データが日付時刻データより後ろか調べる", "out": "aDatetime > aDatetime2"}
{"in": "ラベンダーブラッシュ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lavenderblush')"}
{"in": "option: マーカーの色をインディゴにする", "out": "markerfacecolor = 'indigo'"}
{"in": "円グラフを時計回りに描画する", "out": "plt.pie(データ列, startangle=90, counterclock=False)"}
{"in": "配列の和", "out": "aArray + aArray2"}
{"in": "変数について数式を積分する", "out": "sympy.integrate(e, z)"}
{"in": "ヒストグラムをミディアムパープル色で描画する", "out": "plt.hist(データ列, color='mediumpurple')"}
{"in": "データフレームのあるカラムが何月か見る", "out": "df['列A'].dt.month"}
{"in": "二進文字列をバイト列に変換する", "out": "int(s, 2).to_bytes(length=bytesize, byteorder='big')"}
{"in": "散布図にダイアモンドマーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='D')"}
{"in": "ロバスト推定で回帰分析を行う", "out": "model = sklearn.linear_model.RANSACRegressor(random_state=0)"}
{"in": "リストをビン数nでビン分割する", "out": "pd.cut(aList, n)"}
{"in": "0からnの範囲", "out": "range(n)"}
{"in": "ヒストグラムの色をペルーに設定する", "out": "plt.hist(データ列, color='peru')"}
{"in": "ヒストグラムをディムグレー色で描画する", "out": "plt.hist(データ列, color='dimgrey')"}
{"in": "辞書のキーとその値を列挙する", "out": "aDict.items()"}
{"in": "散布図のマーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, markerfacecolor='k')"}
{"in": "青いヒストグラムを描画する", "out": "plt.hist(データ列, color='b')"}
{"in": "散布図をアクア色で描画する", "out": "plt.scatter(データ列x, データ列y, color='aqua')"}
{"in": "横棒グラフの色をライトスレイグレーにする", "out": "plt.barh(データ列x, データ列y, color='lightslategrey')"}
{"in": "指定した列のカテゴリで集計し、それぞれの分散を求める", "out": "df.groupby('列A').var()"}
{"in": "ダークカーキ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkkhaki')"}
{"in": "部分集合か調べる", "out": "aSet.issubset(aSet2)"}
{"in": "集合から全ての要素を取り除く", "out": "aSet.clear()"}
{"in": "数式を数値に変換する", "out": "float(e)"}
{"in": "黒い散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='k')"}
{"in": "オリーブ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='olive')"}
{"in": "有理数の分子", "out": "q.numerator"}
{"in": "最大値・最小値の範囲で一様な疑似乱数を生成する", "out": "random.uniform(最小値, 最大値)"}
{"in": "文字列の開始位置から終了位置までの範囲で部分文字列をカウントする", "out": "s.count(sub, start, end)"}
{"in": "辞書の全項目をクリアする", "out": "aDict.clear()"}
{"in": "ローングリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lawngreen')"}
{"in": "横棒グラフをゲインズボロ色で描画する", "out": "plt.barh(データ列x, データ列y, color='gainsboro')"}
{"in": "黒い棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='k')"}
{"in": "データフレームの指定したカラムの第一四分位数", "out": "df['列A'].quantile(0.25)"}
{"in": "データフレームとデータシリーズを横方向に連結する", "out": "pd.concat([df, ds], axis=1)"}
{"in": "配列間の要素ごとの最小公倍数", "out": "np.lcm(aArray, aArray2)"}
{"in": "ヒストグラムをカデットブルー色で描画する", "out": "plt.hist(データ列, color='cadetblue')"}
{"in": "option: 白色を使う", "out": "color = 'white'"}
{"in": "散布図に赤い下三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='v', c='r')"}
{"in": "横棒グラフの色をピーチパフにする", "out": "plt.barh(データ列x, データ列y, color='peachpuff')"}
{"in": "散布図をライム色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lime')"}
{"in": "ヒストグラムの色をライトグレーに設定する", "out": "plt.hist(データ列, color='lightgray')"}
{"in": "黄色色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='yellow')"}
{"in": "散布図の色をシエナにする", "out": "plt.scatter(データ列x, データ列y, color='sienna')"}
{"in": "ライトブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightblue')"}
{"in": "データフレームのカラムを標準化する", "out": "scipy.stats.zscore(df['列A'])"}
{"in": "本日が土曜日か調べる", "out": "datetime.datetime.today().weekday() == 5"}
{"in": "グラフの色を淡くする", "out": "sns.set(pallete='muted')"}
{"in": "エンコーディング", "out": "sys.getdefaultencoding()"}
{"in": "year年month月day日を日付時刻に変換する", "out": "datetime.datetime(year=year, month=month, day=day)"}
{"in": "８進数字を全部使う", "out": "string.octdigits"}
{"in": "丸印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='o')"}
{"in": "option: パウダーブルー色を使う", "out": "color = 'powderblue'"}
{"in": "option: プラム色を使う", "out": "color = 'plum'"}
{"in": "外れ値を除いたデータフレームのカラムの分散を求める", "out": "scipy.stats.tvar(df['列A'], limits=(下限, 上限), inclusive=(True, True))"}
{"in": "日付データをn日前に戻す", "out": "aDate - datetime.timedelta(days=n)"}
{"in": "データフレームを回帰直線付き散布図にする", "out": "sns.regplot(data=df, x='列名', y='列名')"}
{"in": "option: 書き込みモードを使う", "out": "mode = 'w'"}
{"in": "本日の曜日を整数で使う", "out": "datetime.datetime.today().weekday()"}
{"in": "データフレームをある列の値によってグループ化する", "out": "df.groupby('列A')"}
{"in": "折れ線グラフの色をインディゴに設定する", "out": "plt.plot(データ列x, データ列y, color='indigo')"}
{"in": "nとn2の値を足してnに代入する", "out": "n += n2"}
{"in": "棒グラフの色をグリーンイエローにする", "out": "plt.bar(データ列x, データ列y, color='greenyellow')"}
{"in": "棒グラフを紺碧色で描画する", "out": "plt.bar(データ列x, データ列y, color='azure')"}
{"in": "ファイルをバイナリ書き込みモードでオープンする]", "out": "open(filepath, mode='wb')"}
{"in": "折れ線グラフをゴールデンロッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='goldenrod')"}
{"in": "横棒グラフの色をパレットトルコイズにする", "out": "plt.barh(データ列x, データ列y, color='paleturquoise')"}
{"in": "ヒストグラムの色をマルーンに設定する", "out": "plt.hist(データ列, color='maroon')"}
{"in": "option: グラフの色をベージュに設定する", "out": "color = 'beige'"}
{"in": "option: ダークゴールデンロッド色を使う", "out": "color = 'darkgoldenrod'"}
{"in": "ラベンダーブラッシュ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lavenderblush')"}
{"in": "option: グラフの色をスノーに設定する", "out": "color = 'snow'"}
{"in": "コマンドラインフラグの状態", "out": "sys.flags"}
{"in": "リストとリストについての散布図に下三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='v')"}
{"in": "オプションで、標準出力を使う", "out": "file = sys.stdout"}
{"in": "バリーウッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='burlywood')"}
{"in": "日付データをn週間前に戻す", "out": "aDate - datetime.timedelta(weeks=n)"}
{"in": "データフレームの指定したカラムの欠損値を平均値に設定する", "out": "df['列A'].fillna(df['列A'].mean())"}
{"in": "ライトイエロー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightyellow')"}
{"in": "コーンズシルク色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='cornsilk')"}
{"in": "ミディアムパープル色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumpurple')"}
{"in": "option: n番目のカラムをインデックスに設定する", "out": "index_col = n"}
{"in": "データフレームのあるカラムの月", "out": "df['列A'].dt.month"}
{"in": "リストとリストについての散布図にrgbのバツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='x', c=rgb)"}
{"in": "nをn2乗に増やす", "out": "n **= n2"}
{"in": "シスル色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='thistle')"}
{"in": "散布図の色をミディアムバイオレットレッドにする", "out": "plt.scatter(データ列x, データ列y, color='mediumvioletred')"}
{"in": "K最近傍法でクラス分類を行う", "out": "model = sklearn.neighbors.KNeighborsClassifier(n_neighbors=5)"}
{"in": "ヒストグラムの色を小麦色に設定する", "out": "plt.hist(データ列, color='wheat')"}
{"in": "要素ひとつのタプル", "out": "(element,)"}
{"in": "二つの辞書を階層化する", "out": "collections.ChainMap(aDict, aDict2)"}
{"in": "ファイルをBOM付きで書き込み用にオープンする]", "out": "open(filepath, mode='w', encoding='utf_8_sig')"}
{"in": "グラフの背景色を暗くする", "out": "sns.set(style='darkgrid')"}
{"in": "ふたつの集合の共通要素だけに更新する", "out": "aSet.intersection_update(aSet2)"}
{"in": "リストとリストについて散布図を描画して、マーカーを左三角に設定する", "out": "plt.plot(データ列x, データ列y, marker='<')"}
{"in": "棒グラフを貝殻色で描画する", "out": "plt.bar(データ列x, データ列y, color='seashell')"}
{"in": "折れ線グラフの色をパウダーブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='powderblue')"}
{"in": "横棒グラフの色をフォレストグリーンにする", "out": "plt.barh(データ列x, データ列y, color='forestgreen')"}
{"in": "横棒グラフを淡いピンク色色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightpink')"}
{"in": "ハニーデュー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='honeydew')"}
{"in": "散布図の色をスプリンググリーンにする", "out": "plt.scatter(データ列x, データ列y, color='springgreen')"}
{"in": "棒グラフをダークサーモン色で描画する", "out": "plt.bar(データ列x, データ列y, color='darksalmon')"}
{"in": "正規分布によるパーセント・ポイント関数", "out": "scipy.stats.norm.cdf(x, loc=平均値, scale=標準偏差)"}
{"in": "ディープスカイブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='deepskyblue')"}
{"in": "棒グラフをナバホホワイト色で描画する", "out": "plt.bar(データ列x, データ列y, color='navajowhite')"}
{"in": "nが1、もしくは2、もしくは3に等しいか調べる", "out": "n == 1 or n == 2 or n == 3"}
{"in": "ブラック色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='black')"}
{"in": "option: ミッドナイトブルー色を使う", "out": "color = 'midnightblue'"}
{"in": "ダークターコイズ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkturquoise')"}
{"in": "文字列リストをsepを区切りとして連結する", "out": "sep.join(aStringList)"}
{"in": "ヒストグラムの色をライムグリーンに設定する", "out": "plt.hist(データ列, color='limegreen')"}
{"in": "異なる列をキーとしてデータフレームをジョインする", "out": "pd.merge(df, df2, left_on='列A', right_on='列B')"}
{"in": "データフレームをソートする", "out": "df.sort_values('キーとなる列')"}
{"in": "nが偶数か調べる", "out": "n % 2 == 0"}
{"in": "文字列の接尾辞が部分文字列か調べる", "out": "s.endswith(sub)"}
{"in": "連立方程式を解く", "out": "sympy.solve([e, e2])"}
{"in": "ゼロ埋めされたブール型の配列", "out": "np.zeros(要素数, dtype=np.int32)"}
{"in": "文字列を全て小文字に変換する", "out": "s.lower()"}
{"in": "散布図の大バツマーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='b')"}
{"in": "データフレームの指定したカラムを小数点以下n桁で丸める", "out": "df['列A'].round(n)"}
{"in": "折れ線グラフをミントクリーム色で描画する", "out": "plt.plot(データ列x, データ列y, color='mintcream')"}
{"in": "文字列を最後の部分文字列で分けたときの後半の文字列", "out": "s.rpartition(sub)[-1]"}
{"in": "option: グラフの色をミディアムスレートブルーに設定する", "out": "color = 'mediumslateblue'"}
{"in": "option: 配列のデータ型を指定する", "out": "dtype = np.int"}
{"in": "ラベンダーブラッシュ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lavenderblush')"}
{"in": "option: ブール型を使う", "out": "dtype = np.int32"}
{"in": "データフレームをインポートする", "out": "import pandas as pd"}
{"in": "rgbのポイントマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='.', c=rgb)"}
{"in": "リネン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='linen')"}
{"in": "折れ線グラフをスチールブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='steelblue')"}
{"in": "折れ線グラフをブルーバイオレット色で描画する", "out": "plt.plot(データ列x, データ列y, color='blueviolet')"}
{"in": "日付データををn日後に進める", "out": "aDate + datetime.timedelta(days=n)"}
{"in": "配列の尖度を求める", "out": "scipy.stats.kurtosis(配列, bias=False)"}
{"in": "ライトコーラル色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightcoral')"}
{"in": "散布図の色を紺にする", "out": "plt.scatter(データ列x, データ列y, color='darkblue')"}
{"in": "横棒グラフの色をデピンクにする", "out": "plt.barh(データ列x, データ列y, color='deeppink')"}
{"in": "文字列中の文字を列挙する", "out": "list(s)"}
{"in": "タプルを引数として展開して表示する", "out": "print(*aTuple)"}
{"in": "option: ホットピンク色を使う", "out": "color = 'hotpink'"}
{"in": "データフレームをCSVファイルにSJISで保存する", "out": "df.to_csv('file.csv', encoding='shift_jis')"}
{"in": "リストから配列を作る", "out": "np.array(aList)"}
{"in": "ラベンダー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lavender')"}
{"in": "リストとリストについて散布図を描画して、右三角マーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='>', c=rgb)"}
{"in": "option: グラフの色をデピンクに設定する", "out": "color = 'deeppink'"}
{"in": "散布図の色をゴーストホワイトにする", "out": "plt.scatter(データ列x, データ列y, color='ghostwhite')"}
{"in": "option: マーカーの色をディムグレーにする", "out": "markerfacecolor = 'dimgray'"}
{"in": "最大長を指定して、両端キュー", "out": "collections.deque(maxlen=n)"}
{"in": "タプルを展開してプリントする", "out": "print(*aTuple)"}
{"in": "エクセルファイルのシートをデータフレームとして読み込む", "out": "pd.read_excel('file.xlsx', sheet_name=シート名)"}
{"in": "実数を実数で割って、切り捨てる", "out": "x // y"}
{"in": "文字列を青色でプリントできる文字列に変換する", "out": "f'\\033[34m{value}\\033[0m'"}
{"in": "縦棒グラフを描画して、ラベルを中央寄せする", "out": "plt.bar(ラベル列, データ列, align='center')"}
{"in": "データフレームを十の位で丸めて、整数型にする", "out": "df.round(-1).astype(int)"}
{"in": "配列のn次モーメントを求める", "out": "scipy.stats.moment(配列, moment=n)"}
{"in": "n個の集まりからk個重複なく選ぶ方法", "out": "math.comb(n, k)"}
{"in": "星マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='*')"}
{"in": "実数の正弦", "out": "math.sin(x)"}
{"in": "折れ線グラフをダークカーキ色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkkhaki')"}
{"in": "散布図のマーカーを右三角にする", "out": "plt.scatter(データ列x, データ列y, marker='>')"}
{"in": "ライトスカイブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightskyblue')"}
{"in": "リストの先頭", "out": "aList[0]"}
{"in": "横棒グラフをダークバイオレット色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkviolet')"}
{"in": "実行時の標準出力の出力先がターミナルか調べる", "out": "os.isatty(sys.stdin.fileno())"}
{"in": "データフレームの選択したカラムの要約統計量", "out": "df[['列A', '列B']].describe()"}
{"in": "nがn2の倍数か調べる", "out": "n % n2 == 0"}
{"in": "フィッシャーの線形判別分類を行う", "out": "model = sklearn.manifold.TSNE(n_components=n)"}
{"in": "折れ線グラフの色をイエローグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='yellowgreen')"}
{"in": "nがn2の倍数でないか調べる", "out": "n % n2 != 0"}
{"in": "option: フォレストグリーン色を使う", "out": "color = 'forestgreen'"}
{"in": "辞書のコピー", "out": "dict(aDict)"}
{"in": "本日の日数", "out": "datetime.datetime.today().day"}
{"in": "バツ印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='x')"}
{"in": "シスル色のヒストグラムを描画する", "out": "plt.hist(データ列, color='thistle')"}
{"in": "青色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='blue')"}
{"in": "option: マーカーの色をダークオレンジにする", "out": "markerfacecolor = 'darkorange'"}
{"in": "棒グラフの色をダークスレートブルーにする", "out": "plt.bar(データ列x, データ列y, color='darkslateblue')"}
{"in": "日付データからn秒分、減算する", "out": "aDate - datetime.timedelta(seconds=n)"}
{"in": "配列の標準誤差を求める", "out": "scipy.stats.sem(配列)"}
{"in": "ヒストグラムを茶色色で描画する", "out": "plt.hist(データ列, color='brown')"}
{"in": "横棒グラフをオレンジ色で描画する", "out": "plt.barh(データ列x, データ列y, color='orange')"}
{"in": "ヒストグラムを二つ並べて描画する", "out": "plt.hist([データ列, データ列], color=['b', 'r'])"}
{"in": "散布図をパールバイオレットレッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='palevioletred')"}
{"in": "折れ線グラフをダークグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkgrey')"}
{"in": "ヒストグラムを描画し、合計を1にする", "out": "plt.hist(データ列, density=True)"}
{"in": "データフレームの中に文字列と文字列がいくつあるか数える", "out": "df.isin([value, value2]).sum()"}
{"in": "0からnまでのスライス", "out": "slice(n)"}
{"in": "リストを逆順にする", "out": "aList[::-1]"}
{"in": "整数nのバイト長", "out": "(n.bit_length() + 7) // 8"}
{"in": "黒い折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='k')"}
{"in": "日付データをタプルに変換する", "out": "aDate.timetuple()"}
{"in": "データフレームをある列の値によってグループ化して、列挙する", "out": "[(name, group_df) for name, group_df in df.groupby('列A')]"}
{"in": "ディープスカイブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='deepskyblue')"}
{"in": "リストとリストについての散布図に赤い大バツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='X', c='r')"}
{"in": "白色のヒストグラムを描画する", "out": "plt.hist(データ列, color='white')"}
{"in": "option: グラフの色をライトゴールドロディイエローに設定する", "out": "color = 'lightgoldenrodyellow'"}
{"in": "リストの先頭のn要素を取り除く", "out": "aList[n:]"}
{"in": "データフレームの列名をリストで置き換える", "out": "df.columns = columns"}
{"in": "日付データが何年か知る", "out": "aDate.year"}
{"in": "データフレームの全カラムの相関を可視化する", "out": "sns.pairplot(df)"}
{"in": "ミディアムスプリンググリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "日付時刻データの分数", "out": "aDatetime.minute"}
{"in": "イテラブルのそれぞれを関数でフィルタする", "out": "filter(func, iterable)"}
{"in": "散布図に青い大バツマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='b')"}
{"in": "黒いダイアモンドマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='D', c='k')"}
{"in": "散布図の色をミッドナイトブルーにする", "out": "plt.scatter(データ列x, データ列y, color='midnightblue')"}
{"in": "折れ線グラフの右三角マーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='>', markerfacecolor='r')"}
{"in": "整数nがタプルのどれかか調べる", "out": "n in aTuple"}
{"in": "線形回帰分析の準備をする", "out": "model = sklearn.linear_model.LinearRegression()"}
{"in": "日付時刻データからn日分、減算する", "out": "aDatetime - datetime.timedelta(days=n)"}
{"in": "option: マーカーの色をローングリーンにする", "out": "markerfacecolor = 'lawngreen'"}
{"in": "カウンタの最頻出な項目", "out": "aCounter.most_common()[0]"}
{"in": "ライトグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightgreen')"}
{"in": "CSVファイルのn行目をインデックスとして読み込む", "out": "pd.read_csv('file.csv', index_col=n)"}
{"in": "横棒グラフを青緑色で描画する", "out": "plt.barh(データ列x, データ列y, color='teal')"}
{"in": "リストの要素をソートする", "out": "sorted(aList)"}
{"in": "横棒グラフを積み上げにする", "out": "plt.barh(ラベル列, データ列, bottom=データ列y, color='#800080')"}
{"in": "データシリーズの第三四分位数", "out": "ds.quantile(0.75)"}
{"in": "折れ線グラフの色を青緑に設定する", "out": "plt.plot(データ列x, データ列y, color='teal')"}
{"in": "散布図の色をプラムにする", "out": "plt.scatter(データ列x, データ列y, color='plum')"}
{"in": "散布図のマーカーの大きさを指定する", "out": "plt.scatter(データ列x, データ列y, s=n)"}
{"in": "最初のカテゴリーを除外してデータフレームのある列をダミー変数に変換する", "out": "pd.get_dummies(df['列A'], drop_first=True)"}
{"in": "データフレームから指定した二つの列を抽出する", "out": "df[['列A', '列B']]"}
{"in": "空のリスト", "out": "[]"}
{"in": "ある列の値がx以上、y以下の行を抽出する", "out": "df[(x <= df['列A']) & (df['列A'] <= y)]"}
{"in": "option: インディアンレッド色を使う", "out": "color = 'indianred'"}
{"in": "データを最大値と最小値で正規化する", "out": "sklearn.preprocessing.MinMaxScaler().fit_transform(データ)"}
{"in": "データフレームの欠損値を平均値で埋める", "out": "df.fillna(df.mean())"}
{"in": "散布図の大バツマーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='k')"}
{"in": "折れ線グラフの色をダークオーキッドに設定する", "out": "plt.plot(データ列x, データ列y, color='darkorchid')"}
{"in": "option: グラフの色をスチールブルーに設定する", "out": "color = 'steelblue'"}
{"in": "option: ダークマゼンタ色を使う", "out": "color = 'darkmagenta'"}
{"in": "イテラブルを文字列リストに変換して、'改行で連結する", "out": "'\\n'.join(map(str, iterable))"}
{"in": "散布図をライトグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightseagreen')"}
{"in": "nプラスn2", "out": "n + n2"}
{"in": "棒グラフの色をダークゴールデンロッドにする", "out": "plt.bar(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "データフレームを二つの列によってソートする", "out": "df.sort_values(by=['列A', '列B'])"}
{"in": "ヒストグラムをコーラル色で描画する", "out": "plt.hist(データ列, color='coral')"}
{"in": "折れ線グラフの四角マーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='s', markersize=2.0)"}
{"in": "データフレームからn行、サンプリングする", "out": "df.sample(n)"}
{"in": "黄色色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='yellow')"}
{"in": "リストの末尾を取り除く", "out": "aList[:-1]"}
{"in": "ヒストグラムをライトゴールドロディイエロー色で描画する", "out": "plt.hist(データ列, color='lightgoldenrodyellow')"}
{"in": "数式の数値を求める", "out": "float(e)"}
{"in": "option: グラフの色をシアンに設定する", "out": "color = 'cyan'"}
{"in": "日付データをISO形式の文字列に変換する", "out": "aDate.isoformat()"}
{"in": "スチールブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='steelblue')"}
{"in": "option: グラフの色をスラグレーに設定する", "out": "color = 'slategrey'"}
{"in": "日付時刻データからn週間分、減算する", "out": "aDatetime - datetime.timedelta(weeks=n)"}
{"in": "option: グラフの色をコーンフラワーブルーに設定する", "out": "color = 'cornflowerblue'"}
{"in": "配列の累積積", "out": "np.cumprod(aArray)"}
{"in": "棒グラフの色をパールゴールデンロッドにする", "out": "plt.bar(データ列x, データ列y, color='palegoldenrod')"}
{"in": "文字列中の部分文字列の出現をカウントする", "out": "s.count(sub)"}
{"in": "年月日と時刻から日付時刻", "out": "datetime.datetime(年, 月, 日, 時, 分, 秒)"}
{"in": "データフレームの欠損値を最小値で埋める", "out": "df.fillna(df.min())"}
{"in": "データフレームの列の種類", "out": "df.info()"}
{"in": "列名を指定して二つのデータフレームを左ジョインする", "out": "pd.merge(df, df2, on='列A', how='left')"}
{"in": "棒グラフの色をコーンフラワーブルーにする", "out": "plt.bar(データ列x, データ列y, color='cornflowerblue')"}
{"in": "データフレームをソートして、上位n件を取り出す", "out": "df.sort_values('キーとなる列').head(n)"}
{"in": "折れ線グラフをミスティローズ色で描画する", "out": "plt.plot(データ列x, データ列y, color='mistyrose')"}
{"in": "option: マーカーの色をベージュにする", "out": "markerfacecolor = 'beige'"}
{"in": "散布図に大バツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='X')"}
{"in": "option: マーカーの大きさを変更する", "out": "markersize = 2.0"}
{"in": "スピアマン相関係数でデータフレームの選択した列の相関行列を求める", "out": "df[['列A', '列B']].corr(method='spearman')"}
{"in": "option: マーカーの色をオーキッドにする", "out": "markerfacecolor = 'orchid'"}
{"in": "リストとリストについての散布図にrgbの四角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='s', c=rgb)"}
{"in": "option: マーカーの色をピンクにする", "out": "markerfacecolor = 'pink'"}
{"in": "option: グラフの色をパールバイオレットレッドに設定する", "out": "color = 'palevioletred'"}
{"in": "文字列の開始位置からと終了位置の間に部分文字列が含まれるか調べる", "out": "s.find(sub, start, end) != -1"}
{"in": "ヒストグラムベースの勾配ブースティング回帰木を作る", "out": "model = sklearn.ensemble.HistGradientBoostingRegressor()"}
{"in": "ランダム性を強化したランダムフォレストでクラス分類を行う", "out": "model = sklearn.ensemble.ExtraTreeClassifier(n_estimators=10)"}
{"in": "異なるn個のものからk個選ぶ場合の数", "out": "math.comb(n, k)"}
{"in": "グラフの横軸を対数に変更する", "out": "plt.xscale('log')"}
{"in": "配列の偏差値を求める", "out": "50 + 10 * scipy.stats.zscore(配列)"}
{"in": "データフレームの選択したカラムの値をValueMapでまとめて置き換える", "out": "df[['列A', '列B']].replace(ValueMap)"}
{"in": "折れ線グラフの色をチョコレートに設定する", "out": "plt.plot(データ列x, データ列y, color='chocolate')"}
{"in": "長さnのリスト", "out": "[0] * n"}
{"in": "ライトイエロー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightyellow')"}
{"in": "横棒グラフを赤くする", "out": "plt.barh(データ列x, データ列y, color='r')"}
{"in": "パレットトルコイズ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='paleturquoise')"}
{"in": "折れ線グラフをコーンフラワーブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='cornflowerblue')"}
{"in": "グラフをスライド用に設定する", "out": "sns.set(context='talk')"}
{"in": "ライトグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightgrey')"}
{"in": "ヒストグラムをハニーデュー色で描画する", "out": "plt.hist(データ列, color='honeydew')"}
{"in": "横棒グラフをカーキ色で描画する", "out": "plt.barh(データ列x, データ列y, color='khaki')"}
{"in": "option: グラフの色を暗い赤に設定する", "out": "color = 'darkred'"}
{"in": "横棒グラフをライトブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightblue')"}
{"in": "option: マーカーの色を白にする", "out": "markerfacecolor = 'white'"}
{"in": "横棒グラフを青紫色で描画する", "out": "plt.barh(データ列x, データ列y, color='violet')"}
{"in": "折れ線グラフの色をライトグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='lightgrey')"}
{"in": "データフレーム中の欠損値をドロップする", "out": "df.dropna(inplace=True)"}
{"in": "青緑色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='teal')"}
{"in": "ヒストグラムをミスティローズ色で描画する", "out": "plt.hist(データ列, color='mistyrose')"}
{"in": "option: グラフの色をカーキに設定する", "out": "color = 'khaki'"}
{"in": "散布図の色をライトスレイグレーにする", "out": "plt.scatter(データ列x, データ列y, color='lightslategrey')"}
{"in": "option: マーカーの色をミディアムシアグリーンにする", "out": "markerfacecolor = 'mediumseagreen'"}
{"in": "nがn2よりも大きいか調べる", "out": "n > n2"}
{"in": "整数乱数で要素を埋めた行列", "out": "np.random.randint(開始値, 終了値, (行数, 列数))"}
{"in": "散布図の色をフローラルホワイトにする", "out": "plt.scatter(データ列x, データ列y, color='floralwhite')"}
{"in": "ライム色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lime')"}
{"in": "折れ線グラフの右三角マーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='>', markerfacecolor='#800080')"}
{"in": "折れ線グラフに右三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='>')"}
{"in": "データシリーズの欠損値をxで埋める", "out": "ds.fillna(x)"}
{"in": "文字コードを文字に変換する", "out": "chr(unicode)"}
{"in": "要素が辞書の値に含まれていないか調べる", "out": "element not in aDict.values()"}
{"in": "青い一点鎖線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot', color='b')"}
{"in": "ライトイエロー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightyellow')"}
{"in": "シアン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='cyan')"}
{"in": "プログラムの実行を強制的に終了する", "out": "sys.exit()"}
{"in": "オブジェクトをデバッグ向けの文字列に変換する", "out": "repr(obj)"}
{"in": "文字列全体が正規表現に複数行対応としてマッチするか見る", "out": "re.fullmatch(pattern, s, flags=re.MULTILINE)"}
{"in": "集合の全ての要素が別の集合に含まれるか調べる", "out": "aSet.issubset(aSet2)"}
{"in": "ヒストグラムをミディアムアクアマリン色で描画する", "out": "plt.hist(データ列, color='mediumaquamarine')"}
{"in": "データフレームのあるカラムが何年か見る", "out": "df['列A'].dt.year"}
{"in": "option: グラフの色をクリムゾンに設定する", "out": "color = 'crimson'"}
{"in": "データフレームの選択したカラムの標本分散", "out": "df[['列A', '列B']].var(ddof=0)"}
{"in": "ケンドール相関係数でデータフレームの選択した列の相関行列を求める", "out": "df[['列A', '列B']].corr(method='kendall')"}
{"in": "option: 追加モードに設定する", "out": "mode = 'a'"}
{"in": "グラフの見栄えを良くする", "out": "import seaborn as sns"}
{"in": "データ列のエポック秒を日付データに変換する", "out": "pd.to_datetime(ds, unit='s', utc=True)"}
{"in": "折れ線グラフをホットピンク色で描画する", "out": "plt.plot(データ列x, データ列y, color='hotpink')"}
{"in": "散布図のポイントマーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='.', markersize=2.0)"}
{"in": "文字列の右側から部分文字列を取り除く", "out": "s.rstrip(sub)"}
{"in": "青い破線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed', color='b')"}
{"in": "ヒストグラムの色をロイヤルブルーに設定する", "out": "plt.hist(データ列, color='royalblue')"}
{"in": "黒い右三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='>', c='k')"}
{"in": "折れ線グラフに黒いポイントマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='.', markerfacecolor='k')"}
{"in": "文字列を二分する", "out": "s.partition(sep)"}
{"in": "散布図にrgbの大バツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='X', c=rgb)"}
{"in": "itertoolsモジュールをインポートする", "out": "import itertools"}
{"in": "棒グラフをシルバー色で描画する", "out": "plt.bar(データ列x, データ列y, color='silver')"}
{"in": "ファイルを追加できるようにオープンする]", "out": "open(filepath, mode='a')"}
{"in": "第二コマンド引数", "out": "sys.argv[1]"}
{"in": "文字列の接頭辞が部分文字列か調べる", "out": "s.startswith(sub)"}
{"in": "osモジュールをインポートする", "out": "import os"}
{"in": "サポートベクターマシンで回帰分析を行う", "out": "model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)"}
{"in": "散布図の三角マーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='k')"}
{"in": "棒グラフをターコイズ色で描画する", "out": "plt.bar(データ列x, データ列y, color='turquoise')"}
{"in": "文字列を最後の部分文字列で二分し、後半の文字列を使う", "out": "s.rpartition(sub)[-1]"}
{"in": "配列の列ごとの合計値", "out": "np.sum(aArray, axis=0)"}
{"in": "option: バリーウッド色を使う", "out": "color = 'burlywood'"}
{"in": "option: タブをセパレータで使う", "out": "sep = '\\t'"}
{"in": "イテラブルのコンビネーション", "out": "itertools.combinations(iterable, n)"}
{"in": "縦棒グラフを描画して、ラベルを左寄せする", "out": "plt.bar(ラベル列, データ列, align='edge')"}
{"in": "実数の余弦の逆数", "out": "math.acos(x)"}
{"in": "折れ線グラフのポイントマーカーを黒くする", "out": "plt.plot(データ列x, データ列y, marker='.', markerfacecolor='k')"}
{"in": "棒グラフの色をチョコレートにする", "out": "plt.bar(データ列x, データ列y, color='chocolate')"}
{"in": "イテラブルとイテラブルをペアのリストにする", "out": "itertools.zip_longest(iterable, iterable2)"}
{"in": "シーグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='seagreen')"}
{"in": "横棒グラフの縦幅を調整する", "out": "plt.barh(ラベル列, データ列, width=0.5)"}
{"in": "散布図をペールグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='palegreen')"}
{"in": "option: マーカーの色をダークターコイズにする", "out": "markerfacecolor = 'darkturquoise'"}
{"in": "データ列をビン数nでビン分割して、namesのラベルをつける", "out": "pd.cut(ds, n, labels=names)"}
{"in": "ライトゴールドロディイエロー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "横棒グラフの色をコーラルにする", "out": "plt.barh(データ列x, データ列y, color='coral')"}
{"in": "棒グラフの色をリネンにする", "out": "plt.bar(データ列x, データ列y, color='linen')"}
{"in": "space", "out": "' '"}
{"in": "ヒストグラムをシエナ色で描画する", "out": "plt.hist(データ列, color='sienna')"}
{"in": "横棒グラフの色を淡いピンク色にする", "out": "plt.barh(データ列x, データ列y, color='lightpink')"}
{"in": "棒グラフの色をアクアにする", "out": "plt.bar(データ列x, データ列y, color='aqua')"}
{"in": "データシリーズの不偏分散", "out": "ds.var(ddof=1)"}
{"in": "システム時刻で乱数を初期化する", "out": "random.seed()"}
{"in": "現在の再帰の最大回数", "out": "sys.getrecursionlimit()"}
{"in": "日付データが木曜日か調べる", "out": "aDate.weekday() == 3"}
{"in": "グリッド線を黄色くする", "out": "plt.grid(color='y')"}
{"in": "横棒グラフをオレンジレッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='orangered')"}
{"in": "タプルの先頭を取り除く", "out": "aTuple[1:]"}
{"in": "option: レモンシフォン色を使う", "out": "color = 'lemonchiffon'"}
{"in": "実数の常用対数", "out": "math.log10(x)"}
{"in": "正規分布による確率密度関数", "out": "scipy.stats.norm.pdf(x, loc=平均値, scale=標準偏差)"}
{"in": "ファイルからストリームをオープンして]、fileとする", "out": "file = open(filepath)"}
{"in": "二つの辞書をチェーンする", "out": "collections.ChainMap(aDict, aDict2)"}
{"in": "文字列全体が正規表現にマッチするか見る", "out": "re.fullmatch(pattern, s)"}
{"in": "ヒストグラムの色をフクシアに設定する", "out": "plt.hist(データ列, color='fuchsia')"}
{"in": "配列のトリム分散を求める", "out": "scipy.stats.tvar(配列, limits=(下限, 上限), inclusive=(True, True))"}
{"in": "棒グラフの色をミディアムスレートブルーにする", "out": "plt.bar(データ列x, データ列y, color='mediumslateblue')"}
{"in": "横棒グラフを描画して、ラベルを下寄せする", "out": "plt.barh(ラベル列, データ列, align='edge')"}
{"in": "茶色色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='brown')"}
{"in": "option: ダイアモンドマーカーを描画する", "out": "marker = 'D'"}
{"in": "ファイルとfilenameを結合する", "out": "os.path.join(filepath, filename)"}
{"in": "散布図をサンディーブラウン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='sandybrown')"}
{"in": "配列の全要素を指定の値にする", "out": "aArray[:, :] = 指定の値"}
{"in": "ホワイトスモーク色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='whitesmoke')"}
{"in": "暗い赤色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkred')"}
{"in": "折れ線グラフの色をミディアムオーキッドに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumorchid')"}
{"in": "option: グラフの色をダークゴールデンロッドに設定する", "out": "color = 'darkgoldenrod'"}
{"in": "指定した列のカテゴリで集計し、それぞれの最大値を求める", "out": "df.groupby('列A').max()"}
{"in": "データフレームの平均と信頼区間を描画する", "out": "sns.pairplot(hue='カテゴリ列', data=df)"}
{"in": "エラーを出力する", "out": "sys.stderr"}
{"in": "データシリーズの文字列を欠損値に変換する", "out": "ds.replace(値, np.nan)"}
{"in": "文字列をシンボルにして、変数にする", "out": "z = sympy.Symbol(s)"}
{"in": "散布図をナバホホワイト色で描画する", "out": "plt.scatter(データ列x, データ列y, color='navajowhite')"}
{"in": "折れ線グラフの色を暗い赤に設定する", "out": "plt.plot(データ列x, データ列y, color='darkred')"}
{"in": "option: グラフの色をタンに設定する", "out": "color = 'tan'"}
{"in": "全要素を初期値で初期化した配列", "out": "np.full(要素数, 初期値, dtype=np.int)"}
{"in": "コーパスのバージョン", "out": "version = 'wcce2022-0.1'"}
{"in": "アリスブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='aliceblue')"}
{"in": "ディムグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='dimgrey')"}
{"in": "ヒストグラムの色をダークシアンに設定する", "out": "plt.hist(データ列, color='darkcyan')"}
{"in": "ミスティローズ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='mistyrose')"}
{"in": "データフレームをある列によって降順にソートする", "out": "df.sort_values(by='列A', ascending=False)"}
{"in": "スノー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='snow')"}
{"in": "データ列の偏りを対数変換する", "out": "np.log(データ列)"}
{"in": "実数の双曲線余弦の逆数", "out": "math.acosh(x)"}
{"in": "棒グラフをアンティークホワイト色で描画する", "out": "plt.bar(データ列x, データ列y, color='antiquewhite')"}
{"in": "折れ線グラフをハニーデュー色で描画する", "out": "plt.plot(データ列x, データ列y, color='honeydew')"}
{"in": "ダークサーモン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darksalmon')"}
{"in": "データフレームの欠損値をxで埋める", "out": "df.fillna(x)"}
{"in": "二つのデータ列の残差を散布図として描画する", "out": "sns.residplot(x=データ列, y=データ列)"}
{"in": "グラフ描画でカーネル密度推定を使う", "out": "sns.kdeplot(x='列名', hue='カテゴリ列', data=df)"}
{"in": "事前に正規表現をコンパイルする", "out": "re.compile(pattern)"}
{"in": "ファイル全体を行単位で分割して読み込む", "out": "f.readlines()"}
{"in": "横棒グラフの色をダークカーキにする", "out": "plt.barh(データ列x, データ列y, color='darkkhaki')"}
{"in": "コーンズシルク色のヒストグラムを描画する", "out": "plt.hist(データ列, color='cornsilk')"}
{"in": "散布図をミディアムスプリンググリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "option: マーカーの色をアンティークホワイトにする", "out": "markerfacecolor = 'antiquewhite'"}
{"in": "リストとリストについての散布図に黒いポイントマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='.', c='k')"}
{"in": "option: グラフの色をスラグレーに設定する", "out": "color = 'slategray'"}
{"in": "データフレームが正規分布からどの程度、尖っているか見る", "out": "df.skew()"}
{"in": "グラフの凡例の位置を(x,y)に設定する", "out": "plt.legend(loc=(x, y))"}
{"in": "両端キュー中の要素のインデックス", "out": "deq.index(element)"}
{"in": "棒グラフの色をコーンズシルクにする", "out": "plt.bar(データ列x, データ列y, color='cornsilk')"}
{"in": "データフレームの列の名前をまとめて置換する", "out": "df.columns = [str(x).replace(s, s2) for x in df.columns]"}
{"in": "option: スラッシュをセパレータで使う", "out": "sep = '/'"}
{"in": "日付時刻データの日付", "out": "aDatetime.date()"}
{"in": "カデットブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='cadetblue')"}
{"in": "保存するCSVファイルの小数点以下の桁数を設定する", "out": "df.to_csv('file.csv', float_format='%.3f')"}
{"in": "リストとリストについての散布図に文字列という凡例用のラベルを付ける", "out": "plt.scatter(データ列x, データ列y, label=s)"}
{"in": "リストとリストについての散布図に赤いポイントマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='.', c='r')"}
{"in": "データシリーズの尖度", "out": "ds.skew()"}
{"in": "文字列の開始位置と終了位置の間に部分文字列が含まれるか調べる", "out": "s.find(sub, start, end) != -1"}
{"in": "折れ線グラフをダークオレンジ色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkorange')"}
{"in": "データフレームの指定したカラムの歪度", "out": "df['列A'].kurt()"}
{"in": "全ての印字可能な文字", "out": "string.printable"}
{"in": "ヒストグラムをオレンジ色で描画する", "out": "plt.hist(データ列, color='orange')"}
{"in": "ヒストグラムをダークサーモン色で描画する", "out": "plt.hist(データ列, color='darksalmon')"}
{"in": "横棒グラフをライトイエロー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lightyellow')"}
{"in": "棒グラフを青色で描画する", "out": "plt.bar(データ列x, データ列y, color='blue')"}
{"in": "配列の要素数", "out": "aArray.size"}
{"in": "グリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='green')"}
{"in": "横棒グラフの色をシエナにする", "out": "plt.barh(データ列x, データ列y, color='sienna')"}
{"in": "option: グラフの色をシスルに設定する", "out": "color = 'thistle'"}
{"in": "散布図のバツマーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='r')"}
{"in": "option: グラフの色をミディアムターコイズに設定する", "out": "color = 'mediumturquoise'"}
{"in": "折れ線グラフを色付きの点線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted', color='#800080')"}
{"in": "横棒グラフの色をグレーにする", "out": "plt.barh(データ列x, データ列y, color='gray')"}
{"in": "集合から別の集合との共通要素を全て取り除く", "out": "aSet.symmetric_difference_update(aSet2)"}
{"in": "黄色色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='yellow')"}
{"in": "ヒストグラムを紺碧色で描画する", "out": "plt.hist(データ列, color='azure')"}
{"in": "オレンジ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='orange')"}
{"in": "横棒グラフの色をドジャーブルーにする", "out": "plt.barh(データ列x, データ列y, color='dodgerblue')"}
{"in": "棒グラフをアクア色で描画する", "out": "plt.bar(データ列x, データ列y, color='aqua')"}
{"in": "パールゴールデンロッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='palegoldenrod')"}
{"in": "nまでの奇整数列", "out": "list(range(1, n, 2))"}
{"in": "データフレームの中の列をビン数nでビン分割して、namesのラベルをつける", "out": "pd.cut(df[col], n, labels=names)"}
{"in": "year年month月の日付", "out": "datetime.date(year=year, month=month, day=1)"}
{"in": "カテゴリで色分けして、カーネル密度分布を描画する", "out": "sns.kdeplot(x='列名', hue='カテゴリ列', data=df)"}
{"in": "折れ線グラフの色をダークスレートブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='darkslateblue')"}
{"in": "ヒストグラムをシルバー色で描画する", "out": "plt.hist(データ列, color='silver')"}
{"in": "データフレームの中の列をビン分割する", "out": "pd.cut(df[col], aList)"}
{"in": "パープル色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='purple')"}
{"in": "棒グラフをグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='gray')"}
{"in": "データフレームをソートして、インデックスを振り直す", "out": "df.sort_values('キーとなる列').reset_index(drop=True)"}
{"in": "数式の変数に数式を代入する", "out": "e.subs(z, e2)"}
{"in": "ヒストグラムの色をスレートブルーに設定する", "out": "plt.hist(データ列, color='slateblue')"}
{"in": "散布図に青い右三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='b')"}
{"in": "折れ線グラフの色を白に設定する", "out": "plt.plot(データ列x, データ列y, color='white')"}
{"in": "ターコイズ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='turquoise')"}
{"in": "散布図の色をパープルにする", "out": "plt.scatter(データ列x, データ列y, color='purple')"}
{"in": "散布図をコーンフラワーブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='cornflowerblue')"}
{"in": "紺色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkblue')"}
{"in": "nのn2乗", "out": "n ** n2"}
{"in": "データフレームの指定したカラムの欠損値を中央値に設定する", "out": "df['列A'].fillna(df['列A'].median())"}
{"in": "データフレームの指定したカラムの欠損値を最小値に設定する", "out": "df['列A'].fillna(df['列A'].min())"}
{"in": "ヒストグラムの色をミディアムアクアマリンに設定する", "out": "plt.hist(データ列, color='mediumaquamarine')"}
{"in": "折れ線グラフのダイアモンドマーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='D', markerfacecolor='b')"}
{"in": "グラフで使うフォントを指定する", "out": "sns.set(font=フォント名)"}
{"in": "option: マーカーの色をアクアマリンにする", "out": "markerfacecolor = 'aquamarine'"}
{"in": "数式の変数を数式で置き換える", "out": "e.subs(z, e2)"}
{"in": "散布図の丸マーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='b')"}
{"in": "スラグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='slategrey')"}
{"in": "整数nの十六進表現", "out": "hex(n)"}
{"in": "日付データと日付データの時間差", "out": "aDate - aDate2"}
{"in": "ダークスレートブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkslateblue')"}
{"in": "散布図にrgbの四角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='s', c=rgb)"}
{"in": "横軸の最大・最小を変更する", "out": "plt.xlim(最小値, 最大値)"}
{"in": "オプションで、標準出力に出力する", "out": "file = sys.stdout"}
{"in": "ある列のカテゴリごとの個数", "out": "df.groupby('列A').count()"}
{"in": "データフレームの選択したカラムを百の位で丸めて、整数型にする", "out": "df[['列A', '列B']].round(-2).astype(int)"}
{"in": "折れ線グラフの色をグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='green')"}
{"in": "nからn2までのstepごとによるスライス", "out": "slice(n, n2, step)"}
{"in": "データフレームの選択したカラムの母標準偏差", "out": "df[['列A', '列B']].std(ddof=0)"}
{"in": "配列の標準偏差", "out": "np.std(aArray)"}
{"in": "棒グラフをドジャーブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='dodgerblue')"}
{"in": "データフレームを表示するとき、ヘッダー行を右寄せに設定する", "out": "pd.set_option('colheader_justify', 'right')"}
{"in": "散布図の色をマルーンにする", "out": "plt.scatter(データ列x, データ列y, color='maroon')"}
{"in": "棒グラフをスラグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='slategray')"}
{"in": "文字列の長さ", "out": "len(s)"}
{"in": "整数nの八進文字列", "out": "oct(n)[2:]"}
{"in": "スノー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='snow')"}
{"in": "文字列がn回繰り返すイテラブル", "out": "itertools.repeat(element, n)"}
{"in": "データフレームを二つの列によってまとめたグループ", "out": "df.groupby(['列A', '列B'])"}
{"in": "散布図の色をダークオーキッドにする", "out": "plt.scatter(データ列x, データ列y, color='darkorchid')"}
{"in": "ロイヤルブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='royalblue')"}
{"in": "option: グラフの色をミントクリームに設定する", "out": "color = 'mintcream'"}
{"in": "ヒストグラムを赤色で描画する", "out": "plt.hist(データ列, color='red')"}
{"in": "最大長nの両端キューをイテラブルから作る", "out": "collections.deque(iterable, maxlen=n)"}
{"in": "option: シーグリーン色を使う", "out": "color = 'seagreen'"}
{"in": "折れ線グラフの三角マーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='^', markerfacecolor='r')"}
{"in": "横棒グラフをラベンダー色で描画する", "out": "plt.barh(データ列x, データ列y, color='lavender')"}
{"in": "棒グラフの色をダークスラテグレーにする", "out": "plt.bar(データ列x, データ列y, color='darkslategray')"}
{"in": "赤い破線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed', color='r')"}
{"in": "散布図の色をライトサーモンにする", "out": "plt.scatter(データ列x, データ列y, color='lightsalmon')"}
{"in": "xを整数に変換する", "out": "int(x)"}
{"in": "実数の双曲線正接の逆数", "out": "math.atanh(x)"}
{"in": "文字列を全て小文字に変換する", "out": "s.casefold()"}
{"in": "両端キューから部分を取り出す", "out": "collections.deque(itertools.islice(deq, start, end))"}
{"in": "ベージュ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='beige')"}
{"in": "棒グラフの色をペルーにする", "out": "plt.bar(データ列x, データ列y, color='peru')"}
{"in": "ゴーストホワイト色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='ghostwhite')"}
{"in": "オブジェクトはリストかタプルか調べる", "out": "isinstance(obj, (list)"}
{"in": "折れ線グラフの色をライトコーラルに設定する", "out": "plt.plot(データ列x, データ列y, color='lightcoral')"}
{"in": "配列のスピアマンの相関係数を求める", "out": "scipy.stats.spearmanr(配列, 配列2)"}
{"in": "折れ線グラフをスラグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='slategrey')"}
{"in": "横棒グラフの色をディムグレーにする", "out": "plt.barh(データ列x, データ列y, color='dimgrey')"}
{"in": "棒グラフの色を貝殻にする", "out": "plt.bar(データ列x, データ列y, color='seashell')"}
{"in": "データ列間の平方根平均二乗誤差を求める", "out": "np.sqrt(sklearn.metrics.mean_squared_error(データ列, データ列2))"}
{"in": "1からnまでの整数列", "out": "list(range(1, n+1))"}
{"in": "文字を文字コードに変換する", "out": "ord(ch)"}
{"in": "横棒グラフをドジャーブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='dodgerblue')"}
{"in": "カーキ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='khaki')"}
{"in": "散布図の四角マーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='#800080')"}
{"in": "アイボリー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='ivory')"}
{"in": "三つのデータフレームを縦方向に結合する", "out": "pd.concat([df, df2, df3], axis=1)"}
{"in": "実数を十の位で丸める", "out": "round(x, -1)"}
{"in": "折れ線グラフの三角マーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='^', markerfacecolor='#800080')"}
{"in": "リストとリストについての散布図に赤い下三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='v', c='r')"}
{"in": "ヒストグラムをグレー色で描画する", "out": "plt.hist(データ列, color='gray')"}
{"in": "両端キューの先頭にイテラブルの各要素を追加する", "out": "deq.extendleft(iterable)"}
{"in": "ヒストグラムの色をミディアムブルーに設定する", "out": "plt.hist(データ列, color='mediumblue')"}
{"in": "JSONファイルのfをデータに変換する", "out": "json.load(fin)"}
{"in": "aListn番目から要素をポップする", "out": "aList.pop(n)"}
{"in": "散布図にrgbのダイアモンドマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='D', c=rgb)"}
{"in": "ヒストグラムを一点鎖線で描画する", "out": "plt.hist(データ列, linestyle='dashbot')"}
{"in": "データフレームを表示するとき、表示可能な最大行数を変更する", "out": "pd.set_option('display.max_rows', n)"}
{"in": "整数nを十六進表現に変換する", "out": "hex(n)"}
{"in": "カウンタの正の数のみ残す", "out": "+aCounter"}
{"in": "option: ダークシアン色を使う", "out": "color = 'darkcyan'"}
{"in": "散布図をミディアムブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumblue')"}
{"in": "折れ線グラフの色をインディアンレッドに設定する", "out": "plt.plot(データ列x, データ列y, color='indianred')"}
{"in": "オーキッド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='orchid')"}
{"in": "ドジャーブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='dodgerblue')"}
{"in": "nとn2の積", "out": "n * n2"}
{"in": "全要素を1で初期化した配列", "out": "np.ones(要素数, dtype=np.int)"}
{"in": "プラム色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='plum')"}
{"in": "データフレームの中の列を等間隔でn個にビン分割する", "out": "pd.cut(df[col], n)"}
{"in": "データ列を使う", "out": "import pandas as pd"}
{"in": "option: グラフの色をミディアムシアグリーンに設定する", "out": "color = 'mediumseagreen'"}
{"in": "データフレームを関数によってまとめたグループ", "out": "df.groupby(関数)"}
{"in": "パパイヤウィップ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='papayawhip')"}
{"in": "散布図に左三角マーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='<')"}
{"in": "スピアマン相関係数でデータフレームの相関行列を求める", "out": "df.corr(method='spearman')"}
{"in": "option: マーカーの色をクリムゾンにする", "out": "markerfacecolor = 'crimson'"}
{"in": "横棒グラフをゴールデンロッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='goldenrod')"}
{"in": "横棒グラフの色をフローラルホワイトにする", "out": "plt.barh(データ列x, データ列y, color='floralwhite')"}
{"in": "インディゴ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='indigo')"}
{"in": "タイタニック号のデータセットからデータフレームを読み込む", "out": "df = sns.load_dataset('titanic')"}
{"in": "棒グラフを黒くする", "out": "plt.bar(データ列x, データ列y, color='k')"}
{"in": "nにn2を足して代入する", "out": "n += n2"}
{"in": "列名の一覧をデータ型でフィルタする", "out": "df.select_dtypes(型).columns"}
{"in": "'A'列の値がxに等しい行を抽出する", "out": "df[df['列A'] == x]"}
{"in": "散布図の色をタンにする", "out": "plt.scatter(データ列x, データ列y, color='tan')"}
{"in": "ヒストグラムをチョコレート色で描画する", "out": "plt.hist(データ列, color='chocolate')"}
{"in": "option: インデックスを自動的な連番に設定する", "out": "index_col = None"}
{"in": "整数nの二進文字列", "out": "bin(n)[2:]"}
{"in": "現在のタイムスタンプ", "out": "int(time.time())"}
{"in": "データフレームの選択したカラムの欠損値をxに設定する", "out": "df[['列A', '列B']].fillna(x)"}
{"in": "データシリーズの第一四分位数", "out": "ds.quantile(0.25)"}
{"in": "折れ線グラフのポイントマーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='.', markersize=2.0)"}
{"in": "カテゴリで色分けして、データフレームの全カラムの相関を可視化する", "out": "sns.pairplot(df, hue='カテゴリ列')"}
{"in": "散布図の下三角マーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='#800080')"}
{"in": "データフレームの先頭100行", "out": "df.head(100)"}
{"in": "xが1、もしくは2か調べる", "out": "x == 1 or x == 2"}
{"in": "nがn2以上か調べる", "out": "n >= n2"}
{"in": "ヒストグラムをライトシアン色で描画する", "out": "plt.hist(データ列, color='lightcyan')"}
{"in": "nが2で割り切れるか調べる", "out": "n % 2 == 0"}
{"in": "有理数を使う", "out": "import fractions"}
{"in": "散布図をライトグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightgreen')"}
{"in": "折れ線グラフの色をサドルブラウンに設定する", "out": "plt.plot(データ列x, データ列y, color='saddlebrown')"}
{"in": "リストとリストについて散布図を描画して、左三角マーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='<', c=rgb)"}
{"in": "散布図の三角マーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='^', markeredgewidth=2.5)"}
{"in": "option: NaNを無視する", "out": "nan_policy = 'omit'"}
{"in": "ネイビー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='navy')"}
{"in": "棒グラフの色をディムグレーにする", "out": "plt.bar(データ列x, データ列y, color='dimgrey')"}
{"in": "オレンジレッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='orangered')"}
{"in": "カデットブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='cadetblue')"}
{"in": "データフレームを散布図で可視化して、カテゴリ別にマーカーを変える", "out": "sns.scatterplot(data=df, x='列名', y='列名', style='カテゴリ列')"}
{"in": "option: 大文字・小文字を無視する", "out": "flag = re.IGNORECASE"}
{"in": "棒グラフをバリーウッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='burlywood')"}
{"in": "横棒グラフの色を青紫にする", "out": "plt.barh(データ列x, データ列y, color='violet')"}
{"in": "日付時刻データををn秒後に進める", "out": "aDatetime + datetime.timedelta(seconds=n)"}
{"in": "折れ線グラフの色をダークオリーブグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='darkolivegreen')"}
{"in": "折れ線グラフをグリーンイエロー色で描画する", "out": "plt.plot(データ列x, データ列y, color='greenyellow')"}
{"in": "文字列の先頭でASCII限定として正規表現にマッチさせる", "out": "re.match(pattern, s, flags=re.ASCI)"}
{"in": "日付時刻データが日曜日か調べる", "out": "aDatetime.weekday() == 6"}
{"in": "option: グラフの色をライトコーラルに設定する", "out": "color = 'lightcoral'"}
{"in": "アクアマリン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='aquamarine')"}
{"in": "クリムゾン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='crimson')"}
{"in": "リストを等量でビン数nでビン分割する", "out": "pd.qcut(aList, n)"}
{"in": "棒グラフをライトグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='lightgrey')"}
{"in": "オレンジ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='orange')"}
{"in": "棒グラフの色をラベンダーにする", "out": "plt.bar(データ列x, データ列y, color='lavender')"}
{"in": "棒グラフをカーキ色で描画する", "out": "plt.bar(データ列x, データ列y, color='khaki')"}
{"in": "三角印で散布図を描画する", "out": "plt.scatter(データ列x, データ列y, marker='^')"}
{"in": "カウンタから最頻出な項目の件数", "out": "aCounter.most_common()[1]"}
{"in": "辞書に要素をキーとして加える", "out": "aDict[key] = element"}
{"in": "赤い左三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='<', c='r')"}
{"in": "アイボリー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='ivory')"}
{"in": "文字列を下線付きにする", "out": "f'\\033[4m{value}\\033[0m'"}
{"in": "nの桁数", "out": "len(str(n))"}
{"in": "既存の配列を元に全要素が初期値の配列", "out": "np.full_like(aArray, 初期値)"}
{"in": "ディムグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='dimgray')"}
{"in": "データフレームの指定したカラムが正規分布からどの程度、尖っているか見る", "out": "df['列A'].skew()"}
{"in": "ファイルのディレクトリ名", "out": "os.path.dirname(filepath)"}
{"in": "n割るmの有理数表現", "out": "fractions.Fraction(numerator=n, denominator=m)"}
{"in": "ヒストグラムの色をスカイブルーに設定する", "out": "plt.hist(データ列, color='skyblue')"}
{"in": "散布図をブランチドアーモンド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='blanchedalmond')"}
{"in": "リストとリストについて散布図を描画して、バツマーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='x', c=rgb)"}
{"in": "棒グラフをサドルブラウン色で描画する", "out": "plt.bar(データ列x, データ列y, color='saddlebrown')"}
{"in": "棒グラフを暗い赤色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkred')"}
{"in": "散布図のポイントマーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='.', markeredgewidth=2.5)"}
{"in": "option: ドジャーブルー色を使う", "out": "color = 'dodgerblue'"}
{"in": "折れ線グラフの色をダークグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='darkgreen')"}
{"in": "データフレームの指定したカラムの中央値", "out": "df['列A'].median()"}
{"in": "ヒストグラムをゴーストホワイト色で描画する", "out": "plt.hist(データ列, color='ghostwhite')"}
{"in": "カラーバーを付ける", "out": "plt.colorbar()"}
{"in": "文字列の右側から改行を取り除く", "out": "s.rstrip('\\n')"}
{"in": "二つの文字列を順にプリントする", "out": "print(value, value2)"}
{"in": "横棒グラフを茶色色で描画する", "out": "plt.barh(データ列x, データ列y, color='brown')"}
{"in": "ふたつのリストの積集合", "out": "list(set(aList) & set(aList2))"}
{"in": "日付時刻データが月曜日か調べる", "out": "aDatetime.weekday() == 0"}
{"in": "Pythonパスの一覧", "out": "sys.path"}
{"in": "横棒グラフをディープスカイブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='deepskyblue')"}
{"in": "ヒストグラムの色をダークシアグリーンに設定する", "out": "plt.hist(データ列, color='darkseagreen')"}
{"in": "散布図を紺色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkblue')"}
{"in": "タプルの要素を逆順にする", "out": "aTuple[::-1]"}
{"in": "データシリーズの最頻値", "out": "ds.mode()"}
{"in": "データフレームを見る", "out": "df.head()"}
{"in": "データフレームの指定したカラムの欠損値を直後の値に設定する", "out": "df['列A'].fillna(method='bfill')"}
{"in": "nをn2で割った結果を切り上げる", "out": "(n + n2 - 1) // n2"}
{"in": "折れ線グラフのダイアモンドマーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='D', markersize=2.0)"}
{"in": "散布図をタン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='tan')"}
{"in": "二つの浮動小数点数が十分に近いか調べる", "out": "math.isclose(x, x2)"}
{"in": "棒グラフをペルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='peru')"}
{"in": "データフレームからランダムに100行を抽出する", "out": "df.sample(100)"}
{"in": "現在の作業ディレクトリ", "out": "os.getcwd()"}
{"in": "折れ線グラフの色をゴーストホワイトに設定する", "out": "plt.plot(データ列x, データ列y, color='ghostwhite')"}
{"in": "ローングリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lawngreen')"}
{"in": "リストとリストについての散布図に左三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='<')"}
{"in": "データフレームのあるカラムが何曜日か見る", "out": "df['列A'].dt.weekday_name"}
{"in": "折れ線グラフの色をネイビーに設定する", "out": "plt.plot(データ列x, データ列y, color='navy')"}
{"in": "n2がnより大きく、かつ、n3未満か調べる", "out": "n < n2 and n2 < n3"}
{"in": "データフレームの選択したカラムを10の位で丸める", "out": "df[['列A', '列B']].round(-1)"}
{"in": "散布図のバツマーカーを青くする", "out": "plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='b')"}
{"in": "データフレームを千の位で丸めて、整数型にする", "out": "df.round(-3).astype(int)"}
{"in": "文字列内にひとつでも英数字が含まれるか調べる", "out": "any(c.isalnum() for c in s)"}
{"in": "散布図をバリーウッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='burlywood')"}
{"in": "折れ線グラフの色をライトゴールドロディイエローに設定する", "out": "plt.plot(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "折れ線グラフの色をラベンダーに設定する", "out": "plt.plot(データ列x, データ列y, color='lavender')"}
{"in": "散布図に赤いバツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='x', c='r')"}
{"in": "折れ線グラフの色をアンティークホワイトに設定する", "out": "plt.plot(データ列x, データ列y, color='antiquewhite')"}
{"in": "リストをビン分割する", "out": "pd.cut(aList, aList)"}
{"in": "ライトグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='lightgray')"}
{"in": "配列をn個にビン分割して、namesのラベルをつける", "out": "pd.cut(aArray, n, labels=names)"}
{"in": "横棒グラフの色をパウダーブルーにする", "out": "plt.barh(データ列x, データ列y, color='powderblue')"}
{"in": "カウンタの上位を列挙する", "out": "aCounter.most_common(k)"}
{"in": "配列を平坦化する", "out": "aArray.flatten()"}
{"in": "散布図にrgbの下三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='v', c=rgb)"}
{"in": "日付時刻データををn日後に進める", "out": "aDatetime + datetime.timedelta(days=n)"}
{"in": "option: ディープスカイブルー色を使う", "out": "color = 'deepskyblue'"}
{"in": "文字列をシンボルに変換する", "out": "sympy.Symbol(s)"}
{"in": "option: グラフの色をミディアムアクアマリンに設定する", "out": "color = 'mediumaquamarine'"}
{"in": "折れ線グラフの色をオリーブに設定する", "out": "plt.plot(データ列x, データ列y, color='olive')"}
{"in": "散布図の色をシアンにする", "out": "plt.scatter(データ列x, データ列y, color='cyan')"}
{"in": "チョコレート色のヒストグラムを描画する", "out": "plt.hist(データ列, color='chocolate')"}
{"in": "三つのデータフレームを縦方向に結合する", "out": "pd.concat([df, df2, df3], axis=0)"}
{"in": "折れ線グラフの色をコーンフラワーブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='cornflowerblue')"}
{"in": "オプションで、標準エラーを使う", "out": "file = sys.stderr"}
{"in": "棒グラフをミディアムバイオレットレッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumvioletred')"}
{"in": "option: カンマをセパレータで使う", "out": "sep = ','"}
{"in": "集合をタプルに変換する", "out": "tuple(aSet)"}
{"in": "ハニーデュー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='honeydew')"}
{"in": "コーンズシルク色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='cornsilk')"}
{"in": "両端キューの大きさ", "out": "len(deq)"}
{"in": "ある列の値がxに等しく、かつ別の列の値がyに等しい行を抽出する", "out": "df[(df['列A'] == x) & (df['列B'] == y)]"}
{"in": "棒グラフの色を耐火レンガにする", "out": "plt.bar(データ列x, データ列y, color='firebrick')"}
{"in": "有理数を分母の最大値を指定して近似する", "out": "q.limit_denominator(max_denominator=1000000)"}
{"in": "バイオリン図を描画する", "out": "sns.violinplot(x='カテゴリ列', y='列', data=df)"}
{"in": "データフレームの列を折れ線グラフで可視化する", "out": "plt.plot(df[column], df[column])"}
{"in": "ヒストグラムの色をゴールドに設定する", "out": "plt.hist(データ列, color='gold')"}
{"in": "棒グラフをダークシアグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkseagreen')"}
{"in": "折れ線グラフをライトイエロー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightyellow')"}
{"in": "option: ライトグレー色を使う", "out": "color = 'lightgrey'"}
{"in": "散布図のダイアモンドマーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='D', markersize=2.0)"}
{"in": "option: マーカーの色をリネンにする", "out": "markerfacecolor = 'linen'"}
{"in": "実数を小数点以下第一位で丸める", "out": "round(x, 1)"}
{"in": "データシリーズのタイムゾーンを設定する", "out": "ds.tz_convert('Asia/Tokyo')"}
{"in": "ファイルのファイルサイズ", "out": "os.path.get_size(filepath)"}
{"in": "n×n2の二次元リスト", "out": "[[0] * n for _ in range(n2)]"}
{"in": "ロージーブラウン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='rosybrown')"}
{"in": "折れ線グラフをライトゴールドロディイエロー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "横棒グラフの色をラベンダーにする", "out": "plt.barh(データ列x, データ列y, color='lavender')"}
{"in": "棒グラフの色をパウダーブルーにする", "out": "plt.bar(データ列x, データ列y, color='powderblue')"}
{"in": "year年month月day日を日付に変換する", "out": "datetime.date(year=year, month=month, day=day)"}
{"in": "棒グラフをミディアムブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumblue')"}
{"in": "option: ビスク色を使う", "out": "color = 'bisque'"}
{"in": "文字列中のタブ文字を空白に置き換える", "out": "s.expandtabs(tabsize=n)"}
{"in": "ラベンダー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lavender')"}
{"in": "nからn2の範囲", "out": "range(n, n2)"}
{"in": "線形のクラス分類をする", "out": "model = sklearn.linear_model.LogisticRegression()"}
{"in": "文字列がリストの要素か調べる", "out": "element in aList"}
{"in": "ドジャーブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='dodgerblue')"}
{"in": "実数の双曲線正弦の逆数", "out": "math.asinh(x)"}
{"in": "ライトコーラル色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightcoral')"}
{"in": "option: グラフの色をグレーに設定する", "out": "color = 'grey'"}
{"in": "横棒グラフの色をrgbに設定する", "out": "plt.barh(ラベル列, データ列, color=rgb)"}
{"in": "横棒グラフをデピンク色で描画する", "out": "plt.barh(データ列x, データ列y, color='deeppink')"}
{"in": "日付データの年数", "out": "aDate.year"}
{"in": "文字列中の部分文字列を新しい文字列に回数を制限して置き換える", "out": "s.replace(sub, newsub, n)"}
{"in": "year年month月day日の日付時刻", "out": "datetime.datetime(year=year, month=month, day=day)"}
{"in": "option: 改行の代わりに文字列を用いる", "out": "end = s"}
{"in": "棒グラフの色をダークグレーにする", "out": "plt.bar(データ列x, データ列y, color='darkgrey')"}
{"in": "コーンズシルク色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='cornsilk')"}
{"in": "文字列中から正規表現にASCII限定としてマッチする文字列を探す", "out": "re.search(pattern, s, flags=re.ASCI)"}
{"in": "文字列の先頭で正規表現に複数行対応としてマッチするか見る", "out": "re.match(pattern, s, flags=re.MULTILINE)"}
{"in": "黄色い棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='y')"}
{"in": "二次元リストの転置行列", "out": "[list(x) for x in list(zip(*aList))]"}
{"in": "折れ線グラフをピーチパフ色で描画する", "out": "plt.plot(データ列x, データ列y, color='peachpuff')"}
{"in": "横棒グラフをダークオリーブグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkolivegreen')"}
{"in": "全要素を０で初期化した符号なし８ビット整数型の行列", "out": "np.zeros(行数, 列数, dtype=np.uint8)"}
{"in": "option: 改行コードを旧Macに設定する", "out": "newline = '\\r'"}
{"in": "オールドレース色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='oldlace')"}
{"in": "データシリーズの統計量", "out": "ds.describe()"}
{"in": "タプルを逆順にする", "out": "aTuple[::-1]"}
{"in": "棒グラフの色をダークサーモンにする", "out": "plt.bar(データ列x, データ列y, color='darksalmon')"}
{"in": "折れ線グラフの色をシャルトリューズに設定する", "out": "plt.plot(データ列x, データ列y, color='chartreuse')"}
{"in": "データフレームのn行以降抽出する", "out": "df[n:]"}
{"in": "データシリーズの欠損値を最頻値で埋める", "out": "ds.fillna(ds.mode().iloc[0])"}
{"in": "整数nを符号付きでバイト列に変換する", "out": "n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)"}
{"in": "散布図をピンク色で描画する", "out": "plt.scatter(データ列x, データ列y, color='pink')"}
{"in": "ある列のカテゴリごとの最小値", "out": "df.groupby('列A').min()"}
{"in": "ファイルを読み込みモードでオープンする]", "out": "open(filepath, mode='r')"}
{"in": "データシリーズの欠損値を直前の値で埋める", "out": "ds.fillna(method='ffill')"}
{"in": "散布図をゴールデンロッド色で描画する", "out": "plt.scatter(データ列x, データ列y, color='goldenrod')"}
{"in": "折れ線グラフをシーグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='seagreen')"}
{"in": "箱ひげ図にラベルを付ける", "out": "plt.boxplot([データ列, データ列], labels=['A', 'B'])"}
{"in": "横棒グラフの色をダークスラテグレーにする", "out": "plt.barh(データ列x, データ列y, color='darkslategray')"}
{"in": "散布図をライトコーラル色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightcoral')"}
{"in": "ヒストグラムの色をアクアマリンに設定する", "out": "plt.hist(データ列, color='aquamarine')"}
{"in": "散布図をミッドナイトブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='midnightblue')"}
{"in": "カーキ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='khaki')"}
{"in": "ローングリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lawngreen')"}
{"in": "折れ線グラフをミディアムスプリンググリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "option: パープル色を使う", "out": "color = 'purple'"}
{"in": "データフレームの選択したカラムの歪度", "out": "df[['列A', '列B']].kurt()"}
{"in": "折れ線グラフの色をモカシンに設定する", "out": "plt.plot(データ列x, データ列y, color='moccasin')"}
{"in": "グラフ中の文字化けを防ぐ", "out": "sns.set(font='IPAexGothic')"}
{"in": "データフレームのカラムのn次モーメントを求める", "out": "scipy.stats.moment(df['列A'], moment=n)"}
{"in": "スレートブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='slateblue')"}
{"in": "ヒストグラムの色を茶色に設定する", "out": "plt.hist(データ列, color='brown')"}
{"in": "option: グラフの色をグリーンに設定する", "out": "color = 'green'"}
{"in": "ダークカーキ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkkhaki')"}
{"in": "赤い丸マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='o', c='r')"}
{"in": "データシリーズの欠損値を平均値に設定する", "out": "ds.fillna(ds.mean())"}
{"in": "ヒストグラムをサーモン色で描画する", "out": "plt.hist(データ列, color='salmon')"}
{"in": "棒グラフの色をサンディーブラウンにする", "out": "plt.bar(データ列x, データ列y, color='sandybrown')"}
{"in": "トマト色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='tomato')"}
{"in": "折れ線グラフのバツマーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='x', markerfacecolor='r')"}
{"in": "ダークバイオレット色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkviolet')"}
{"in": "ヒストグラムの範囲を設定する", "out": "plt.hist(データ列, range=(start, end))"}
{"in": "データシリーズの欠損値を中央値に設定する", "out": "ds.fillna(ds.median())"}
{"in": "option: グラフの色をブラックに設定する", "out": "color = 'black'"}
{"in": "横棒グラフの色をパールゴールデンロッドにする", "out": "plt.barh(データ列x, データ列y, color='palegoldenrod')"}
{"in": "棒グラフの色を茶色にする", "out": "plt.bar(データ列x, データ列y, color='brown')"}
{"in": "ミディアムバイオレットレッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mediumvioletred')"}
{"in": "ファイルをEUCでオープンする]", "out": "open(filepath, encoding='euc_jp')"}
{"in": "折れ線グラフをパープル色で描画する", "out": "plt.plot(データ列x, データ列y, color='purple')"}
{"in": "タン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='tan')"}
{"in": "option: 降順にする", "out": "ascending = False"}
{"in": "暗い赤色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkred')"}
{"in": "カウンタからイテラブルをカウントして引く", "out": "aCounter.subtract(iterable)"}
{"in": "option: マーカーの色をライトグレーにする", "out": "markerfacecolor = 'lightgray'"}
{"in": "散布図の色をミスティローズにする", "out": "plt.scatter(データ列x, データ列y, color='mistyrose')"}
{"in": "データフレームを表示するとき、折り返しをしない", "out": "pd.set_option('expand_frame_repr', False)"}
{"in": "標準出力を得る", "out": "sys.stdout"}
{"in": "option: マーカーを下三角に変更する", "out": "marker = 'v'"}
{"in": "横棒グラフの色をダークスレートブルーにする", "out": "plt.barh(データ列x, データ列y, color='darkslateblue')"}
{"in": "データフレームの先頭5行", "out": "df.head(5)"}
{"in": "横棒グラフの色をオリベドラブにする", "out": "plt.barh(データ列x, データ列y, color='olivedrab')"}
{"in": "折れ線グラフの色をライトシアンに設定する", "out": "plt.plot(データ列x, データ列y, color='lightcyan')"}
{"in": "ヒストグラムを耐火レンガ色で描画する", "out": "plt.hist(データ列, color='firebrick')"}
{"in": "折れ線グラフに青い左三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='<', markerfacecolor='b')"}
{"in": "両端キューの中に要素が含まれてるか調べる", "out": "element in deq"}
{"in": "散布図をベージュ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='beige')"}
{"in": "ミスティローズ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='mistyrose')"}
{"in": "散布図の下三角マーカーの大きさを変更する", "out": "plt.scatter(データ列x, データ列y, marker='v', markersize=2.0)"}
{"in": "散布図の色をチョコレートにする", "out": "plt.scatter(データ列x, データ列y, color='chocolate')"}
{"in": "データフレームのある列の値がxより大きい行を抽出する", "out": "df[df['列A'] > x]"}
{"in": "xを印字できる文字列にする", "out": "ascii(x)"}
{"in": "option: ミディアムスレートブルー色を使う", "out": "color = 'mediumslateblue'"}
{"in": "棒グラフをインディゴ色で描画する", "out": "plt.bar(データ列x, データ列y, color='indigo')"}
{"in": "ヒストグラムを描画して、ビン数を設定する", "out": "plt.hist(データ列, bins=区関数)"}
{"in": "ミディアムスレートブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumslateblue')"}
{"in": "折れ線グラフの色をターコイズに設定する", "out": "plt.plot(データ列x, データ列y, color='turquoise')"}
{"in": "散布図の色をライトスチールブルーにする", "out": "plt.scatter(データ列x, データ列y, color='lightsteelblue')"}
{"in": "折れ線グラフを半透明の実線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid', alpha=0.5)"}
{"in": "二つの文字列をコロンで区切ってプリントする", "out": "print(value, value2, sep=':')"}
{"in": "データシリーズが何日か見る", "out": "ds.dt.day"}
{"in": "option: 複数行に対応する", "out": "flag = re.MULTILINE"}
{"in": "両端キューの要素をインプレースに反転する", "out": "deq.reverse()"}
{"in": "データフレームを表示するとき、小数点以下n桁まで表示可能なようにする", "out": "pd.set_option('precision', n)"}
{"in": "ライトサーモン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightsalmon')"}
{"in": "ダークグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkgrey')"}
{"in": "文字列中の部分文字列を文字列に置き換える", "out": "s.replace(sub, newsub)"}
{"in": "ダークカーキ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='darkkhaki')"}
{"in": "option: 下三角マーカーを描画する", "out": "marker = 'v'"}
{"in": "データフレームからカテゴリデータの列名の一覧を使う", "out": "df.select_dtypes('object').columns"}
{"in": "棒グラフを黄色色で描画する", "out": "plt.bar(データ列x, データ列y, color='yellow')"}
{"in": "横棒グラフの色をミディアムスレートブルーにする", "out": "plt.barh(データ列x, データ列y, color='mediumslateblue')"}
{"in": "option: グラフの色をシルバーに設定する", "out": "color = 'silver'"}
{"in": "実数が整数か調べる", "out": "x.is_integer()"}
{"in": "文字列が平仮名か調べる", "out": "('ぁ' <= ch <= 'ん')"}
{"in": "ライトグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightgray')"}
{"in": "棒グラフの色をイエローグリーンにする", "out": "plt.bar(データ列x, データ列y, color='yellowgreen')"}
{"in": "データフレームをグループ化し、それぞれの最大値を求める", "out": "df.groupby('列A').max()"}
{"in": "勾配ブースティングで回帰分析を行う", "out": "model = sklearn.ensemble.GradientBoostingRegressor()"}
{"in": "ヒストグラムをライトスレイグレー色で描画する", "out": "plt.hist(データ列, color='lightslategrey')"}
{"in": "データフレームのインデックスの一覧", "out": "df.index"}
{"in": "フォレストグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='forestgreen')"}
{"in": "折れ線グラフの色をラベンダーブラッシュに設定する", "out": "plt.plot(データ列x, データ列y, color='lavenderblush')"}
{"in": "行列の転置行列", "out": "aArray.T"}
{"in": "折れ線グラフに青いポイントマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='.', markerfacecolor='b')"}
{"in": "横棒グラフの色をライトスチールブルーにする", "out": "plt.barh(データ列x, データ列y, color='lightsteelblue')"}
{"in": "ダークスラテグレー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkslategray')"}
{"in": "リストをタプルに変換する", "out": "tuple(aList)"}
{"in": "散布図のバツマーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='#800080')"}
{"in": "折れ線グラフに黒い右三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='>', markerfacecolor='k')"}
{"in": "折れ線グラフに青い星マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='*', markerfacecolor='b')"}
{"in": "要素が集合に含まれるか調べる", "out": "element in aSet"}
{"in": "K最近傍法で回帰分析を行う", "out": "model = sklearn.neighbors.KNeighborsRegressor(n_neighbors=5)"}
{"in": "option: マーカーの色をラベンダーブラッシュにする", "out": "markerfacecolor = 'lavenderblush'"}
{"in": "棒グラフをシャルトリューズ色で描画する", "out": "plt.bar(データ列x, データ列y, color='chartreuse')"}
{"in": "現在が何時か知る", "out": "datetime.date.today().hour"}
{"in": "データシリーズの値をValueMapでまとめて置き換える", "out": "ds.replace(ValueMap)"}
{"in": "棒グラフをミッドナイトブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='midnightblue')"}
{"in": "データフレームの選択したカラムの最頻値", "out": "df[['列A', '列B']].mode()"}
{"in": "カーキ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='khaki')"}
{"in": "シエナ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='sienna')"}
{"in": "option: ８ビット整数型を使う", "out": "dtype = np.int8"}
{"in": "オプションで、ファイルに出力する", "out": "file = sys.open(filename, 'w')"}
{"in": "淡いピンク色色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightpink')"}
{"in": "ヒストグラムをオリーブ色で描画する", "out": "plt.hist(データ列, color='olive')"}
{"in": "散布図にrgbのバツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='x', c=rgb)"}
{"in": "変数がマイナス無限大に近づくときの数式の極限値を求める", "out": "sympy.limit(e, z, -oo)"}
{"in": "青色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='blue')"}
{"in": "折れ線グラフの色をライトグリーンに設定する", "out": "plt.plot(データ列x, データ列y, color='lightgreen')"}
{"in": "白色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='white')"}
{"in": "文字列が文字列より辞書順で後か調べる", "out": "s > s2"}
{"in": "折れ線グラフを暗い赤色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkred')"}
{"in": "折れ線グラフをナバホホワイト色で描画する", "out": "plt.plot(データ列x, データ列y, color='navajowhite')"}
{"in": "散布図の色をビスクにする", "out": "plt.scatter(データ列x, データ列y, color='bisque')"}
{"in": "現在の時間数", "out": "datetime.date.today().hour"}
{"in": "散布図をゴーストホワイト色で描画する", "out": "plt.scatter(データ列x, データ列y, color='ghostwhite')"}
{"in": "折れ線グラフをスカイブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='skyblue')"}
{"in": "ヒストグラムをリネン色で描画する", "out": "plt.hist(データ列, color='linen')"}
{"in": "option: マーカーの色をグレーにする", "out": "markerfacecolor = 'gray'"}
{"in": "棒グラフをディムグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='dimgray')"}
{"in": "散布図に赤い大バツマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='r')"}
{"in": "ピンク色のヒストグラムを描画する", "out": "plt.hist(データ列, color='pink')"}
{"in": "両端キューに要素をプッシュする", "out": "deq.append(element)"}
{"in": "データ列の各データが何回出現するか見る", "out": "ds.value_counts()"}
{"in": "コーンフラワーブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='cornflowerblue')"}
{"in": "散布図をパパイヤウィップ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='papayawhip')"}
{"in": "白い棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='w')"}
{"in": "ネイビー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='navy')"}
{"in": "データフレームのカラムを散布図で可視化する", "out": "sns.scatterplot(data=df, x='列名', y='列名')"}
{"in": "散布図を青紫色で描画する", "out": "plt.scatter(データ列x, データ列y, color='violet')"}
{"in": "option: 線の種類を一点鎖線に設定する", "out": "linestyle = 'dashbot'"}
{"in": "散布図に黒い丸マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='k')"}
{"in": "option: セパレータをコロンにする", "out": "sep = ':'"}
{"in": "実数以上の最小の整数", "out": "math.ceil(x)"}
{"in": "Pandasのバージョンを見る", "out": "print(pd.__version__)"}
{"in": "ファイルを追加モードでオープンして]、fとする", "out": "f = open(filepath, mode='a')"}
{"in": "折れ線グラフの色をロージーブラウンに設定する", "out": "plt.plot(データ列x, データ列y, color='rosybrown')"}
{"in": "散布図に赤いダイアモンドマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='D', c='r')"}
{"in": "折れ線グラフをフォレストグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='forestgreen')"}
{"in": "ある列のカテゴリごとの標準偏差", "out": "df.groupby('列A').std()"}
{"in": "折れ線グラフをシエナ色で描画する", "out": "plt.plot(データ列x, データ列y, color='sienna')"}
{"in": "棒グラフをダーク・スラテグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkslategrey')"}
{"in": "折れ線グラフをディムグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='dimgrey')"}
{"in": "全要素を０で初期化した整数型の行列", "out": "np.zeros(行数, 列数, dtype=np.int)"}
{"in": "棒グラフをネイビー色で描画する", "out": "plt.bar(データ列x, データ列y, color='navy')"}
{"in": "nとn2の排他的論理和", "out": "n ^ n2"}
{"in": "カウンタを集合に変換する", "out": "set(aCounter)"}
{"in": "ヒストグラムの色をオレンジに設定する", "out": "plt.hist(データ列, color='orange')"}
{"in": "ヒストグラムの色をネイビーに設定する", "out": "plt.hist(データ列, color='navy')"}
{"in": "データ列を横棒グラフにする", "out": "plt.barh(ラベル列, データ列)"}
{"in": "折れ線グラフをライトスチールブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightsteelblue')"}
{"in": "nを半分にする", "out": "n /= 2"}
{"in": "散布図をドジャーブルー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='dodgerblue')"}
{"in": "option: マーカーの色をペルーにする", "out": "markerfacecolor = 'peru'"}
{"in": "ヒストグラムをライトスレイグレー色で描画する", "out": "plt.hist(データ列, color='lightslategray')"}
{"in": "整数nを二進表現に変換する", "out": "bin(n)"}
{"in": "option: 線の種類を破線に設定する", "out": "linestyle = 'dashed'"}
{"in": "ホワイトスモーク色のヒストグラムを描画する", "out": "plt.hist(データ列, color='whitesmoke')"}
{"in": "ヒストグラムをライトグリーン色で描画する", "out": "plt.hist(データ列, color='lightseagreen')"}
{"in": "option: 大バツマーカーを描画する", "out": "marker = 'X'"}
{"in": "集合に要素を追加する", "out": "aSet.add(element)"}
{"in": "文字列を黒色でプリントする", "out": "print(f'\\033[30m{value}\\033[0m')"}
{"in": "実数に実数を加える", "out": "x + y"}
{"in": "文字列を黒色にする", "out": "f'\\033[30m{value}\\033[0m'"}
{"in": "nがn2と等しいか調べる", "out": "n == n2"}
{"in": "option: マーカーの色を茶色にする", "out": "markerfacecolor = 'brown'"}
{"in": "ベージュ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='beige')"}
{"in": "ダークターコイズ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkturquoise')"}
{"in": "折れ線グラフをライムグリーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='limegreen')"}
{"in": "散布図のマーカーをダイアモンドにする", "out": "plt.scatter(データ列x, データ列y, marker='D')"}
{"in": "横棒グラフをモカシン色で描画する", "out": "plt.barh(データ列x, データ列y, color='moccasin')"}
{"in": "三つのデータフレームを縦方向に連結する", "out": "pd.concat([df, df2, df3], axis=0)"}
{"in": "0からN未満までの配列", "out": "np.arange(N)"}
{"in": "横棒グラフをゴーストホワイト色で描画する", "out": "plt.barh(データ列x, データ列y, color='ghostwhite')"}
{"in": "文字列をシアンでプリントする", "out": "print(f'\\033[36m{value}\\033[0m')"}
{"in": "日付データと日付データの時間差を秒数で求める", "out": "(aDate - aDate2).total_seconds()//60"}
{"in": "グリッドを一点鎖線にする", "out": "plt.grid(linestyle='dashbot')"}
{"in": "文字列の中の正規表現による全てのマッチを使う", "out": "re.findall(pattern, s)"}
{"in": "タプルを反転する", "out": "reversed(aTuple)"}
{"in": "文字列中の部分文字列を新しい文字列に置き換える", "out": "s.replace(sub, newsub)"}
{"in": "耐火レンガ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='firebrick')"}
{"in": "本日が何日か知る", "out": "datetime.datetime.today().day"}
{"in": "本日が日曜日か調べる", "out": "datetime.datetime.today().weekday() == 6"}
{"in": "文字列の先頭", "out": "s[0]"}
{"in": "データ列の推移を折れ線グラフで可視化する", "out": "plt.plot(range(len(データ列)), データ列)"}
{"in": "文字列リストを連結してひとつの文字列にする", "out": "''.join(aStringList)"}
{"in": "スレートブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='slateblue')"}
{"in": "二つのカウンタのいずれかに含まれる要素", "out": "aCounter | aCounter2"}
{"in": "散布図の右三角マーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='r')"}
{"in": "マゼンタ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='magenta')"}
{"in": "横棒グラフの色をダークゴールデンロッドにする", "out": "plt.barh(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "横棒グラフの色をダークマゼンタにする", "out": "plt.barh(データ列x, データ列y, color='darkmagenta')"}
{"in": "整数nを符号付きで長さn2のバイト列に変換する", "out": "n.to_bytes(length=bytesize, byteorder='big', signed=True)"}
{"in": "折れ線グラフのマーカーを四角にする", "out": "plt.plot(データ列x, データ列y, marker='s')"}
{"in": "option: スノー色を使う", "out": "color = 'snow'"}
{"in": "折れ線グラフの色をダークグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='darkgray')"}
{"in": "横棒グラフをコーンズシルク色で描画する", "out": "plt.barh(データ列x, データ列y, color='cornsilk')"}
{"in": "散布図のポイントマーカーを黒くする", "out": "plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='k')"}
{"in": "option: グラフの色をディープスカイブルーに設定する", "out": "color = 'deepskyblue'"}
{"in": "散布図の色をラベンダーにする", "out": "plt.scatter(データ列x, データ列y, color='lavender')"}
{"in": "表データをインポートする", "out": "import pandas as pd"}
{"in": "配列を平坦にする", "out": "aArray.flatten()"}
{"in": "nが1、もしくは2か調べる", "out": "n == 1 or n == 2"}
{"in": "散布図の色を青にする", "out": "plt.scatter(データ列x, データ列y, color='blue')"}
{"in": "折れ線グラフをパールバイオレットレッド色で描画する", "out": "plt.plot(データ列x, データ列y, color='palevioletred')"}
{"in": "横棒グラフをサドルブラウン色で描画する", "out": "plt.barh(データ列x, データ列y, color='saddlebrown')"}
{"in": "実線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid')"}
{"in": "青色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='blue')"}
{"in": "データフレームの先頭5行", "out": "df.head(5)"}
{"in": "横棒グラフの色をオレンジにする", "out": "plt.barh(データ列x, データ列y, color='orange')"}
{"in": "option: グラフの色をライトスチールブルーに設定する", "out": "color = 'lightsteelblue'"}
{"in": "option: マーカーの色をミディアムオーキッドにする", "out": "markerfacecolor = 'mediumorchid'"}
{"in": "棒グラフをフローラルホワイト色で描画する", "out": "plt.bar(データ列x, データ列y, color='floralwhite')"}
{"in": "データフレームのあるカラムの時", "out": "df['列A'].dt.hour"}
{"in": "コルモゴロフ・スミルノフ検定を行う", "out": "scipy.stats.kstest(配列, 'norm')"}
{"in": "option: ダークスレートブルー色を使う", "out": "color = 'darkslateblue'"}
{"in": "横棒グラフの色をサンディーブラウンにする", "out": "plt.barh(データ列x, データ列y, color='sandybrown')"}
{"in": "MSEを求める", "out": "sklearn.metrics.mean_squared_error(データ列, データ列2)"}
{"in": "折れ線グラフの色をミントクリームに設定する", "out": "plt.plot(データ列x, データ列y, color='mintcream')"}
{"in": "横棒グラフをダークシアグリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkseagreen')"}
{"in": "配列のピアソンの相関係数を求める", "out": "scipy.stats.pearsonr(配列, 配列2)"}
{"in": "整数nを半分にする", "out": "n //= 2"}
{"in": "リストを等量でn個にビン分割する", "out": "pd.qcut(aList, n)"}
{"in": "リストとリストについての散布図に黒いバツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='x', c='k')"}
{"in": "円グラフにラベルを付ける", "out": "plt.pie(データ列, startangle=90, labels=ラベル列)"}
{"in": "日付データのデータフレームのあるカラムをデータフレームのインデックスにする", "out": "df.index = pd.DatetimeIndex(df['列A'])"}
{"in": "数式の変数にnを代入する", "out": "e.subs(z, n)"}
{"in": "option: エラーを無視するように設定する", "out": "errors = 'ignore'"}
{"in": "パウダーブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='powderblue')"}
{"in": "option: ダークカーキ色を使う", "out": "color = 'darkkhaki'"}
{"in": "横棒グラフをミッドナイトブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='midnightblue')"}
{"in": "散布図のダイアモンドマーカーの線幅を変更する", "out": "plt.scatter(データ列x, データ列y, marker='D', markeredgewidth=2.5)"}
{"in": "ミディアムスレートブルー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumslateblue')"}
{"in": "棒グラフの色を紺碧にする", "out": "plt.bar(データ列x, データ列y, color='azure')"}
{"in": "大量のデータが正規分布に従うか仮説検定する", "out": "scipy.stats.kstest(配列, 'norm')"}
{"in": "データフレームを表示するとき、表示可能な列数の最大値をnに設定する", "out": "pd.set_option('display.max_columns', n)"}
{"in": "折れ線グラフの色をゴールデンロッドに設定する", "out": "plt.plot(データ列x, データ列y, color='goldenrod')"}
{"in": "横棒グラフをマルーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='maroon')"}
{"in": "棒グラフの色をライトゴールドロディイエローにする", "out": "plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "棒グラフの色をサドルブラウンにする", "out": "plt.bar(データ列x, データ列y, color='saddlebrown')"}
{"in": "predicateFuncが真とならないイテラブルの要素", "out": "itertools.dropwhile(predicateFunc, iterable)"}
{"in": "イエローグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='yellowgreen')"}
{"in": "散布図をホワイトスモーク色で描画する", "out": "plt.scatter(データ列x, データ列y, color='whitesmoke')"}
{"in": "option: マーカーの色をスノーにする", "out": "markerfacecolor = 'snow'"}
{"in": "データフレームの先頭n行", "out": "df.head(n)"}
{"in": "棒グラフをパールゴールデンロッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='palegoldenrod')"}
{"in": "散布図をネイビー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='navy')"}
{"in": "ファイルを文字コードtextでオープンする]", "out": "open(filepath, encoding=text)"}
{"in": "棒グラフをダークマゼンタ色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkmagenta')"}
{"in": "ふたつの集合の和集合", "out": "aSet.union(aSet2)"}
{"in": "ライトグリーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightgreen')"}
{"in": "データフレームのカラムの偏差値を求める", "out": "50 + 10 * scipy.stats.zscore(df['列A'])"}
{"in": "黒い横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='k')"}
{"in": "データシリーズの欠損値を直後の値に設定する", "out": "ds.fillna(method='bfill')"}
{"in": "ペールグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='palegreen')"}
{"in": "ミディアムバイオレットレッド色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='mediumvioletred')"}
{"in": "クラス分類のF値を求める", "out": "sklearn.metrics.f1_score(正解データ列, 予測データ列)"}
{"in": "ピンク色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='pink')"}
{"in": "散布図に赤い三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='r')"}
{"in": "散布図に青いポイントマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='b')"}
{"in": "赤色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='red')"}
{"in": "データフレームのあるカラムをデータフレームの日付インデックスにする", "out": "df.index = pd.DatetimeIndex(pd.to_datetime(df['列A']))"}
{"in": "ヒストグラムをダークシアグリーン色で描画する", "out": "plt.hist(データ列, color='darkseagreen')"}
{"in": "整数nを八進表現に変換する", "out": "oct(n)"}
{"in": "カウンタの下位を列挙する", "out": "aCounter.most_common()[:-n-1:-1]"}
{"in": "折れ線グラフの色をベージュに設定する", "out": "plt.plot(データ列x, データ列y, color='beige')"}
{"in": "ヒストグラムの色をスノーに設定する", "out": "plt.hist(データ列, color='snow')"}
{"in": "スクリプトファイルの絶対パス", "out": "os.path.abspath(__file__)"}
{"in": "文字列を空白で区切る", "out": "s.split()"}
{"in": "二つの文字列を辞書順で比較する", "out": "s < s2"}
{"in": "nかつn2", "out": "n and n2"}
{"in": "ライトサーモン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightsalmon')"}
{"in": "リストとリストについての散布図にバツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='x')"}
{"in": "配列を等間隔でn個にビン分割する", "out": "pd.cut(aArray, n)"}
{"in": "レベッカパープル色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='rebeccapurple')"}
{"in": "フォレストグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='forestgreen')"}
{"in": "ヒストグラムでカラーマップを使う", "out": "plt.hist(データ列x, color=plt.get_cmap(\"Spectral\"))"}
{"in": "ヒストグラムの色をベージュに設定する", "out": "plt.hist(データ列, color='beige')"}
{"in": "ヒストグラムをスラグレー色で描画する", "out": "plt.hist(データ列, color='slategrey')"}
{"in": "ヒストグラムの色をダークグリーンに設定する", "out": "plt.hist(データ列, color='darkgreen')"}
{"in": "散布図の色をスチールブルーにする", "out": "plt.scatter(データ列x, データ列y, color='steelblue')"}
{"in": "黒い左三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='<', c='k')"}
{"in": "データフレームから指定したデータ型の列名の一覧", "out": "df.select_dtypes(型).columns"}
{"in": "日付時刻データが何年か知る", "out": "aDatetime.year"}
{"in": "横棒グラフの色をブラックにする", "out": "plt.barh(データ列x, データ列y, color='black')"}
{"in": "横棒グラフの色をダークバイオレットにする", "out": "plt.barh(データ列x, データ列y, color='darkviolet')"}
{"in": "散布図をサドルブラウン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='saddlebrown')"}
{"in": "文字列の開始位置以降に部分文字列が含まれないか調べる", "out": "s.find(sub, start) == -1"}
{"in": "折れ線グラフの色をサンディーブラウンに設定する", "out": "plt.plot(データ列x, データ列y, color='sandybrown')"}
{"in": "部分文字列を範囲を指定して探す", "out": "s.find(sub, start, end)"}
{"in": "option: グラフの色をゴールデンロッドに設定する", "out": "color = 'goldenrod'"}
{"in": "文字列中にひとつでも非空白が含まれるか調べる", "out": "any(not c.isspace() for c in s)"}
{"in": "ヒストグラムをドジャーブルー色で描画する", "out": "plt.hist(データ列, color='dodgerblue')"}
{"in": "ヒストグラムの色をチョコレートに設定する", "out": "plt.hist(データ列, color='chocolate')"}
{"in": "散布図をライトグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightgray')"}
{"in": "データフレームを二つの列によって降順にソートする", "out": "df.sort_values(by=['列A', '列B'], ascending=False)"}
{"in": "整数nがリストのどれかか調べる", "out": "n in aList"}
{"in": "オリベドラブ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='olivedrab')"}
{"in": "文字列の中で大文字・小文字を無視して正規表現にマッチした全ての文字列をリストに変換する", "out": "re.findall(pattern, s, flags=re.IGNORECASE)"}
{"in": "ミディアムパープル色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumpurple')"}
{"in": "配列を等量でビン数nでビン分割する", "out": "pd.qcut(aArray, n)"}
{"in": "データフレームの選択したカラムの中にある文字列の合計を数える", "out": "df[['列A', '列B']].isin([value]).sum()"}
{"in": "実数がNaNか調べる", "out": "math.isnan(x)"}
{"in": "データフレームのある列をリストに変換する", "out": "df['列A'].values.tolist()"}
{"in": "散布図をラベンダー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lavender')"}
{"in": "データフレームのあるカラムをインデックスにする", "out": "df.set_index('列A', inplace=True)"}
{"in": "ファイルをオープンして]、書き込みストリームを使う", "out": "open(filepath, mode='w')"}
{"in": "横棒グラフをシャルトリューズ色で描画する", "out": "plt.barh(データ列x, データ列y, color='chartreuse')"}
{"in": "列のエポック秒を日付データに変換する", "out": "pd.to_datetime(df['列A'], unit='s', utc=True)"}
{"in": "ライトイエロー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightyellow')"}
{"in": "棒グラフの色を青にする", "out": "plt.bar(データ列x, データ列y, color='blue')"}
{"in": "タプルをナンバリングする", "out": "enumerate(aTuple)"}
{"in": "データシリーズの文字列を欠損値に変換する", "out": "ds.replace(値, np.nan)"}
{"in": "リストとリストについての散布図にrgbの三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='^', c=rgb)"}
{"in": "option: 文字コードtextを使う", "out": "encoding = text"}
{"in": "折れ線グラフの左三角マーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='<', markerfacecolor='r')"}
{"in": "シスル色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='thistle')"}
{"in": "ヒストグラムの色を青緑に設定する", "out": "plt.hist(データ列, color='teal')"}
{"in": "八進文字列をバイト列に変換する", "out": "int(s, 8).to_bytes(length=bytesize, byteorder='big')"}
{"in": "上位集合か調べる", "out": "aSet.issuperset(aSet2)"}
{"in": "n2行n列の二次元リスト", "out": "[[0] * n for _ in range(n2)]"}
{"in": "散布図の色をミントクリームにする", "out": "plt.scatter(データ列x, データ列y, color='mintcream')"}
{"in": "棒グラフの色をペールグリーンにする", "out": "plt.bar(データ列x, データ列y, color='palegreen')"}
{"in": "データフレームの指定したカラムの欠損値を直後の値で埋める", "out": "df['列A'].fillna(method='bfill')"}
{"in": "散布図の丸マーカーを赤くする", "out": "plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='r')"}
{"in": "レベッカパープル色のヒストグラムを描画する", "out": "plt.hist(データ列, color='rebeccapurple')"}
{"in": "option: ゴールデンロッド色を使う", "out": "color = 'goldenrod'"}
{"in": "指定した列リストのみ、データフレームの重複を見る", "out": "df.duplicated(subset=['列A', '列B'])"}
{"in": "赤いバツマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='x', c='r')"}
{"in": "配列が何のデータ型か調べる", "out": "aArray.dtype()"}
{"in": "折れ線グラフの色をロイヤルブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='royalblue')"}
{"in": "混同行列をヒートマップで確認する", "out": "sns.heatmap(混同行列, annot=True, cmap='Reds')"}
{"in": "散布図に黒い下三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='k')"}
{"in": "ヒストグラムをスプリンググリーン色で描画する", "out": "plt.hist(データ列, color='springgreen')"}
{"in": "option: マーカーの色をパウダーブルーにする", "out": "markerfacecolor = 'powderblue'"}
{"in": "散布図の色をモカシンにする", "out": "plt.scatter(データ列x, データ列y, color='moccasin')"}
{"in": "折れ線グラフをオールドレース色で描画する", "out": "plt.plot(データ列x, データ列y, color='oldlace')"}
{"in": "棒グラフをミディアムスプリンググリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "option: 複素数型を使う", "out": "dtype = bool"}
{"in": "ヒストグラムの色をグリーンイエローに設定する", "out": "plt.hist(データ列, color='greenyellow')"}
{"in": "チップのデータセットをロードする", "out": "df = sns.load_dataset('tips')"}
{"in": "標準出力のバッファをフラッシュする", "out": "sys.stdout.flush()"}
{"in": "二つのデータフレームを縦方向に連結する", "out": "pd.concat([df, df2], axis=0)"}
{"in": "折れ線グラフの色をオレンジレッドに設定する", "out": "plt.plot(データ列x, データ列y, color='orangered')"}
{"in": "リストとリストについての散布図にrgbの下三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='v', c=rgb)"}
{"in": "日付時刻データのタイムゾーン", "out": "aDatetime.timetz()"}
{"in": "折れ線グラフをプラム色で描画する", "out": "plt.plot(データ列x, データ列y, color='plum')"}
{"in": "日付時刻データと日付時刻データの時間差", "out": "aDatetime - aDatetime2"}
{"in": "空の集合", "out": "set()"}
{"in": "改行なしに二つの文字列をプリントする", "out": "print(value, value2, end='')"}
{"in": "横棒グラフの色をレモンシフォンにする", "out": "plt.barh(データ列x, データ列y, color='lemonchiffon')"}
{"in": "チョコレート色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='chocolate')"}
{"in": "整数nをn2分の一にする", "out": "n //= n2"}
{"in": "option: 配列のデータ型を指定する", "out": "dtype = bool"}
{"in": "option: グラフの色をライトスカイブルーに設定する", "out": "color = 'lightskyblue'"}
{"in": "データフレームの選択したカラムの欠損値を直後の値に設定する", "out": "df[['列A', '列B']].fillna(method='bfill')"}
{"in": "散布図の色をペールグリーンにする", "out": "plt.scatter(データ列x, データ列y, color='palegreen')"}
{"in": "データシリーズを百の位で丸めて、整数型にする", "out": "ds.round(-2).astype(int)"}
{"in": "ヒストグラムの色をインディゴに設定する", "out": "plt.hist(データ列, color='indigo')"}
{"in": "散布図をシアン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='cyan')"}
{"in": "横棒グラフをスラグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='slategrey')"}
{"in": "標準入力から1行だけ読み込んで、改行を取り除く", "out": "sys.stdin.readline().rstrip()"}
{"in": "標準エラーを使う", "out": "sys.stderr"}
{"in": "無限大", "out": "math.inf"}
{"in": "リストの文字列が最初に見つかるインデックス", "out": "aList.index(element)"}
{"in": "文字列をキャピタライズする", "out": "s.capitalize()"}
{"in": "option: グラフの色を青紫に設定する", "out": "color = 'violet'"}
{"in": "ブラック色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='black')"}
{"in": "実数を文字列に変換する", "out": "str(x)"}
{"in": "アルファベットの小文字を全部使う", "out": "string.ascii_lowercase"}
{"in": "三自然数の最小公倍数", "out": "math.lcm(n, n2, n3)"}
{"in": "文字列を下線付きでプリントできる文字列に変換する", "out": "f'\\033[4m{value}\\033[0m'"}
{"in": "ヒストグラムをダークゴールデンロッド色で描画する", "out": "plt.hist(データ列, color='darkgoldenrod')"}
{"in": "棒グラフの色をライトサーモンにする", "out": "plt.bar(データ列x, データ列y, color='lightsalmon')"}
{"in": "グラフにy=0の実線を付ける", "out": "plt.axhline(y=0, linestyle='solid')"}
{"in": "option: マーカーの色をスチールブルーにする", "out": "markerfacecolor = 'steelblue'"}
{"in": "データフレームの選択したカラムの文字列を欠損値に変換する", "out": "df[['列A', '列B']].replace(値, np.nan)"}
{"in": "ヒストグラムベースの勾配ブースティング分類木を作る", "out": "model = sklearn.ensemble.HistGradientBoostingClassifier()"}
{"in": "データフレームの選択したカラムを丸めて、整数型にする", "out": "df[['列A', '列B']].round().astype(int)"}
{"in": "文字列が無限に繰り返すイテラブル", "out": "itertools.repeat(element)"}
{"in": "データ列を箱ひげ図で描画する", "out": "plt.boxplot(データ列)"}
{"in": "オレンジレッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='orangered')"}
{"in": "ふたつの列からグループ化し、最大値を求める", "out": "df.groupby(['列A', '列B'], as_index=False).max()"}
{"in": "折れ線グラフの丸マーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='o', markerfacecolor='b')"}
{"in": "option: マーカーの色を青紫にする", "out": "markerfacecolor = 'violet'"}
{"in": "キーが辞書に存在するか調べる", "out": "key not in aDict"}
{"in": "インデント幅nで、辞書をJSON形式の文字列に変換する", "out": "json.dumps(aDict, ensure_ascii=False, indent=n)"}
{"in": "実数を実数で割った剰余", "out": "math.remainder(x, x2)"}
{"in": "文字列を正規表現で分割する", "out": "re.split(pattern, s)"}
{"in": "イテラブルから重複を取り除く", "out": "set(iterable)"}
{"in": "文字列の先頭から空白を取り除く", "out": "s.lstrip()"}
{"in": "棒グラフの色をブルーバイオレットにする", "out": "plt.bar(データ列x, データ列y, color='blueviolet')"}
{"in": "折れ線グラフをフクシア色で描画する", "out": "plt.plot(データ列x, データ列y, color='fuchsia')"}
{"in": "折れ線グラフをマルーン色で描画する", "out": "plt.plot(データ列x, データ列y, color='maroon')"}
{"in": "分子と分母から有理数を作る", "out": "fractions.Fraction(分子, 分母)"}
{"in": "横棒グラフの色をナバホホワイトにする", "out": "plt.barh(データ列x, データ列y, color='navajowhite')"}
{"in": "リストとリストについて散布図を描画して、大バツマーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='X', c=rgb)"}
{"in": "option: グラフの色をダークターコイズに設定する", "out": "color = 'darkturquoise'"}
{"in": "数式の因数分解を行う", "out": "sympy.factor(e)"}
{"in": "データフレームの重複した行のみを抽出する", "out": "df[df.duplicated(keep=False)]"}
{"in": "日付時刻データが何時か知る", "out": "aDatetime.hour"}
{"in": "ライトグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lightgreen')"}
{"in": "実数の指数", "out": "math.frexp(x)[1]"}
{"in": "インディゴ色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='indigo')"}
{"in": "レモンシフォン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lemonchiffon')"}
{"in": "データ列のユニークな値", "out": "ds.unique()"}
{"in": "ヒストグラムをフローラルホワイト色で描画する", "out": "plt.hist(データ列, color='floralwhite')"}
{"in": "折れ線グラフを破線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed')"}
{"in": "ヒストグラムの色をサドルブラウンに設定する", "out": "plt.hist(データ列, color='saddlebrown')"}
{"in": "文字列中に部分文字列が含まれないか調べる", "out": "sub not in s"}
{"in": "ライトグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightseagreen')"}
{"in": "折れ線グラフの色をプラムに設定する", "out": "plt.plot(データ列x, データ列y, color='plum')"}
{"in": "配列の累積和", "out": "np.cumsum(aArray)"}
{"in": "option: マーカーの色をデピンクにする", "out": "markerfacecolor = 'deeppink'"}
{"in": "折れ線グラフの色をバリーウッドに設定する", "out": "plt.plot(データ列x, データ列y, color='burlywood')"}
{"in": "グラフの色を色差別なくする", "out": "sns.set(pallete='colorblind')"}
{"in": "データ列をn個にビン分割して、namesのラベルをつける", "out": "pd.cut(ds, n, labels=names)"}
{"in": "散布図のマーカーを四角にする", "out": "plt.scatter(データ列x, データ列y, marker='s')"}
{"in": "ヒストグラムの色をミディアムターコイズに設定する", "out": "plt.hist(データ列, color='mediumturquoise')"}
{"in": "配列の次元を変形する", "out": "aArray.reshape(行数, 列数)"}
{"in": "ダークスラテグレー色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkslategray')"}
{"in": "散布図をダークバイオレット色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkviolet')"}
{"in": "横棒グラフを貝殻色で描画する", "out": "plt.barh(データ列x, データ列y, color='seashell')"}
{"in": "横棒グラフをシルバー色で描画する", "out": "plt.barh(データ列x, データ列y, color='silver')"}
{"in": "データフレームの各カテゴリごとの散布図に回帰直線を加える", "out": "sns.regplot(x='列名', y='列名', hue='カテゴリ列', data=df)"}
{"in": "散布図をレモンシフォン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lemonchiffon')"}
{"in": "淡いピンク色色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightpink')"}
{"in": "option: マーカーの色をグリーンにする", "out": "markerfacecolor = 'green'"}
{"in": "日付データが何日か知る", "out": "aDate.day"}
{"in": "データシリーズの空文字をドロップする", "out": "ds.replace('', np.nan).dropna()"}
{"in": "データフレームが重複しているか調べる", "out": "df.duplicated()"}
{"in": "散布図をリネン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='linen')"}
{"in": "棒グラフをデピンク色で描画する", "out": "plt.bar(データ列x, データ列y, color='deeppink')"}
{"in": "nをn2だけ右シフトする", "out": "n >> n2"}
{"in": "リストをビン数nでビン分割して、namesのラベルをつける", "out": "pd.cut(aList, n, labels=names)"}
{"in": "option: ダイアモンドマーカーを使う", "out": "marker = 'D'"}
{"in": "option: 読み込まない列番号をnamesで指定する", "out": "skiprows = names"}
{"in": "折れ線グラフを半透明の点線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted', alpha=0.5)"}
{"in": "折れ線グラフの下三角マーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='v', markerfacecolor='b')"}
{"in": "year年day月を日付時刻に変換する", "out": "datetime.datetime(year=year, month=month, day=1)"}
{"in": "Pythonインタプリタの実行ファイルの絶対パス", "out": "sys.executable"}
{"in": "横棒グラフの色を白にする", "out": "plt.barh(データ列x, データ列y, color='white')"}
{"in": "データフレームのあるカラムが何秒か見る", "out": "df['列A'].dt.second"}
{"in": "散布図のダイアモンドマーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='#800080')"}
{"in": "ライム色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='lime')"}
{"in": "カウンタのそれぞれの項目を、そのカウントだけ列挙する", "out": "aCounter.elements()"}
{"in": "オーキッド色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='orchid')"}
{"in": "トマト色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='tomato')"}
{"in": "散布図をライトゴールドロディイエロー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "多次元データを主成分分析で淡く次元に次元削減する", "out": "sklearn.decomposition.PCA(n_components=三).fit_transform(多次元データ)"}
{"in": "ミディアムバイオレットレッド色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mediumvioletred')"}
{"in": "棒グラフの色をダークバイオレットにする", "out": "plt.bar(データ列x, データ列y, color='darkviolet')"}
{"in": "散布図に赤い左三角マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='r')"}
{"in": "データフレームを二つの列によってソートして、NaNを先頭にする", "out": "df.sort_values(by=['列A', '列B'], na_position='first')"}
{"in": "文字列が全て小文字か調べる", "out": "s.islower()"}
{"in": "横棒グラフの色をスプリンググリーンにする", "out": "plt.barh(データ列x, データ列y, color='springgreen')"}
{"in": "棒グラフの色をライトブルーにする", "out": "plt.bar(データ列x, データ列y, color='lightblue')"}
{"in": "再帰エラーを未然に防ぐ", "out": "sys.setrecursionlimit(1000000)"}
{"in": "折れ線グラフの色をミッドナイトブルーに設定する", "out": "plt.plot(データ列x, データ列y, color='midnightblue')"}
{"in": "ファイルを文字列の示すエンコーディングで書き込み用にオープンする]", "out": "open(filepath, mode='w', encoding=s)"}
{"in": "文字列内にひとつでも空白が含まれるか調べる", "out": "any(c.isspace() for c in s)"}
{"in": "横棒グラフをホットピンク色で描画する", "out": "plt.barh(データ列x, データ列y, color='hotpink')"}
{"in": "nがn2で割り切れるか調べる", "out": "n % n2 == 0"}
{"in": "ヒストグラムの線の種類を実線に設定する", "out": "plt.hist(データ列, linestyle='solid')"}
{"in": "折れ線グラフをライトサーモン色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightsalmon')"}
{"in": "パウダーブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='powderblue')"}
{"in": "横棒グラフをダークゴールデンロッド色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkgoldenrod')"}
{"in": "散布図を白色で描画する", "out": "plt.scatter(データ列x, データ列y, color='white')"}
{"in": "散布図に青いバツマーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='b')"}
{"in": "整数nの八進表現", "out": "oct(n)"}
{"in": "折れ線グラフのポイントマーカーの色を変更する", "out": "plt.plot(データ列x, データ列y, marker='.', markerfacecolor='#800080')"}
{"in": "文字列がリストに含まれないか調べる", "out": "element not in aList"}
{"in": "アンティークホワイト色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='antiquewhite')"}
{"in": "散布図をダークマゼンタ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkmagenta')"}
{"in": "option: オレンジ色を使う", "out": "color = 'orange'"}
{"in": "option: スラグレー色を使う", "out": "color = 'slategrey'"}
{"in": "文字列がリストに含まれるか調べる", "out": "element in aList"}
{"in": "データフレームの指定したカラムの最頻値", "out": "df['列A'].mode()"}
{"in": "折れ線グラフを一点鎖線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot')"}
{"in": "棒グラフの色をブランチドアーモンドにする", "out": "plt.bar(データ列x, データ列y, color='blanchedalmond')"}
{"in": "データ列をビン分割する", "out": "pd.cut(ds, aList)"}
{"in": "コーンフラワーブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='cornflowerblue')"}
{"in": "折れ線グラフの大バツマーカーを赤くする", "out": "plt.plot(データ列x, データ列y, marker='X', markerfacecolor='r')"}
{"in": "ユーザの入力を整数として受け取る", "out": "int(input())"}
{"in": "グリーンイエロー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='greenyellow')"}
{"in": "データフレームをグループ化し、ある列に対し最小値を求める", "out": "df.groupby('列A')['列B'].min()"}
{"in": "option: ダークスラテグレー色を使う", "out": "color = 'darkslategray'"}
{"in": "データフレームの指定したカラムの文字列を欠損値に変換する", "out": "df['列A'].replace(値, np.nan)"}
{"in": "データフレームの指定したカラムの母標準偏差", "out": "df['列A'].std(ddof=0)"}
{"in": "横棒グラフの色をゴールドにする", "out": "plt.barh(データ列x, データ列y, color='gold')"}
{"in": "文字列全体が正規表現に大文字・小文字を無視してマッチするか見る", "out": "re.fullmatch(pattern, s, flags=re.IGNORECASE)"}
{"in": "ライトコーラル色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightcoral')"}
{"in": "ロードされたモジュールの一覧", "out": "sys.modules"}
{"in": "横棒グラフをミントクリーム色で描画する", "out": "plt.barh(データ列x, データ列y, color='mintcream')"}
{"in": "実数を実数で割った余り", "out": "x % y"}
{"in": "棒グラフの色をアリスブルーにする", "out": "plt.bar(データ列x, データ列y, color='aliceblue')"}
{"in": "棒グラフをダークスラテグレー色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkslategray')"}
{"in": "折れ線グラフの色をダークマゼンタに設定する", "out": "plt.plot(データ列x, データ列y, color='darkmagenta')"}
{"in": "黒い下三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='v', c='k')"}
{"in": "真部分集合か調べる", "out": "aSet < aSet2"}
{"in": "散布図に黒い四角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='s', c='k')"}
{"in": "リストとリストについての散布図にrgbの大バツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='X', c=rgb)"}
{"in": "二つのリストから辞書", "out": "dict(zip(aList, aList2))"}
{"in": "ダークターコイズ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='darkturquoise')"}
{"in": "ダークグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkgreen')"}
{"in": "option: ライム色を使う", "out": "color = 'lime'"}
{"in": "折れ線グラフに赤いバツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='x', markerfacecolor='r')"}
{"in": "option: 赤色を使う", "out": "color = 'red'"}
{"in": "option: マーカーの色をライムグリーンにする", "out": "markerfacecolor = 'limegreen'"}
{"in": "辞書をコピーする", "out": "aDict.copy()"}
{"in": "データフレームの指定したカラムが正規分布からどの程度、歪んでいるか見る", "out": "df['列A'].kurt()"}
{"in": "棒グラフをダークシアン色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkcyan')"}
{"in": "ターコイズ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='turquoise')"}
{"in": "文字列リストを連結してひとつの文字列にする", "out": "''.join(map(str, iterable))"}
{"in": "データフレームのインデックスがnの行を抽出する", "out": "df.loc[n]"}
{"in": "option: ライトイエロー色を使う", "out": "color = 'lightyellow'"}
{"in": "横棒グラフを耐火レンガ色で描画する", "out": "plt.barh(データ列x, データ列y, color='firebrick')"}
{"in": "二つの変数をそれぞれ定義する", "out": "x, y = i, j"}
{"in": "日付データからn日分、減算する", "out": "aDate - datetime.timedelta(days=n)"}
{"in": "option: オリベドラブ色を使う", "out": "color = 'olivedrab'"}
{"in": "実数のn乗の実数剰余", "out": "pow(x, n, y)"}
{"in": "ヒストグラムの色をターコイズに設定する", "out": "plt.hist(データ列, color='turquoise')"}
{"in": "青紫色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='violet')"}
{"in": "横棒グラフの色をライトグリーンにする", "out": "plt.barh(データ列x, データ列y, color='lightseagreen')"}
{"in": "外れ値を除いた配列の分散を求める", "out": "scipy.stats.tvar(配列, limits=(下限, 上限), inclusive=(True, True))"}
{"in": "散布図の色をスノーにする", "out": "plt.scatter(データ列x, データ列y, color='snow')"}
{"in": "小麦色色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='wheat')"}
{"in": "折れ線グラフをコーンズシルク色で描画する", "out": "plt.plot(データ列x, データ列y, color='cornsilk')"}
{"in": "データフレームをインデックスによって昇順にソートする", "out": "df.sort_index(ascending=True)"}
{"in": "棒グラフの色をミディアムアクアマリンにする", "out": "plt.bar(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "折れ線グラフの丸マーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='o', markeredgewidth=2.5)"}
{"in": "データフレームの選択したカラムの不偏分散", "out": "df[['列A', '列B']].var(ddof=1)"}
{"in": "イテラブルを累加したイテラブル", "out": "itertools.accumulate(iterable)"}
{"in": "option: グラフの色をバリーウッドに設定する", "out": "color = 'burlywood'"}
{"in": "散布図に赤い星マーカーを描画する", "out": "plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='r')"}
{"in": "棒グラフの色をアクアマリンにする", "out": "plt.bar(データ列x, データ列y, color='aquamarine')"}
{"in": "文字列をセパレータで区切って、列挙する", "out": "s.split(sep)"}
{"in": "異なる列をキーとして二つのデータフレームを右ジョインする", "out": "pd.merge(df, df2, left_on='列A', right_on='列B', how='right')"}
{"in": "option: グラフの色をミディアムオーキッドに設定する", "out": "color = 'mediumorchid'"}
{"in": "ライトグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightseagreen')"}
{"in": "棒グラフの色をダーク・スラテグレーにする", "out": "plt.bar(データ列x, データ列y, color='darkslategrey')"}
{"in": "折れ線グラフを点線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dotted')"}
{"in": "ヒストグラムを描画して、半透明ににする", "out": "plt.hist(データ列x, alpha=0.5)"}
{"in": "散布図をグリーンイエロー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='greenyellow')"}
{"in": "option: 下三角マーカーを使う", "out": "marker = 'v'"}
{"in": "商と余りを同時に計算する", "out": "divmod(x, y)"}
{"in": "単位行列", "out": "np.eye(行数, 列数)"}
{"in": "数式の変数についてのn階微分を求める", "out": "sympy.diff(e, z, n)"}
{"in": "散布図をアイボリー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='ivory')"}
{"in": "円グラフの割合を表示する", "out": "plt.pie(データ列, startangle=90, autopct='%.2f%%')"}
{"in": "アリスブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='aliceblue')"}
{"in": "ライトスレイグレー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='lightslategray')"}
{"in": "イテラブルを文字列に変換して連結する", "out": "''.join(map(str, iterable))"}
{"in": "棒グラフをオレンジレッド色で描画する", "out": "plt.bar(データ列x, データ列y, color='orangered')"}
{"in": "リストとリストについての散布図に右三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='>')"}
{"in": "nにn2をかける", "out": "n * n2"}
{"in": "シエナ色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='sienna')"}
{"in": "数字を全部使う", "out": "string.digits"}
{"in": "データフレームを二つの列の値によってグループ化し、要約統計量を求める", "out": "df.groupby(['列A', '列B']).describe()"}
{"in": "カラーバーを横向きで付ける", "out": "plt.colorbar(orientation='horizontal')"}
{"in": "nの三乗", "out": "n ** 3"}
{"in": "モデルを学習する", "out": "model.fit(説明変数, 目的変数)"}
{"in": "クリムゾン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='crimson')"}
{"in": "両端キューから最初の要素を取り除く", "out": "deq.remove(element)"}
{"in": "ふたつの辞書を合体する", "out": "aDict | aDict2"}
{"in": "横棒グラフをダークスラテグレー色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkslategray')"}
{"in": "x,yの複素数", "out": "complex(x, y)"}
{"in": "文字列を改行で分割し、文字列リストに変換する", "out": "s.splitlines()"}
{"in": "棒グラフを青くする", "out": "plt.bar(データ列x, データ列y, color='b')"}
{"in": "赤い三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='^', c='r')"}
{"in": "option: バイナリ書き込みモードを使う", "out": "mode = 'wb'"}
{"in": "折れ線グラフをクリムゾン色で描画する", "out": "plt.plot(データ列x, データ列y, color='crimson')"}
{"in": "ロージーブラウン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='rosybrown')"}
{"in": "option: マーカーの線幅を変更する", "out": "markeredgewidth = 2.5"}
{"in": "配列の要素ごとの積", "out": "np.multiply(aArray, aArray2)"}
{"in": "棒グラフの色をシエナにする", "out": "plt.bar(データ列x, データ列y, color='sienna')"}
{"in": "シエナ色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='sienna')"}
{"in": "タプルの中の最大値", "out": "max(aTuple)"}
{"in": "棒グラフの色をビスクにする", "out": "plt.bar(データ列x, データ列y, color='bisque')"}
{"in": "配列の行ごとの合計値", "out": "np.sum(aArray, axis=1)"}
{"in": "デピンク色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='deeppink')"}
{"in": "データシリーズの要約統計量", "out": "ds.describe()"}
{"in": "棒グラフの色をアンティークホワイトにする", "out": "plt.bar(データ列x, データ列y, color='antiquewhite')"}
{"in": "整数nを十六進文字列に変換する", "out": "hex(n)[2:]"}
{"in": "棒グラフの色をスラグレーにする", "out": "plt.bar(データ列x, データ列y, color='slategray')"}
{"in": "散布図をフォレストグリーン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='forestgreen')"}
{"in": "散布図に星マーカーを使う", "out": "plt.scatter(データ列x, データ列y, marker='*')"}
{"in": "折れ線グラフの色を小麦色に設定する", "out": "plt.plot(データ列x, データ列y, color='wheat')"}
{"in": "散布図の色をリネンにする", "out": "plt.scatter(データ列x, データ列y, color='linen')"}
{"in": "配列のスカラー倍", "out": "aArray * n"}
{"in": "散布図をラベンダーブラッシュ色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lavenderblush')"}
{"in": "ふたつの列からグループ化し、平均値を求める", "out": "df.groupby(['列A', '列B'], as_index=False).mean()"}
{"in": "折れ線グラフの色をブランチドアーモンドに設定する", "out": "plt.plot(データ列x, データ列y, color='blanchedalmond')"}
{"in": "二進文字列を整数に変換する", "out": "int(s, 2)"}
{"in": "グラフにy=0の点線を付ける", "out": "plt.axhline(y=0, linestyle='dotted')"}
{"in": "横棒グラフをベージュ色で描画する", "out": "plt.barh(データ列x, データ列y, color='beige')"}
{"in": "ビスク色のヒストグラムを描画する", "out": "plt.hist(データ列, color='bisque')"}
{"in": "オールドレース色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='oldlace')"}
{"in": "option: ダーク・スラテグレー色を使う", "out": "color = 'darkslategrey'"}
{"in": "散布図を青緑色で描画する", "out": "plt.scatter(データ列x, データ列y, color='teal')"}
{"in": "オブジェクトのクラス", "out": "type(obj)"}
{"in": "ゴールド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='gold')"}
{"in": "データフレームのある列をドロップしてみる", "out": "df.drop('列A', axis=1)"}
{"in": "文字列を青色でプリントする", "out": "print(f'\\033[34m{value}\\033[0m')"}
{"in": "折れ線グラフをスレートブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='slateblue')"}
{"in": "データフレームをグループ化し、ある列に対し個数を求める", "out": "df.groupby('列A')['列B'].count()"}
{"in": "option: 茶色色を使う", "out": "color = 'brown'"}
{"in": "破線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashed')"}
{"in": "横棒グラフを暗い赤色で描画する", "out": "plt.barh(データ列x, データ列y, color='darkred')"}
{"in": "ある列の文字列が部分文字列で始まる行を抽出する", "out": "df[df['列A'].str.startswith(部分文字列)]"}
{"in": "シーグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='seagreen')"}
{"in": "オリベドラブ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='olivedrab')"}
{"in": "カーキ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='khaki')"}
{"in": "option: ピンク色を使う", "out": "color = 'pink'"}
{"in": "散布図のポイントマーカーの色を変更する", "out": "plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='#800080')"}
{"in": "リストに文字列を追加する", "out": "aList.append(element)"}
{"in": "入力から二つの浮動小数数を読む", "out": "A, B = map(float, input().split())"}
{"in": "文字列を黄色でプリントできる文字列に変換する", "out": "f'\\033[33m{value}\\033[0m'"}
{"in": "辞書をJSON形式の文字列に変換する", "out": "json.dumps(aDict, ensure_ascii=False)"}
{"in": "リストのn番目の", "out": "aList[n]"}
{"in": "タプルの中の最小値", "out": "min(aTuple)"}
{"in": "横棒グラフをミディアムアクアマリン色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumaquamarine')"}
{"in": "文字列を末尾から部分文字列で区切る", "out": "s.rsplit(sub)"}
{"in": "ヒストグラムでデータ列を可視化する", "out": "plt.hist(データ列)"}
{"in": "データフレームのひとつの列だけ説明変数にする", "out": "説明変数 = df[['列名']]"}
{"in": "パールバイオレットレッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='palevioletred')"}
{"in": "x,y,zにそれぞれn,n2,n3を代入する", "out": "x, y, z = n, n2, n3"}
{"in": "ヒストグラムをライトブルー色で描画する", "out": "plt.hist(データ列, color='lightblue')"}
{"in": "散布図のマーカーを丸にする", "out": "plt.scatter(データ列x, データ列y, marker='o')"}
{"in": "option: バツマーカーを描画する", "out": "marker = 'x'"}
{"in": "棒グラフを茶色色で描画する", "out": "plt.bar(データ列x, データ列y, color='brown')"}
{"in": "ファイルから1文字、読み込む", "out": "f.read(1)"}
{"in": "棒グラフの色をナバホホワイトにする", "out": "plt.bar(データ列x, データ列y, color='navajowhite')"}
{"in": "要素∉集合", "out": "element not in aSet"}
{"in": "option: グラフの色をミスティローズに設定する", "out": "color = 'mistyrose'"}
{"in": "ヒストグラムの色をシーグリーンに設定する", "out": "plt.hist(データ列, color='seagreen')"}
{"in": "折れ線グラフの色をミディアムバイオレットレッドに設定する", "out": "plt.plot(データ列x, データ列y, color='mediumvioletred')"}
{"in": "option: マーカーの色をダークシアンにする", "out": "markerfacecolor = 'darkcyan'"}
{"in": "文字列を黄色でプリントする", "out": "print(f'\\033[33m{value}\\033[0m')"}
{"in": "ヒストグラムの色をダークグレーに設定する", "out": "plt.hist(データ列, color='darkgray')"}
{"in": "スチールブルー色のヒストグラムを描画する", "out": "plt.hist(データ列, color='steelblue')"}
{"in": "データフレームの標準偏差", "out": "df.std()"}
{"in": "クラスが名前付きタプルか調べる", "out": "issubclass(C, tuple)"}
{"in": "横棒グラフをフローラルホワイト色で描画する", "out": "plt.barh(データ列x, データ列y, color='floralwhite')"}
{"in": "実数を整数に変換する", "out": "int(x)"}
{"in": "折れ線グラフの三角マーカーの線幅を変更する", "out": "plt.plot(データ列x, データ列y, marker='^', markeredgewidth=2.5)"}
{"in": "n個の整数列", "out": "list(range(n))"}
{"in": "データシリーズの欠損値を中央値で埋める", "out": "ds.fillna(ds.median())"}
{"in": "カウンタの項目数", "out": "len(aCounter)"}
{"in": "折れ線グラフの色をピーチパフに設定する", "out": "plt.plot(データ列x, データ列y, color='peachpuff')"}
{"in": "option: フクシア色を使う", "out": "color = 'fuchsia'"}
{"in": "リストとリストについての散布図に星マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='*')"}
{"in": "二つの文字列をケースを無視して比較する", "out": "s.casefold() < s2.casefold()"}
{"in": "データシリーズの標本標準偏差", "out": "ds.std(ddof=1)"}
{"in": "データフレームをソートして、新しいインデックスを加える", "out": "df.sort_values('キーとなる列').reset_index()"}
{"in": "横軸だけグリッド線", "out": "plt.grid(axis='x')"}
{"in": "横棒グラフを白色で描画する", "out": "plt.barh(データ列x, データ列y, color='white')"}
{"in": "三角印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='^')"}
{"in": "option: ホワイトスモーク色を使う", "out": "color = 'whitesmoke'"}
{"in": "selectorsでマスクされたイテラブルの要素を取り出す", "out": "itertools.compress(iterable, selectors=iterable2)"}
{"in": "棒グラフをディープスカイブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='deepskyblue')"}
{"in": "datetimeをインスタンス化する", "out": "datetime.datetime(年, 月, 日, 時, 分, 秒)"}
{"in": "黒い大バツマーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='X', c='k')"}
{"in": "リストを配列に変換する", "out": "np.array(aList)"}
{"in": "イエローグリーン色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='yellowgreen')"}
{"in": "二つのオブジェクトが等しいか調べる", "out": "obj == obj2"}
{"in": "データ列の推移を折れ線グラフにする", "out": "plt.plot(range(len(データ列)), データ列)"}
{"in": "データ列をリストを境界値としてビン分割する", "out": "pd.cut(ds, aList)"}
{"in": "グリッド線を白くする", "out": "plt.grid(color='w')"}
{"in": "円グラフの特定の要素だけ切り出す", "out": "plt.pie(データ列, startangle=90, explode=[0, 0.3, 0])"}
{"in": "ターコイズ色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='turquoise')"}
{"in": "散布図の色をアクアマリンにする", "out": "plt.scatter(データ列x, データ列y, color='aquamarine')"}
{"in": "散布図を暗い赤色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darkred')"}
{"in": "散布図の色をレベッカパープルにする", "out": "plt.scatter(データ列x, データ列y, color='rebeccapurple')"}
{"in": "モデルの当てはまりの良さを求める", "out": "sklearn.metrics.r2_score(目的変数, model.predict(説明変数))"}
{"in": "折れ線グラフをアイボリー色で描画する", "out": "plt.plot(データ列x, データ列y, color='ivory')"}
{"in": "横棒グラフの色を茶色にする", "out": "plt.barh(データ列x, データ列y, color='brown')"}
{"in": "タプルの先頭のn要素を取り除く", "out": "aTuple[n:]"}
{"in": "散布図の色をライトスレイグレーにする", "out": "plt.scatter(データ列x, データ列y, color='lightslategray')"}
{"in": "アクア色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='aqua')"}
{"in": "折れ線グラフをラベンダーブラッシュ色で描画する", "out": "plt.plot(データ列x, データ列y, color='lavenderblush')"}
{"in": "折れ線グラフをダークマゼンタ色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkmagenta')"}
{"in": "option: グラフの色をアイボリーに設定する", "out": "color = 'ivory'"}
{"in": "折れ線グラフを半透明の一点鎖線で描画する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot', alpha=0.5)"}
{"in": "折れ線グラフの色をホットピンクに設定する", "out": "plt.plot(データ列x, データ列y, color='hotpink')"}
{"in": "ペアリストpairsからカウンタを作る", "out": "collections.Counter(dict(pairs))"}
{"in": "アクア色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='aqua')"}
{"in": "predicateFuncが真となるイテラブルの要素", "out": "itertools.takewhile(predicateFunc, iterable)"}
{"in": "配列の内積", "out": "np.dot(aArray, aArray2)"}
{"in": "データフレームのn行まで抽出する", "out": "df[:n]"}
{"in": "折れ線グラフのマーカーを星にする", "out": "plt.plot(データ列x, データ列y, marker='*')"}
{"in": "インディゴ色のヒストグラムを描画する", "out": "plt.hist(データ列, color='indigo')"}
{"in": "データフレームの選択したカラムの中にある文字列と文字列の合計を数える", "out": "df[['列A', '列B']].isin([value, value2]).sum()"}
{"in": "ヒストグラムをディムグレー色で描画する", "out": "plt.hist(データ列, color='dimgray')"}
{"in": "ライトスカイブルー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightskyblue')"}
{"in": "文字列の右側からタブを取り除く", "out": "s.rstrip('\\t')"}
{"in": "option: グラフの色をブランチドアーモンドに設定する", "out": "color = 'blanchedalmond'"}
{"in": "棒グラフの色をライムグリーンにする", "out": "plt.bar(データ列x, データ列y, color='limegreen')"}
{"in": "ダークシアグリーン色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='darkseagreen')"}
{"in": "option: グラフの色をダークスラテグレーに設定する", "out": "color = 'darkslategray'"}
{"in": "ヒストグラムの色を耐火レンガに設定する", "out": "plt.hist(データ列, color='firebrick')"}
{"in": "折れ線グラフの色をダークグレーに設定する", "out": "plt.plot(データ列x, データ列y, color='darkgrey')"}
{"in": "ディムグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='dimgrey')"}
{"in": "キーが辞書に存在するか調べる", "out": "key in aDict"}
{"in": "書式をargsを引数としてフォーマットする", "out": "formatText.format(*args)"}
{"in": "option: セパレータをカンマにする", "out": "sep = ','"}
{"in": "データフレームの相関行列をヒートマップで描画する", "out": "sns.heatmap(df.corr())"}
{"in": "リストを複製する", "out": "aList.copy()"}
{"in": "フクシア色のヒストグラムを描画する", "out": "plt.hist(データ列, color='fuchsia')"}
{"in": "散布図をディムグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='dimgrey')"}
{"in": "タン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='tan')"}
{"in": "2を底とする実数の対数", "out": "math.log2(x)"}
{"in": "プラットホームがLinuxか調べる", "out": "sys.platform.startswith('linux')"}
{"in": "データフレームの中の列をリストを境界値としてビン分割する", "out": "pd.cut(df[col], aList)"}
{"in": "n割るn2の切り上げ", "out": "(n + n2 - 1) // n2"}
{"in": "ヒストグラムの色をライトサーモンに設定する", "out": "plt.hist(データ列, color='lightsalmon')"}
{"in": "グレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='gray')"}
{"in": "ブラック色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='black')"}
{"in": "散布図に黒いバツマーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='x', c='k')"}
{"in": "グラフのカラーパレットを色差別なくする", "out": "sns.set(pallete='colorblind')"}
{"in": "ダークバイオレット色のヒストグラムを描画する", "out": "plt.hist(データ列, color='darkviolet')"}
{"in": "折れ線グラフをライトグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='lightgray')"}
{"in": "折れ線グラフの色をダークカーキに設定する", "out": "plt.plot(データ列x, データ列y, color='darkkhaki')"}
{"in": "赤色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='red')"}
{"in": "横棒グラフをサンディーブラウン色で描画する", "out": "plt.barh(データ列x, データ列y, color='sandybrown')"}
{"in": "横棒グラフをミディアムスプリンググリーン色で描画する", "out": "plt.barh(データ列x, データ列y, color='mediumspringgreen')"}
{"in": "散布図に三角マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='^')"}
{"in": "ヒストグラムの色をパールバイオレットレッドに設定する", "out": "plt.hist(データ列, color='palevioletred')"}
{"in": "リストとリストについて散布図を描画して、ポイントマーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='.', c=rgb)"}
{"in": "散布図を青くする", "out": "plt.scatter(データ列x, データ列y, color='b')"}
{"in": "文字列はPythonのキーワードか調べる", "out": "keyword.iskeyword(s)"}
{"in": "フローラルホワイト色のヒストグラムを描画する", "out": "plt.hist(データ列, color='floralwhite')"}
{"in": "一方に含まれ、他方に含まれない集合", "out": "aSet.difference(aSet2)"}
{"in": "横棒グラフの色をスラグレーにする", "out": "plt.barh(データ列x, データ列y, color='slategray')"}
{"in": "イテラブルを配列に変換する", "out": "np.array(iterable)"}
{"in": "option: マーカーの色をチョコレートにする", "out": "markerfacecolor = 'chocolate'"}
{"in": "option: ミディアムパープル色を使う", "out": "color = 'mediumpurple'"}
{"in": "横棒グラフの色をシーグリーンにする", "out": "plt.barh(データ列x, データ列y, color='seagreen')"}
{"in": "文字列はタイトルケースか調べる", "out": "s.istitle()"}
{"in": "ミントクリーム色のヒストグラムを描画する", "out": "plt.hist(データ列, color='mintcream')"}
{"in": "列名を指定して二つのデータフレームをジョインする", "out": "pd.merge(df, df2, on='列A')"}
{"in": "option: ライトコーラル色を使う", "out": "color = 'lightcoral'"}
{"in": "データフレームをグループ化し、それぞれの標準偏差を求める", "out": "df.groupby('列A').std()"}
{"in": "option: マルーン色を使う", "out": "color = 'maroon'"}
{"in": "データフレームの選択した列の相関行列", "out": "df[['列A', '列B']].corr()"}
{"in": "数式を変数についてn階微分する", "out": "sympy.diff(e, z, n)"}
{"in": "option: 追加モードを使う", "out": "mode = 'a'"}
{"in": "ヒストグラムと勾配ブースティングで回帰分析を行う", "out": "model = sklearn.ensemble.HistGradientBoostingRegressor()"}
{"in": "折れ線グラフに赤いポイントマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='.', markerfacecolor='r')"}
{"in": "実数の逆双曲線正弦", "out": "math.asinh(x)"}
{"in": "オプションで、標準エラーを出力にする", "out": "file = sys.stderr"}
{"in": "ネイピア数", "out": "math.e"}
{"in": "パーセプトロンでクラス分類を行う", "out": "model = sklearn.neural_network.MLPClassifier(hidden_layer_sizes=(10, 10))"}
{"in": "xの小数点以下'2'桁までの文字列に変換する", "out": "':.2f'.format(x)"}
{"in": "option: グラフの色を赤に設定する", "out": "color = 'red'"}
{"in": "option: ミディアムバイオレットレッド色を使う", "out": "color = 'mediumvioletred'"}
{"in": "散布図に星マーカーを使う", "out": "plt.plot(データ列x, データ列y, marker='*')"}
{"in": "データ列の散らばりを可視化する", "out": "plt.scatter(データ列x, データ列y)"}
{"in": "グラフのフォントを日本語表示に設定する", "out": "sns.set(font='IPAexGothic')"}
{"in": "等差数列を配列に変換する", "out": "np.arange(開始値, 終了値, 等差)"}
{"in": "ペールグリーン色の散布図を描画する", "out": "plt.scatter(データ列x, データ列y, color='palegreen')"}
{"in": "散布図をダークサーモン色で描画する", "out": "plt.scatter(データ列x, データ列y, color='darksalmon')"}
{"in": "ミディアムスレートブルー色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='mediumslateblue')"}
{"in": "option: マーカーの色をダークグレーにする", "out": "markerfacecolor = 'darkgrey'"}
{"in": "折れ線グラフをダーク・スラテグレー色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkslategrey')"}
{"in": "折れ線グラフを紺色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkblue')"}
{"in": "散布図の色をダークカーキにする", "out": "plt.scatter(データ列x, データ列y, color='darkkhaki')"}
{"in": "タプルの長さ", "out": "len(aTuple)"}
{"in": "マルーン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='maroon')"}
{"in": "タプルのn番目の", "out": "aTuple[n]"}
{"in": "パープル色のヒストグラムを描画する", "out": "plt.hist(データ列, color='purple')"}
{"in": "データフレームの選択したカラムの中にいくつ文字列があるか数える", "out": "df[['列A', '列B']].isin([value]).sum()"}
{"in": "ファイルをSJISで書き込み用にオープンする]", "out": "open(filepath, mode='w', encoding='shift_jis')"}
{"in": "リストとリストについての散布図にrgbの左三角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='<', c=rgb)"}
{"in": "散布図の色をパールバイオレットレッドにする", "out": "plt.scatter(データ列x, データ列y, color='palevioletred')"}
{"in": "文字列が部分文字列で終わるか調べる", "out": "s.endswith(sub)"}
{"in": "オレンジレッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='orangered')"}
{"in": "データシリーズの母標準偏差", "out": "ds.std(ddof=0)"}
{"in": "日付時刻データが日付時刻データより前か調べる", "out": "aDatetime < aDatetime2"}
{"in": "折れ線グラフの丸マーカーの大きさを変更する", "out": "plt.plot(データ列x, データ列y, marker='o', markersize=2.0)"}
{"in": "ダークグレー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='darkgrey')"}
{"in": "オプションで、標準出力を出力にする", "out": "file = sys.stdout"}
{"in": "キーが辞書上で未定義か調べる", "out": "key not in aDict"}
{"in": "nわるn2", "out": "n / n2"}
{"in": "二点間のユークリッド距離", "out": "math.dist(point, point2)"}
{"in": "折れ線グラフの色をダークターコイズに設定する", "out": "plt.plot(データ列x, データ列y, color='darkturquoise')"}
{"in": "グラフの中の日本語フォントを有効にする", "out": "sns.set(font='IPAexGothic')"}
{"in": "ある列のカテゴリごとの分散", "out": "df.groupby('列A').var()"}
{"in": "折れ線グラフをミッドナイトブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='midnightblue')"}
{"in": "データシリーズの中にいくつ文字列があるか数える", "out": "ds.isin([value]).sum()"}
{"in": "棒グラフの色をフォレストグリーンにする", "out": "plt.bar(データ列x, データ列y, color='forestgreen')"}
{"in": "リストとリストについての散布図に四角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='s')"}
{"in": "option: タン色を使う", "out": "color = 'tan'"}
{"in": "データフレームを二つの列によってグループ化して、グループ名を列挙する", "out": "[name for name, _ in df.groupby(['列A', '列B'])]"}
{"in": "折れ線グラフのマーカーを丸にする", "out": "plt.plot(データ列x, データ列y, marker='o')"}
{"in": "option: ライトサーモン色を使う", "out": "color = 'lightsalmon'"}
{"in": "折れ線グラフをダークターコイズ色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkturquoise')"}
{"in": "ライトゴールドロディイエロー色の線グラフを描画する", "out": "plt.plot(データ列x, データ列y, color='lightgoldenrodyellow')"}
{"in": "コーンフラワーブルー色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='cornflowerblue')"}
{"in": "横棒グラフの色をベージュにする", "out": "plt.barh(データ列x, データ列y, color='beige')"}
{"in": "棒グラフをフォレストグリーン色で描画する", "out": "plt.bar(データ列x, データ列y, color='forestgreen')"}
{"in": "横棒グラフの色を紺にする", "out": "plt.barh(データ列x, データ列y, color='darkblue')"}
{"in": "option: 全体を計算対象にする", "out": "axis = None"}
{"in": "棒グラフの色をドジャーブルーにする", "out": "plt.bar(データ列x, データ列y, color='dodgerblue')"}
{"in": "横棒グラフを青色で描画する", "out": "plt.barh(データ列x, データ列y, color='blue')"}
{"in": "黒い丸マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='o', c='k')"}
{"in": "データフレームの選択したカラムの第三四分位数", "out": "df[['列A', '列B']].quantile(0.75)"}
{"in": "ヒストグラムの色をパレットトルコイズに設定する", "out": "plt.hist(データ列, color='paleturquoise')"}
{"in": "リストとリストについて散布図を描画して、ダイアモンドマーカーの色をrgbに設定する", "out": "plt.plot(データ列x, データ列y, marker='D', c=rgb)"}
{"in": "option: デピンク色を使う", "out": "color = 'deeppink'"}
{"in": "棒グラフの色をミスティローズにする", "out": "plt.bar(データ列x, データ列y, color='mistyrose')"}
{"in": "シアン色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='cyan')"}
{"in": "散布図の色をゴールドにする", "out": "plt.scatter(データ列x, データ列y, color='gold')"}
{"in": "折れ線グラフの右三角マーカーを青くする", "out": "plt.plot(データ列x, データ列y, marker='>', markerfacecolor='b')"}
{"in": "色付きの実線でデータ列の推移を描画する", "out": "plt.plot(データ列x, データ列y, linestyle='solid', color='#800080')"}
{"in": "データフレームの散布図をグループ化して横に並べる", "out": "sns.relplot(data=df, x='列名', y='列名', hue='カテゴリ列', col='カテゴリ列')"}
{"in": "要素が全て初期値の配列", "out": "np.full(要素数, 初期値, dtype=np.int)"}
{"in": "棒グラフをシスル色で描画する", "out": "plt.bar(データ列x, データ列y, color='thistle')"}
{"in": "option: グラフの色をダークオリーブグリーンに設定する", "out": "color = 'darkolivegreen'"}
{"in": "散布図をブラック色で描画する", "out": "plt.scatter(データ列x, データ列y, color='black')"}
{"in": "ダイアモンド印でデータ列の折れ線グラフを描画する", "out": "plt.plot(データ列x, データ列y, marker='D')"}
{"in": "option: マーカーの色をシャルトリューズにする", "out": "markerfacecolor = 'chartreuse'"}
{"in": "折れ線グラフに黒い四角マーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='s', markerfacecolor='k')"}
{"in": "ある列の文字列が正規表現にマッチする行を抽出する", "out": "df[df['列A'].str.match(正規表現)]"}
{"in": "データフレームの指定したカラムの値を正規表現patternでまとめてreplに置き換える", "out": "df['列A'].replace(pattern, repl, regex=True)"}
{"in": "配列の幾何平均を求める", "out": "scipy.stats.gmean(配列)"}
{"in": "横棒グラフの色をトマトにする", "out": "plt.barh(データ列x, データ列y, color='tomato')"}
{"in": "横棒グラフの色をブルーバイオレットにする", "out": "plt.barh(データ列x, データ列y, color='blueviolet')"}
{"in": "棒グラフをダークスレートブルー色で描画する", "out": "plt.bar(データ列x, データ列y, color='darkslateblue')"}
{"in": "NaN", "out": "math.nan"}
{"in": "要素が集合のメンバーでないか調べる", "out": "element not in aSet"}
{"in": "デピンク色のヒストグラムを描画する", "out": "plt.hist(データ列, color='deeppink')"}
{"in": "グラフの描画を見やすくする", "out": "import seaborn as sns"}
{"in": "option: ダークバイオレット色を使う", "out": "color = 'darkviolet'"}
{"in": "option: グレー色を使う", "out": "color = 'gray'"}
{"in": "ゴールド色の横棒グラフを描画する", "out": "plt.barh(データ列x, データ列y, color='gold')"}
{"in": "データフレームを欠損値を含めてある列の値でグループ化する", "out": "df.groupby('列A', dropna=False)"}
{"in": "三角マーカーで散布図を描画する", "out": "plt.plot(データ列x, データ列y, marker='^')"}
{"in": "棒グラフの色をライトスカイブルーにする", "out": "plt.bar(データ列x, データ列y, color='lightskyblue')"}
{"in": "確率的勾配降下で回帰分析を行う", "out": "model = sklearn.linear_model.SGDRegressor()"}
{"in": "横棒グラフをスチールブルー色で描画する", "out": "plt.barh(データ列x, データ列y, color='steelblue')"}
{"in": "本日の月数", "out": "datetime.datetime.today().month"}
{"in": "オブジェクトは辞書クラスか調べる", "out": "isinstance(obj, dict)"}
{"in": "日付時刻データにn週間分、加算する", "out": "aDatetime + datetime.timedelta(weeks=n)"}
{"in": "ライトグリーン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='lightgreen')"}
{"in": "散布図をライトスレイグレー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='lightslategray')"}
{"in": "kを底とする実数の対数", "out": "math.log(x, k)"}
{"in": "イテラブルの長さnの順列", "out": "itertools.permutations(iterable, n)"}
{"in": "文字列を緑色にする", "out": "f'\\033[32m{value}\\033[0m'"}
{"in": "横棒グラフの色を小麦色にする", "out": "plt.barh(データ列x, データ列y, color='wheat')"}
{"in": "データ列間の平均二乗誤差を求める", "out": "sklearn.metrics.mean_squared_error(データ列, データ列2)"}
{"in": "ヒストグラムをベージュ色で描画する", "out": "plt.hist(データ列, color='beige')"}
{"in": "折れ線グラフの線の種類を一点鎖線に設定する", "out": "plt.plot(データ列x, データ列y, linestyle='dashbot')"}
{"in": "サドルブラウン色のヒストグラムを描画する", "out": "plt.hist(データ列, color='saddlebrown')"}
{"in": "折れ線グラフをダークスレートブルー色で描画する", "out": "plt.plot(データ列x, データ列y, color='darkslateblue')"}
{"in": "バリーウッド色の棒グラフを描画する", "out": "plt.bar(データ列x, データ列y, color='burlywood')"}
{"in": "リストとリストについての散布図に赤いバツマーカーを描画する", "out": "plt.plot(データ列x, データ列y, marker='x', c='r')"}
{"in": "散布図をシルバー色で描画する", "out": "plt.scatter(データ列x, データ列y, color='silver')"}
